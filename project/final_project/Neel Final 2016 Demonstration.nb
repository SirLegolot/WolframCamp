(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     26610,        740]
NotebookOptionsPosition[     25909,        710]
NotebookOutlinePosition[     26252,        725]
CellTagsIndexPosition[     26209,        722]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["Enter title here",
 FontColor->GrayLevel[1]]], "Section",
 CellChangeTimes->{{3.583107615045533*^9, 3.5831076156347322`*^9}, {
  3.583107769411003*^9, 3.583107770887882*^9}},
 TextAlignment->Center,
 Background->RGBColor[1, 0.5, 0]],

Cell[CellGroupData[{

Cell["\<\
Neel Gandhi
July 8, 2016\
\>", "Subsection",
 CellChangeTimes->{{3.583107811679845*^9, 3.583107818495682*^9}, {
  3.614076250921157*^9, 3.614076251309596*^9}, {3.614076365379232*^9, 
  3.6140763657428102`*^9}, {3.645808331333742*^9, 3.6458083333929453`*^9}, {
  3.675433602088788*^9, 3.6754336039359727`*^9}, {3.676892157360865*^9, 
  3.6768921598583975`*^9}},
 TextAlignment->Center],

Cell["\<\
This project presents two famous types of algorithms called the 196 algorithm \
and the RATS sequence. The 196-algorithm, also known as the reverse-and-add \
algorithm is the  process by which a number is taken, reversed and added to \
the original number. It is conjectured that all numbers in base ten which are \
iterated using this algorithm should end up in a palindrome. 196 is the \
lowest number in base ten which might not result in a palindrome. Numbers \
that do not end up by a palindrome using this algorithm are called Lychrel \
numbers. !96 is a possible Lychrel number. The RATS sequence adds an extra \
step to the 196 algorithm by reversing a number, adding it to the original \
umber and then sorting the digits in numerical order. Another iterative \
process in this demonstration is when the digits are reordered and then added \
to the original number. (i.e. the n last numbers are put to the front of the \
number and then added to the original number). The user can perform these \
algorithms with any number from 10-100,000 in any base 1-10 and can also \
represent them in any base 1-10.
The tabs at the top show the different algorithms. The palindrome checker \
will stop when it reaches a palindrome. The 196 algorithm, Reorder algorithm \
and the RATS sequence tabs will iterate as much as the user decides. The \
number of digits reordered slider only works for the reorder algorithm.\
\>", "Text",
 CellChangeTimes->{{3.5831079212333317`*^9, 3.5831079344389668`*^9}, 
   3.6768922596453543`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Initialization code",
 FontColor->GrayLevel[1]]], "Section",
 InitializationGroup->True,
 CellChangeTimes->{{3.58310782932751*^9, 3.583107831710331*^9}},
 TextAlignment->Center,
 Background->RGBColor[1, 0.5, 0]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"repeat", "[", 
   RowBox[{
   "i_Integer", ",", "m_Integer", ",", "b_Integer", ",", "v_Integer"}], "]"}],
   ":=", 
  RowBox[{"ArrayPlot", "[", 
   RowBox[{"PadLeft", "[", 
    RowBox[{"IntegerDigits", "[", 
     RowBox[{
      RowBox[{"NestList", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"IntegerReverse", "[", 
            RowBox[{"#", ",", "b"}], "]"}], "+", "#"}], ")"}], "&"}], ",", 
        "i", ",", "m"}], "]"}], ",", "v"}], "]"}], "]"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"listRepeat", "[", 
   RowBox[{"i_Integer", ",", "m_Integer", ",", "b_Integer"}], "]"}], ":=", 
  RowBox[{"Pane", "[", 
   RowBox[{
    RowBox[{"Column", "[", 
     RowBox[{"NestList", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"IntegerReverse", "[", 
           RowBox[{"#", ",", "b"}], "]"}], "+", "#"}], ")"}], "&"}], ",", "i",
        ",", "m"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"270", ",", "255"}], "}"}], ",", 
    RowBox[{"Scrollbars", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"False", ",", "True"}], "}"}]}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"listRepeat2", "[", 
   RowBox[{"i_Integer", ",", "m_Integer", ",", "b_Integer"}], "]"}], ":=", 
  RowBox[{"Pane", "[", 
   RowBox[{
    RowBox[{"Column", "[", 
     RowBox[{"FromDigits", " ", "/@", " ", 
      RowBox[{"IntegerDigits", "[", 
       RowBox[{
        RowBox[{"NestList", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"IntegerReverse", "[", 
              RowBox[{"#", ",", "b"}], "]"}], "+", "#"}], ")"}], "&"}], ",", 
          "i", ",", "m"}], "]"}], ",", "b"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"270", ",", "255"}], "}"}], ",", 
    RowBox[{"Scrollbars", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"False", ",", " ", "True"}], "}"}]}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"countRepeat", "[", 
   RowBox[{"i_Integer", ",", "m_Integer", ",", "b_Integer"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Length", "[", 
    RowBox[{"NestList", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"IntegerReverse", "[", 
          RowBox[{"#", ",", "b"}], "]"}], "+", "#"}], ")"}], "&"}], ",", "i", 
      ",", "m"}], "]"}], "]"}], "-", "1"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"finalRepeat", "[", 
    RowBox[{
    "i_Integer", ",", "m_Integer", ",", "b_Integer", ",", "v_Integer"}], 
    "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"repeat", "[", 
      RowBox[{"i", ",", "m", ",", "b", ",", "v"}], "]"}], ",", 
     RowBox[{"listRepeat", "[", 
      RowBox[{"i", ",", "m", ",", "b"}], "]"}], ",", 
     RowBox[{"listRepeat2", "[", 
      RowBox[{"i", ",", "m", ",", "b"}], "]"}], ",", 
     RowBox[{"countRepeat", "[", 
      RowBox[{"i", ",", "m", ",", "b"}], "]"}]}], "}"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"countPalindrome", "[", 
   RowBox[{"i_Integer", ",", "m_Integer", ",", "b_Integer"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Length", "[", 
    RowBox[{"NestWhileList", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"IntegerReverse", "[", 
          RowBox[{"#", ",", "b"}], "]"}], "+", "#"}], ")"}], "&"}], ",", "i", 
      ",", 
      RowBox[{
       RowBox[{
        RowBox[{"IntegerDigits", "[", 
         RowBox[{
          RowBox[{"IntegerReverse", "[", 
           RowBox[{"#", ",", "b"}], "]"}], ",", "b"}], "]"}], "=!=", 
        RowBox[{"IntegerDigits", "[", 
         RowBox[{"#", ",", "b"}], "]"}]}], "&"}], ",", "1", ",", "m"}], "]"}],
     "]"}], "-", "1"}]}], "\n", 
 RowBox[{
  RowBox[{"listPalindrome", "[", 
   RowBox[{"i_Integer", ",", "m_Integer", ",", "b_Integer"}], "]"}], ":=", 
  RowBox[{"Pane", "[", 
   RowBox[{
    RowBox[{"Column", "[", 
     RowBox[{"NestWhileList", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"IntegerReverse", "[", 
           RowBox[{"#", ",", "b"}], "]"}], "+", "#"}], ")"}], "&"}], ",", "i",
        ",", 
       RowBox[{
        RowBox[{
         RowBox[{"IntegerDigits", "[", 
          RowBox[{
           RowBox[{"IntegerReverse", "[", 
            RowBox[{"#", ",", "b"}], "]"}], ",", "b"}], "]"}], "=!=", 
         RowBox[{"IntegerDigits", "[", 
          RowBox[{"#", ",", "b"}], "]"}]}], "&"}], ",", "1", ",", "m"}], 
      "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"270", ",", "255"}], "}"}], ",", 
    RowBox[{"Scrollbars", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"False", ",", " ", "True"}], "}"}]}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"listPalindrome2", "[", 
   RowBox[{"i_Integer", ",", "m_Integer", ",", "b_Integer"}], "]"}], ":=", 
  RowBox[{"Pane", "[", 
   RowBox[{
    RowBox[{"Column", "[", 
     RowBox[{"FromDigits", " ", "/@", " ", 
      RowBox[{"IntegerDigits", "[", 
       RowBox[{
        RowBox[{"NestWhileList", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"IntegerReverse", "[", 
              RowBox[{"#", ",", "b"}], "]"}], "+", "#"}], ")"}], "&"}], ",", 
          "i", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"IntegerDigits", "[", 
             RowBox[{
              RowBox[{"IntegerReverse", "[", 
               RowBox[{"#", ",", "b"}], "]"}], ",", "b"}], "]"}], "=!=", 
            RowBox[{"IntegerDigits", "[", 
             RowBox[{"#", ",", "b"}], "]"}]}], "&"}], ",", "1", ",", "m"}], 
         "]"}], ",", "b"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"270", ",", "255"}], "}"}], ",", 
    RowBox[{"Scrollbars", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"False", ",", " ", "True"}], "}"}]}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"palindrome", "[", 
   RowBox[{
   "i_Integer", ",", "m_Integer", ",", "b_Integer", ",", "v_Integer"}], "]"}],
   ":=", 
  RowBox[{"ArrayPlot", "[", 
   RowBox[{"PadLeft", "[", 
    RowBox[{"IntegerDigits", "[", 
     RowBox[{
      RowBox[{"NestWhileList", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"IntegerReverse", "[", 
            RowBox[{"#", ",", "b"}], "]"}], "+", "#"}], ")"}], "&"}], ",", 
        "i", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"IntegerDigits", "[", 
           RowBox[{
            RowBox[{"IntegerReverse", "[", 
             RowBox[{"#", ",", "b"}], "]"}], ",", "b"}], "]"}], "=!=", 
          RowBox[{"IntegerDigits", "[", 
           RowBox[{"#", ",", "b"}], "]"}]}], "&"}], ",", "1", ",", "m"}], 
       "]"}], ",", "v"}], "]"}], "]"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"finalPalindrome", "[", 
    RowBox[{
    "i_Integer", ",", "m_Integer", ",", "b_Integer", ",", "v_Integer"}], 
    "]"}], ":=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"palindrome", "[", 
      RowBox[{"i", ",", "m", ",", "b", ",", "v"}], "]"}], ",", 
     RowBox[{"listPalindrome", "[", 
      RowBox[{"i", ",", "m", ",", "b"}], "]"}], ",", 
     RowBox[{"listPalindrome2", "[", 
      RowBox[{"i", ",", "m", ",", "b"}], "]"}], ",", 
     RowBox[{"countPalindrome", "[", 
      RowBox[{"i", ",", "m", ",", "b"}], "]"}]}], "}"}]}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"rat", "[", 
   RowBox[{
   "i_Integer", ",", "m_Integer", ",", "b_Integer", ",", "v_Integer"}], "]"}],
   ":=", 
  RowBox[{"ArrayPlot", "[", 
   RowBox[{"PadLeft", "[", 
    RowBox[{"IntegerDigits", "[", 
     RowBox[{
      RowBox[{"NestList", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"FromDigits", "[", 
           RowBox[{"Sort", "[", 
            RowBox[{"IntegerDigits", "[", 
             RowBox[{
              RowBox[{"IntegerReverse", "[", 
               RowBox[{"#", ",", "b"}], "]"}], "+", "#"}], "]"}], "]"}], 
           "]"}], ")"}], "&"}], ",", "i", ",", "m"}], "]"}], ",", "v"}], 
     "]"}], "]"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"countRat", "[", 
   RowBox[{"i_Integer", ",", "m_Integer", ",", "b_Integer"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Length", "[", 
    RowBox[{"NestList", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"FromDigits", "[", 
         RowBox[{"Sort", "[", 
          RowBox[{"IntegerDigits", "[", 
           RowBox[{
            RowBox[{"IntegerReverse", "[", 
             RowBox[{"#", ",", "b"}], "]"}], "+", "#"}], "]"}], "]"}], "]"}], 
        ")"}], "&"}], ",", "i", ",", "m"}], "]"}], "]"}], "-", 
   "1"}]}], "\n", 
 RowBox[{
  RowBox[{"listRat", "[", 
   RowBox[{"i_Integer", ",", "m_Integer", ",", "b_Integer"}], "]"}], ":=", 
  RowBox[{"Pane", "[", 
   RowBox[{
    RowBox[{"Column", "[", 
     RowBox[{"NestList", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"FromDigits", "[", 
          RowBox[{"Sort", "[", 
           RowBox[{"IntegerDigits", "[", 
            RowBox[{
             RowBox[{"IntegerReverse", "[", 
              RowBox[{"#", ",", "b"}], "]"}], "+", "#"}], "]"}], "]"}], "]"}],
          ")"}], "&"}], ",", "i", ",", "m"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"270", ",", "255"}], "}"}], ",", 
    RowBox[{"Scrollbars", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"False", ",", " ", "True"}], "}"}]}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"listRat2", "[", 
   RowBox[{"i_Integer", ",", "m_Integer", ",", "b_Integer"}], "]"}], ":=", 
  RowBox[{"Pane", "[", 
   RowBox[{
    RowBox[{"Column", "[", 
     RowBox[{"FromDigits", " ", "/@", " ", 
      RowBox[{"IntegerDigits", "[", 
       RowBox[{
        RowBox[{"NestList", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"FromDigits", "[", 
             RowBox[{"Sort", "[", 
              RowBox[{"IntegerDigits", "[", 
               RowBox[{
                RowBox[{"IntegerReverse", "[", 
                 RowBox[{"#", ",", "b"}], "]"}], "+", "#"}], "]"}], "]"}], 
             "]"}], ")"}], "&"}], ",", "i", ",", "m"}], "]"}], ",", "b"}], 
       "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"270", ",", "255"}], "}"}], ",", 
    RowBox[{"Scrollbars", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"False", ",", " ", "True"}], "}"}]}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"finalRat", "[", 
   RowBox[{
   "i_Integer", ",", "m_Integer", ",", "b_Integer", ",", "v_Integer"}], "]"}],
   ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"rat", "[", 
     RowBox[{"i", ",", "m", ",", "b", ",", "v"}], "]"}], ",", 
    RowBox[{"listRat", "[", 
     RowBox[{"i", ",", "m", ",", "b"}], "]"}], ",", 
    RowBox[{"listRat2", "[", 
     RowBox[{"i", ",", "m", ",", "b"}], "]"}], ",", 
    RowBox[{"countRat", "[", 
     RowBox[{"i", ",", "m", ",", "b"}], "]"}], ",", 
    RowBox[{"ftrRat", "[", 
     RowBox[{"i", ",", "m", ",", "b"}], "]"}]}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ftrRat", "[", 
    RowBox[{"i_Integer", ",", "m_Integer", ",", "b_Integer"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"FindTransientRepeat", "[", 
        RowBox[{
         RowBox[{"NestList", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"FromDigits", "[", 
              RowBox[{"Sort", "[", 
               RowBox[{"IntegerDigits", "[", 
                RowBox[{
                 RowBox[{"IntegerReverse", "[", 
                  RowBox[{"#", ",", "b"}], "]"}], "+", "#"}], "]"}], "]"}], 
              "]"}], ")"}], "&"}], ",", "i", ",", "m"}], "]"}], ",", "2"}], 
        "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "=!=", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"NestGraph", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"FromDigits", "[", 
          RowBox[{"Sort", "[", 
           RowBox[{"IntegerDigits", "[", 
            RowBox[{
             RowBox[{"IntegerReverse", "[", 
              RowBox[{"#", ",", "b"}], "]"}], "+", "#"}], "]"}], "]"}], "]"}],
          ")"}], "&"}], ",", "i", ",", "m", ",", 
       RowBox[{"VertexLabels", "->", "\"\<Name\>\""}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Full"}]}], "]"}], ",", 
     "\"\<No repeating patten detected\>\""}], "]"}]}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"reorder", "[", 
   RowBox[{
   "i_Integer", ",", "m_Integer", ",", "r_Integer", ",", "b_Integer", ",", 
    "v_Integer"}], "]"}], ":=", 
  RowBox[{"ArrayPlot", "[", 
   RowBox[{"PadLeft", "[", 
    RowBox[{"IntegerDigits", "[", 
     RowBox[{
      RowBox[{"NestList", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"FromDigits", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"Delete", "[", 
               RowBox[{
                RowBox[{"Prepend", "[", 
                 RowBox[{
                  RowBox[{"IntegerDigits", "[", 
                   RowBox[{"#", ",", "b"}], "]"}], ",", 
                  RowBox[{"Take", "[", 
                   RowBox[{
                    RowBox[{"IntegerDigits", "[", 
                    RowBox[{"#", ",", "b"}], "]"}], ",", 
                    RowBox[{"-", "r"}]}], "]"}]}], "]"}], ",", 
                RowBox[{"-", "r"}]}], "]"}], "]"}], ",", "b"}], "]"}], "+", 
           "#"}], ")"}], "&"}], ",", "i", ",", "m"}], "]"}], ",", "v"}], 
     "]"}], "]"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"listReorder", "[", 
   RowBox[{
   "i_Integer", ",", "m_Integer", ",", "r_Integer", ",", "b_Integer"}], "]"}],
   ":=", 
  RowBox[{"Pane", "[", 
   RowBox[{
    RowBox[{"Column", "[", 
     RowBox[{"NestList", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"FromDigits", "[", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"Delete", "[", 
              RowBox[{
               RowBox[{"Prepend", "[", 
                RowBox[{
                 RowBox[{"IntegerDigits", "[", 
                  RowBox[{"#", ",", "b"}], "]"}], ",", 
                 RowBox[{"Take", "[", 
                  RowBox[{
                   RowBox[{"IntegerDigits", "[", 
                    RowBox[{"#", ",", "b"}], "]"}], ",", 
                   RowBox[{"-", "r"}]}], "]"}]}], "]"}], ",", 
               RowBox[{"-", "r"}]}], "]"}], "]"}], ",", "b"}], "]"}], "+", 
          "#"}], ")"}], "&"}], ",", "i", ",", "m"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"270", ",", "255"}], "}"}], ",", 
    RowBox[{"Scrollbars", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"False", ",", " ", "True"}], "}"}]}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"listReorder2", "[", 
   RowBox[{
   "i_Integer", ",", "m_Integer", ",", "r_Integer", ",", "b_Integer"}], "]"}],
   ":=", 
  RowBox[{"Pane", "[", 
   RowBox[{
    RowBox[{"Column", "[", 
     RowBox[{"FromDigits", "/@", 
      RowBox[{"IntegerDigits", "[", 
       RowBox[{
        RowBox[{"NestList", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"FromDigits", "[", 
              RowBox[{
               RowBox[{"Flatten", "[", 
                RowBox[{"Delete", "[", 
                 RowBox[{
                  RowBox[{"Prepend", "[", 
                   RowBox[{
                    RowBox[{"IntegerDigits", "[", 
                    RowBox[{"#", ",", "b"}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{
                    RowBox[{"IntegerDigits", "[", 
                    RowBox[{"#", ",", "b"}], "]"}], ",", 
                    RowBox[{"-", "r"}]}], "]"}]}], "]"}], ",", 
                  RowBox[{"-", "r"}]}], "]"}], "]"}], ",", "b"}], "]"}], "+", 
             "#"}], ")"}], "&"}], ",", "i", ",", "m"}], "]"}], ",", "b"}], 
       "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"270", ",", "255"}], "}"}], ",", 
    RowBox[{"Scrollbars", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"False", ",", " ", "True"}], "}"}]}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"countReorder", "[", 
   RowBox[{
   "i_Integer", ",", "m_Integer", ",", "r_Integer", ",", "b_Integer"}], "]"}],
   ":=", 
  RowBox[{
   RowBox[{"Length", "[", 
    RowBox[{"NestList", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"FromDigits", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"Delete", "[", 
             RowBox[{
              RowBox[{"Prepend", "[", 
               RowBox[{
                RowBox[{"IntegerDigits", "[", 
                 RowBox[{"#", ",", "b"}], "]"}], ",", 
                RowBox[{"Take", "[", 
                 RowBox[{
                  RowBox[{"IntegerDigits", "[", 
                   RowBox[{"#", ",", "b"}], "]"}], ",", 
                  RowBox[{"-", "r"}]}], "]"}]}], "]"}], ",", 
              RowBox[{"-", "r"}]}], "]"}], "]"}], ",", "b"}], "]"}], "+", 
         "#"}], ")"}], "&"}], ",", "i", ",", "m"}], "]"}], "]"}], "-", 
   "1"}]}], "\n", 
 RowBox[{
  RowBox[{"finalReorder", "[", 
   RowBox[{
   "i_Integer", ",", "m_Integer", ",", "r_Integer", ",", "b_Integer", ",", 
    "v_Integer"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"reorder", "[", 
     RowBox[{"i", ",", "m", ",", "r", ",", "b", ",", "v"}], "]"}], ",", 
    RowBox[{"listReorder", "[", 
     RowBox[{"i", ",", "m", ",", "r", ",", "b"}], "]"}], ",", 
    RowBox[{"listReorder2", "[", 
     RowBox[{"i", ",", "m", ",", "r", ",", "b"}], "]"}], ",", 
    RowBox[{"countReorder", "[", 
     RowBox[{"i", ",", "m", ",", "r", ",", "b"}], "]"}]}], "}"}]}]}], "Input",\

 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{3.6768921926276464`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Project", "Section",
 CellChangeTimes->{{3.583107893296578*^9, 3.583107894085239*^9}},
 TextAlignment->Center,
 FontColor->GrayLevel[1],
 Background->RGBColor[1, 0.5, 0]],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "func", "}"}], ",", 
     RowBox[{
      RowBox[{"func", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"finalPalindrome", "[", 
          RowBox[{"i", ",", "m", ",", "b", ",", "v"}], "]"}], ",", " ", 
         RowBox[{"finalRepeat", "[", 
          RowBox[{"i", ",", "m", ",", "b", ",", "v"}], "]"}], ",", 
         RowBox[{"finalReorder", "[", 
          RowBox[{"i", ",", "m", ",", "r", ",", "b", ",", "v"}], "]"}], ",", 
         RowBox[{"finalRat", "[", 
          RowBox[{"i", ",", "m", ",", "b", ",", "v"}], "]"}]}], "}"}]}], ";", 
      
      RowBox[{"Pane", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"n", "\[Equal]", "4"}], ",", 
          RowBox[{"Grid", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\"\<visual representation in base \>\"", "<>", 
                 RowBox[{"ToString", "[", "v", "]"}]}], ",", 
                "\"\<numbers after each iteration in base 10\>\"", ",", 
                RowBox[{"\"\<numbers after each iteration in base \>\"", "<>", 
                 RowBox[{"ToString", "[", "b", "]"}]}], ",", 
                "\"\<number of iterations\>\"", ",", 
                "\"\<NestGraph (if there is a repeating pattern)\>\""}], 
               "}"}], ",", 
              RowBox[{"func", "[", 
               RowBox[{"[", "n", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"Frame", "\[Rule]", "All"}], ",", 
            RowBox[{"ItemSize", "\[Rule]", "Full"}]}], "]"}], ",", 
          RowBox[{"Grid", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\"\<visual representation in base \>\"", "<>", 
                 RowBox[{"ToString", "[", "v", "]"}]}], ",", 
                "\"\<numbers after each iteration in base 10\>\"", ",", 
                RowBox[{"\"\<numbers after each iteration in base \>\"", "<>", 
                 RowBox[{"ToString", "[", "b", "]"}]}], ",", 
                "\"\<number of iterations\>\""}], "}"}], ",", 
              RowBox[{"func", "[", 
               RowBox[{"[", "n", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"Frame", "\[Rule]", "All"}], ",", 
            RowBox[{"ItemSize", "\[Rule]", "Full"}]}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"600", ",", "300"}], "}"}], ",", 
        RowBox[{"Scrollbars", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"True", ",", "False"}], "}"}]}]}], "]"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "\"\<Algorithms:\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
       "1", "\[Rule]", " ", "\"\<196-Algorithm Palindrome checker\>\""}], ",", 
       RowBox[{"2", "\[Rule]", " ", "\"\<196-Algorithm\>\""}], ",", 
       RowBox[{"3", "\[Rule]", " ", "\"\<Reorder-Algorithm\>\""}], ",", 
       RowBox[{"4", "\[Rule]", " ", "\"\<RATS sequence\>\""}]}], "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", " ", "SetterBar"}]}], "}"}], ",", 
   "Delimiter", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "10", ",", "\"\<initial value in base 10\>\""}], 
      "}"}], ",", "10", ",", "100000", ",", "1", ",", " ", 
     RowBox[{"Appearance", "\[Rule]", " ", "\"\<Labeled\>\""}]}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m", ",", "1", ",", "\"\<max number of iterations\>\""}], "}"}],
      ",", "1", ",", "500", ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", " ", "\"\<Labeled\>\""}]}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"r", ",", "1", ",", "\"\<number of digits reordered\>\""}], 
      "}"}], ",", "1", ",", 
     RowBox[{"Length", "[", 
      RowBox[{"IntegerDigits", "[", 
       RowBox[{"i", ",", "b"}], "]"}], "]"}], ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b", ",", "10", ",", "\"\<base to compute algorithm\>\""}], 
      "}"}], ",", " ", "2", ",", "10", ",", "1", ",", " ", 
     RowBox[{"ControlType", "\[Rule]", " ", "PopupMenu"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"v", ",", "2", ",", "\"\<base to represent iterations\>\""}], 
      "}"}], ",", " ", "2", ",", "10", ",", "1", ",", " ", 
     RowBox[{"ControlType", "\[Rule]", " ", "PopupMenu"}]}], "}"}], ",", 
   RowBox[{"FrameMargins", "\[Rule]", "None"}], ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.676892223005477*^9, 3.6768922246985345`*^9}}]
}, Open  ]]
},
WindowSize->{1366, 685},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (June 18, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 256, 5, 74, "Section"],
Cell[CellGroupData[{
Cell[860, 31, 394, 9, 79, "Subsection"],
Cell[1257, 42, 1537, 22, 163, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2843, 70, 235, 5, 74, "Section",
 InitializationGroup->True],
Cell[3081, 77, 17713, 505, 750, "Input",
 InitializationCell->True,
 InitializationGroup->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[20831, 587, 176, 4, 74, "Section"],
Cell[21010, 593, 4883, 114, 221, "Input"]
}, Open  ]]
}
]
*)

