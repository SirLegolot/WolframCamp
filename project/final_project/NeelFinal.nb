(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    216371,       4777]
NotebookOptionsPosition[    211914,       4641]
NotebookOutlinePosition[    213525,       4691]
CellTagsIndexPosition[    213189,       4679]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Generating and Visualizing Sequences in Different Bases", "DemoTitle",
 CellChangeTimes->{3.6767381305078516`*^9}],

Cell[CellGroupData[{

Cell["", "InitializationSection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"repeat", "[", 
   RowBox[{
   "i_Integer", ",", "m_Integer", ",", "b_Integer", ",", "v_Integer"}], "]"}],
   ":=", 
  RowBox[{"ArrayPlot", "[", 
   RowBox[{"PadLeft", "[", 
    RowBox[{"IntegerDigits", "[", 
     RowBox[{
      RowBox[{"NestList", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"IntegerReverse", "[", 
            RowBox[{"#", ",", "b"}], "]"}], "+", "#"}], ")"}], "&"}], ",", 
        "i", ",", "m"}], "]"}], ",", "v"}], "]"}], "]"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"listRepeat", "[", 
   RowBox[{"i_Integer", ",", "m_Integer", ",", "b_Integer"}], "]"}], ":=", 
  RowBox[{"Pane", "[", 
   RowBox[{
    RowBox[{"Column", "[", 
     RowBox[{"NestList", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"IntegerReverse", "[", 
           RowBox[{"#", ",", "b"}], "]"}], "+", "#"}], ")"}], "&"}], ",", "i",
        ",", "m"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"270", ",", "255"}], "}"}], ",", 
    RowBox[{"Scrollbars", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"False", ",", "True"}], "}"}]}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"listRepeat2", "[", 
   RowBox[{"i_Integer", ",", "m_Integer", ",", "b_Integer"}], "]"}], ":=", 
  RowBox[{"Pane", "[", 
   RowBox[{
    RowBox[{"Column", "[", 
     RowBox[{"FromDigits", " ", "/@", " ", 
      RowBox[{"IntegerDigits", "[", 
       RowBox[{
        RowBox[{"NestList", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"IntegerReverse", "[", 
              RowBox[{"#", ",", "b"}], "]"}], "+", "#"}], ")"}], "&"}], ",", 
          "i", ",", "m"}], "]"}], ",", "b"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"270", ",", "255"}], "}"}], ",", 
    RowBox[{"Scrollbars", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"False", ",", " ", "True"}], "}"}]}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"countRepeat", "[", 
   RowBox[{"i_Integer", ",", "m_Integer", ",", "b_Integer"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Length", "[", 
    RowBox[{"NestList", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"IntegerReverse", "[", 
          RowBox[{"#", ",", "b"}], "]"}], "+", "#"}], ")"}], "&"}], ",", "i", 
      ",", "m"}], "]"}], "]"}], "-", "1"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"finalRepeat", "[", 
    RowBox[{
    "i_Integer", ",", "m_Integer", ",", "b_Integer", ",", "v_Integer"}], 
    "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"repeat", "[", 
      RowBox[{"i", ",", "m", ",", "b", ",", "v"}], "]"}], ",", 
     RowBox[{"listRepeat", "[", 
      RowBox[{"i", ",", "m", ",", "b"}], "]"}], ",", 
     RowBox[{"listRepeat2", "[", 
      RowBox[{"i", ",", "m", ",", "b"}], "]"}], ",", 
     RowBox[{"countRepeat", "[", 
      RowBox[{"i", ",", "m", ",", "b"}], "]"}]}], "}"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"countPalindrome", "[", 
   RowBox[{"i_Integer", ",", "m_Integer", ",", "b_Integer"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Length", "[", 
    RowBox[{"NestWhileList", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"IntegerReverse", "[", 
          RowBox[{"#", ",", "b"}], "]"}], "+", "#"}], ")"}], "&"}], ",", "i", 
      ",", 
      RowBox[{
       RowBox[{
        RowBox[{"IntegerDigits", "[", 
         RowBox[{
          RowBox[{"IntegerReverse", "[", 
           RowBox[{"#", ",", "b"}], "]"}], ",", "b"}], "]"}], "=!=", 
        RowBox[{"IntegerDigits", "[", 
         RowBox[{"#", ",", "b"}], "]"}]}], "&"}], ",", "1", ",", "m"}], "]"}],
     "]"}], "-", "1"}]}], "\n", 
 RowBox[{
  RowBox[{"listPalindrome", "[", 
   RowBox[{"i_Integer", ",", "m_Integer", ",", "b_Integer"}], "]"}], ":=", 
  RowBox[{"Pane", "[", 
   RowBox[{
    RowBox[{"Column", "[", 
     RowBox[{"NestWhileList", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"IntegerReverse", "[", 
           RowBox[{"#", ",", "b"}], "]"}], "+", "#"}], ")"}], "&"}], ",", "i",
        ",", 
       RowBox[{
        RowBox[{
         RowBox[{"IntegerDigits", "[", 
          RowBox[{
           RowBox[{"IntegerReverse", "[", 
            RowBox[{"#", ",", "b"}], "]"}], ",", "b"}], "]"}], "=!=", 
         RowBox[{"IntegerDigits", "[", 
          RowBox[{"#", ",", "b"}], "]"}]}], "&"}], ",", "1", ",", "m"}], 
      "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"270", ",", "255"}], "}"}], ",", 
    RowBox[{"Scrollbars", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"False", ",", " ", "True"}], "}"}]}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"listPalindrome2", "[", 
   RowBox[{"i_Integer", ",", "m_Integer", ",", "b_Integer"}], "]"}], ":=", 
  RowBox[{"Pane", "[", 
   RowBox[{
    RowBox[{"Column", "[", 
     RowBox[{"FromDigits", " ", "/@", " ", 
      RowBox[{"IntegerDigits", "[", 
       RowBox[{
        RowBox[{"NestWhileList", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"IntegerReverse", "[", 
              RowBox[{"#", ",", "b"}], "]"}], "+", "#"}], ")"}], "&"}], ",", 
          "i", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"IntegerDigits", "[", 
             RowBox[{
              RowBox[{"IntegerReverse", "[", 
               RowBox[{"#", ",", "b"}], "]"}], ",", "b"}], "]"}], "=!=", 
            RowBox[{"IntegerDigits", "[", 
             RowBox[{"#", ",", "b"}], "]"}]}], "&"}], ",", "1", ",", "m"}], 
         "]"}], ",", "b"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"270", ",", "255"}], "}"}], ",", 
    RowBox[{"Scrollbars", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"False", ",", " ", "True"}], "}"}]}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"palindrome", "[", 
   RowBox[{
   "i_Integer", ",", "m_Integer", ",", "b_Integer", ",", "v_Integer"}], "]"}],
   ":=", 
  RowBox[{"ArrayPlot", "[", 
   RowBox[{"PadLeft", "[", 
    RowBox[{"IntegerDigits", "[", 
     RowBox[{
      RowBox[{"NestWhileList", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"IntegerReverse", "[", 
            RowBox[{"#", ",", "b"}], "]"}], "+", "#"}], ")"}], "&"}], ",", 
        "i", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"IntegerDigits", "[", 
           RowBox[{
            RowBox[{"IntegerReverse", "[", 
             RowBox[{"#", ",", "b"}], "]"}], ",", "b"}], "]"}], "=!=", 
          RowBox[{"IntegerDigits", "[", 
           RowBox[{"#", ",", "b"}], "]"}]}], "&"}], ",", "1", ",", "m"}], 
       "]"}], ",", "v"}], "]"}], "]"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"finalPalindrome", "[", 
    RowBox[{
    "i_Integer", ",", "m_Integer", ",", "b_Integer", ",", "v_Integer"}], 
    "]"}], ":=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"palindrome", "[", 
      RowBox[{"i", ",", "m", ",", "b", ",", "v"}], "]"}], ",", 
     RowBox[{"listPalindrome", "[", 
      RowBox[{"i", ",", "m", ",", "b"}], "]"}], ",", 
     RowBox[{"listPalindrome2", "[", 
      RowBox[{"i", ",", "m", ",", "b"}], "]"}], ",", 
     RowBox[{"countPalindrome", "[", 
      RowBox[{"i", ",", "m", ",", "b"}], "]"}]}], "}"}]}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"rat", "[", 
   RowBox[{
   "i_Integer", ",", "m_Integer", ",", "b_Integer", ",", "v_Integer"}], "]"}],
   ":=", 
  RowBox[{"ArrayPlot", "[", 
   RowBox[{"PadLeft", "[", 
    RowBox[{"IntegerDigits", "[", 
     RowBox[{
      RowBox[{"NestList", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"FromDigits", "[", 
           RowBox[{"Sort", "[", 
            RowBox[{"IntegerDigits", "[", 
             RowBox[{
              RowBox[{"IntegerReverse", "[", 
               RowBox[{"#", ",", "b"}], "]"}], "+", "#"}], "]"}], "]"}], 
           "]"}], ")"}], "&"}], ",", "i", ",", "m"}], "]"}], ",", "v"}], 
     "]"}], "]"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"countRat", "[", 
   RowBox[{"i_Integer", ",", "m_Integer", ",", "b_Integer"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Length", "[", 
    RowBox[{"NestList", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"FromDigits", "[", 
         RowBox[{"Sort", "[", 
          RowBox[{"IntegerDigits", "[", 
           RowBox[{
            RowBox[{"IntegerReverse", "[", 
             RowBox[{"#", ",", "b"}], "]"}], "+", "#"}], "]"}], "]"}], "]"}], 
        ")"}], "&"}], ",", "i", ",", "m"}], "]"}], "]"}], "-", "1"}]}], "\n", 
 RowBox[{
  RowBox[{"listRat", "[", 
   RowBox[{"i_Integer", ",", "m_Integer", ",", "b_Integer"}], "]"}], ":=", 
  RowBox[{"Pane", "[", 
   RowBox[{
    RowBox[{"Column", "[", 
     RowBox[{"NestList", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"FromDigits", "[", 
          RowBox[{"Sort", "[", 
           RowBox[{"IntegerDigits", "[", 
            RowBox[{
             RowBox[{"IntegerReverse", "[", 
              RowBox[{"#", ",", "b"}], "]"}], "+", "#"}], "]"}], "]"}], "]"}],
          ")"}], "&"}], ",", "i", ",", "m"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"270", ",", "255"}], "}"}], ",", 
    RowBox[{"Scrollbars", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"False", ",", " ", "True"}], "}"}]}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"listRat2", "[", 
   RowBox[{"i_Integer", ",", "m_Integer", ",", "b_Integer"}], "]"}], ":=", 
  RowBox[{"Pane", "[", 
   RowBox[{
    RowBox[{"Column", "[", 
     RowBox[{"FromDigits", " ", "/@", " ", 
      RowBox[{"IntegerDigits", "[", 
       RowBox[{
        RowBox[{"NestList", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"FromDigits", "[", 
             RowBox[{"Sort", "[", 
              RowBox[{"IntegerDigits", "[", 
               RowBox[{
                RowBox[{"IntegerReverse", "[", 
                 RowBox[{"#", ",", "b"}], "]"}], "+", "#"}], "]"}], "]"}], 
             "]"}], ")"}], "&"}], ",", "i", ",", "m"}], "]"}], ",", "b"}], 
       "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"270", ",", "255"}], "}"}], ",", 
    RowBox[{"Scrollbars", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"False", ",", " ", "True"}], "}"}]}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"finalRat", "[", 
   RowBox[{
   "i_Integer", ",", "m_Integer", ",", "b_Integer", ",", "v_Integer"}], "]"}],
   ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"rat", "[", 
     RowBox[{"i", ",", "m", ",", "b", ",", "v"}], "]"}], ",", 
    RowBox[{"listRat", "[", 
     RowBox[{"i", ",", "m", ",", "b"}], "]"}], ",", 
    RowBox[{"listRat2", "[", 
     RowBox[{"i", ",", "m", ",", "b"}], "]"}], ",", 
    RowBox[{"countRat", "[", 
     RowBox[{"i", ",", "m", ",", "b"}], "]"}], ",", 
    RowBox[{"ftrRat", "[", 
     RowBox[{"i", ",", "m", ",", "b"}], "]"}]}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ftrRat", "[", 
    RowBox[{"i_Integer", ",", "m_Integer", ",", "b_Integer"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"FindTransientRepeat", "[", 
        RowBox[{
         RowBox[{"NestList", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"FromDigits", "[", 
              RowBox[{"Sort", "[", 
               RowBox[{"IntegerDigits", "[", 
                RowBox[{
                 RowBox[{"IntegerReverse", "[", 
                  RowBox[{"#", ",", "b"}], "]"}], "+", "#"}], "]"}], "]"}], 
              "]"}], ")"}], "&"}], ",", "i", ",", "m"}], "]"}], ",", "2"}], 
        "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "=!=", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"NestGraph", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"FromDigits", "[", 
          RowBox[{"Sort", "[", 
           RowBox[{"IntegerDigits", "[", 
            RowBox[{
             RowBox[{"IntegerReverse", "[", 
              RowBox[{"#", ",", "b"}], "]"}], "+", "#"}], "]"}], "]"}], "]"}],
          ")"}], "&"}], ",", "i", ",", "m", ",", 
       RowBox[{"VertexLabels", "->", "\"\<Name\>\""}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Full"}]}], "]"}], ",", 
     "\"\<No repeating patten detected\>\""}], "]"}]}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"reorder", "[", 
   RowBox[{
   "i_Integer", ",", "m_Integer", ",", "r_Integer", ",", "b_Integer", ",", 
    "v_Integer"}], "]"}], ":=", 
  RowBox[{"ArrayPlot", "[", 
   RowBox[{"PadLeft", "[", 
    RowBox[{"IntegerDigits", "[", 
     RowBox[{
      RowBox[{"NestList", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"FromDigits", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"Delete", "[", 
               RowBox[{
                RowBox[{"Prepend", "[", 
                 RowBox[{
                  RowBox[{"IntegerDigits", "[", 
                   RowBox[{"#", ",", "b"}], "]"}], ",", 
                  RowBox[{"Take", "[", 
                   RowBox[{
                    RowBox[{"IntegerDigits", "[", 
                    RowBox[{"#", ",", "b"}], "]"}], ",", 
                    RowBox[{"-", "r"}]}], "]"}]}], "]"}], ",", 
                RowBox[{"-", "r"}]}], "]"}], "]"}], ",", "b"}], "]"}], "+", 
           "#"}], ")"}], "&"}], ",", "i", ",", "m"}], "]"}], ",", "v"}], 
     "]"}], "]"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"listReorder", "[", 
   RowBox[{
   "i_Integer", ",", "m_Integer", ",", "r_Integer", ",", "b_Integer"}], "]"}],
   ":=", 
  RowBox[{"Pane", "[", 
   RowBox[{
    RowBox[{"Column", "[", 
     RowBox[{"NestList", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"FromDigits", "[", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"Delete", "[", 
              RowBox[{
               RowBox[{"Prepend", "[", 
                RowBox[{
                 RowBox[{"IntegerDigits", "[", 
                  RowBox[{"#", ",", "b"}], "]"}], ",", 
                 RowBox[{"Take", "[", 
                  RowBox[{
                   RowBox[{"IntegerDigits", "[", 
                    RowBox[{"#", ",", "b"}], "]"}], ",", 
                   RowBox[{"-", "r"}]}], "]"}]}], "]"}], ",", 
               RowBox[{"-", "r"}]}], "]"}], "]"}], ",", "b"}], "]"}], "+", 
          "#"}], ")"}], "&"}], ",", "i", ",", "m"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"270", ",", "255"}], "}"}], ",", 
    RowBox[{"Scrollbars", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"False", ",", " ", "True"}], "}"}]}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"listReorder2", "[", 
   RowBox[{
   "i_Integer", ",", "m_Integer", ",", "r_Integer", ",", "b_Integer"}], "]"}],
   ":=", 
  RowBox[{"Pane", "[", 
   RowBox[{
    RowBox[{"Column", "[", 
     RowBox[{"FromDigits", "/@", 
      RowBox[{"IntegerDigits", "[", 
       RowBox[{
        RowBox[{"NestList", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"FromDigits", "[", 
              RowBox[{
               RowBox[{"Flatten", "[", 
                RowBox[{"Delete", "[", 
                 RowBox[{
                  RowBox[{"Prepend", "[", 
                   RowBox[{
                    RowBox[{"IntegerDigits", "[", 
                    RowBox[{"#", ",", "b"}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{
                    RowBox[{"IntegerDigits", "[", 
                    RowBox[{"#", ",", "b"}], "]"}], ",", 
                    RowBox[{"-", "r"}]}], "]"}]}], "]"}], ",", 
                  RowBox[{"-", "r"}]}], "]"}], "]"}], ",", "b"}], "]"}], "+", 
             "#"}], ")"}], "&"}], ",", "i", ",", "m"}], "]"}], ",", "b"}], 
       "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"270", ",", "255"}], "}"}], ",", 
    RowBox[{"Scrollbars", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"False", ",", " ", "True"}], "}"}]}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"countReorder", "[", 
   RowBox[{
   "i_Integer", ",", "m_Integer", ",", "r_Integer", ",", "b_Integer"}], "]"}],
   ":=", 
  RowBox[{
   RowBox[{"Length", "[", 
    RowBox[{"NestList", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"FromDigits", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"Delete", "[", 
             RowBox[{
              RowBox[{"Prepend", "[", 
               RowBox[{
                RowBox[{"IntegerDigits", "[", 
                 RowBox[{"#", ",", "b"}], "]"}], ",", 
                RowBox[{"Take", "[", 
                 RowBox[{
                  RowBox[{"IntegerDigits", "[", 
                   RowBox[{"#", ",", "b"}], "]"}], ",", 
                  RowBox[{"-", "r"}]}], "]"}]}], "]"}], ",", 
              RowBox[{"-", "r"}]}], "]"}], "]"}], ",", "b"}], "]"}], "+", 
         "#"}], ")"}], "&"}], ",", "i", ",", "m"}], "]"}], "]"}], "-", 
   "1"}]}], "\n", 
 RowBox[{
  RowBox[{"finalReorder", "[", 
   RowBox[{
   "i_Integer", ",", "m_Integer", ",", "r_Integer", ",", "b_Integer", ",", 
    "v_Integer"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"reorder", "[", 
     RowBox[{"i", ",", "m", ",", "r", ",", "b", ",", "v"}], "]"}], ",", 
    RowBox[{"listReorder", "[", 
     RowBox[{"i", ",", "m", ",", "r", ",", "b"}], "]"}], ",", 
    RowBox[{"listReorder2", "[", 
     RowBox[{"i", ",", "m", ",", "r", ",", "b"}], "]"}], ",", 
    RowBox[{"countReorder", "[", 
     RowBox[{"i", ",", "m", ",", "r", ",", "b"}], "]"}]}], "}"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.676653260516526*^9, 3.6766532678877783`*^9}, {
   3.6767189481841288`*^9, 3.6767189725165663`*^9}, {3.6767232893356605`*^9, 
   3.676723298550408*^9}, 3.676723376492013*^9, {3.676723484577406*^9, 
   3.676723502898902*^9}, {3.6767235501345234`*^9, 3.6767235622074003`*^9}, 
   3.6767235972033367`*^9, {3.6767236337808065`*^9, 3.676723643551206*^9}, {
   3.6767236814075193`*^9, 3.676723685815905*^9}, {3.6767238290916967`*^9, 
   3.6767238621487455`*^9}, {3.6767238929520473`*^9, 
   3.6767239021793995`*^9}, {3.6767282664738555`*^9, 3.676728277410548*^9}, {
   3.6767318180600023`*^9, 3.6767318297564354`*^9}, {3.6767318603907537`*^9, 
   3.6767318644960675`*^9}, 3.6767318951644692`*^9, {3.676732845683501*^9, 
   3.6767328624937367`*^9}, {3.6767329185385056`*^9, 3.676732985285446*^9}, {
   3.6767333170288615`*^9, 3.6767333276877584`*^9}, {3.6767340182766857`*^9, 
   3.676734019949273*^9}, {3.676734948531687*^9, 3.676734990994917*^9}, {
   3.6767370308652196`*^9, 3.676737030986958*^9}, {3.6767371440549636`*^9, 
   3.6767372026286182`*^9}, {3.676737236486802*^9, 3.6767372733334055`*^9}, {
   3.6767375723193207`*^9, 3.6767376213374047`*^9}, {3.6767376588222485`*^9, 
   3.6767376594523306`*^9}, {3.6767377046689987`*^9, 
   3.6767377169193134`*^9}, {3.6767377519103537`*^9, 3.676737822400695*^9}, 
   3.676738459334199*^9},
 CellID->223664927]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ManipulateSection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "func", "}"}], ",", 
     RowBox[{
      RowBox[{"func", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"finalPalindrome", "[", 
          RowBox[{"i", ",", "m", ",", "b", ",", "v"}], "]"}], ",", " ", 
         RowBox[{"finalRepeat", "[", 
          RowBox[{"i", ",", "m", ",", "b", ",", "v"}], "]"}], ",", 
         RowBox[{"finalReorder", "[", 
          RowBox[{"i", ",", "m", ",", "r", ",", "b", ",", "v"}], "]"}], ",", 
         RowBox[{"finalRat", "[", 
          RowBox[{"i", ",", "m", ",", "b", ",", "v"}], "]"}]}], "}"}]}], ";", 
      RowBox[{"Pane", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"n", "\[Equal]", "4"}], ",", 
          RowBox[{"Grid", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\"\<visual representation in base \>\"", "<>", 
                 RowBox[{"ToString", "[", "v", "]"}]}], ",", 
                "\"\<numbers after each iteration in base 10\>\"", ",", 
                RowBox[{"\"\<numbers after each iteration in base \>\"", "<>", 
                 RowBox[{"ToString", "[", "b", "]"}]}], ",", 
                "\"\<number of iterations\>\"", ",", 
                "\"\<NestGraph (if there is a repeating pattern)\>\""}], 
               "}"}], ",", 
              RowBox[{"func", "[", 
               RowBox[{"[", "n", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"Frame", "\[Rule]", "All"}], ",", 
            RowBox[{"ItemSize", "\[Rule]", "Full"}]}], "]"}], ",", 
          RowBox[{"Grid", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\"\<visual representation in base \>\"", "<>", 
                 RowBox[{"ToString", "[", "v", "]"}]}], ",", 
                "\"\<numbers after each iteration in base 10\>\"", ",", 
                RowBox[{"\"\<numbers after each iteration in base \>\"", "<>", 
                 RowBox[{"ToString", "[", "b", "]"}]}], ",", 
                "\"\<number of iterations\>\""}], "}"}], ",", 
              RowBox[{"func", "[", 
               RowBox[{"[", "n", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"Frame", "\[Rule]", "All"}], ",", 
            RowBox[{"ItemSize", "\[Rule]", "Full"}]}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"600", ",", "300"}], "}"}], ",", 
        RowBox[{"Scrollbars", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"True", ",", "False"}], "}"}]}]}], "]"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "\"\<Algorithms:\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
       "1", "\[Rule]", " ", "\"\<196-Algorithm Palindrome checker\>\""}], ",", 
       RowBox[{"2", "\[Rule]", " ", "\"\<196-Algorithm\>\""}], ",", 
       RowBox[{"3", "\[Rule]", " ", "\"\<Reorder-Algorithm\>\""}], ",", 
       RowBox[{"4", "\[Rule]", " ", "\"\<RATS sequence\>\""}]}], "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", " ", "SetterBar"}]}], "}"}], ",", 
   "Delimiter", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "10", ",", "\"\<initial value in base 10\>\""}], 
      "}"}], ",", "10", ",", "100000", ",", "1", ",", " ", 
     RowBox[{"Appearance", "\[Rule]", " ", "\"\<Labeled\>\""}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m", ",", "1", ",", "\"\<max number of iterations\>\""}], "}"}],
      ",", "1", ",", "500", ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", " ", "\"\<Labeled\>\""}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"r", ",", "1", ",", "\"\<number of digits reordered\>\""}], 
      "}"}], ",", "1", ",", 
     RowBox[{"Length", "[", 
      RowBox[{"IntegerDigits", "[", 
       RowBox[{"i", ",", "b"}], "]"}], "]"}], ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b", ",", "10", ",", "\"\<base to compute algorithm\>\""}], 
      "}"}], ",", " ", "2", ",", "10", ",", "1", ",", " ", 
     RowBox[{"ControlType", "\[Rule]", " ", "PopupMenu"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"v", ",", "2", ",", "\"\<base to represent iterations\>\""}], 
      "}"}], ",", " ", "2", ",", "10", ",", "1", ",", " ", 
     RowBox[{"ControlType", "\[Rule]", " ", "PopupMenu"}]}], "}"}], ",", 
   RowBox[{"FrameMargins", "\[Rule]", "None"}], ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6767381722077265`*^9, 3.676738186273733*^9}, {
  3.6767394106970453`*^9, 3.676739413909688*^9}, {3.6767396034634066`*^9, 
  3.6767396088748393`*^9}, {3.676757489715713*^9, 3.6767574971533003`*^9}, {
  3.676757547016264*^9, 3.676757570310574*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`b$$ = 10, $CellContext`i$$ = 
    45653, $CellContext`m$$ = 1, $CellContext`n$$ = 1, $CellContext`r$$ = 
    1, $CellContext`v$$ = 2, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`n$$], 1, "Algorithms:"}, {
      1 -> "196-Algorithm Palindrome checker", 2 -> "196-Algorithm", 3 -> 
       "Reorder-Algorithm", 4 -> "RATS sequence"}}, {{
       Hold[$CellContext`i$$], 45653, "initial value in base 10"}, 10, 100000,
       1}, {{
       Hold[$CellContext`m$$], 1, "max number of iterations"}, 1, 500, 1}, {{
       Hold[$CellContext`r$$], 1, "number of digits reordered"}, 1, 
      Dynamic[
       Length[
        IntegerDigits[$CellContext`i$$, $CellContext`b$$]]], 1}, {{
       Hold[$CellContext`b$$], 10, "base to compute algorithm"}, 2, 10, 1}, {{
       Hold[$CellContext`v$$], 2, "base to represent iterations"}, 2, 10, 1}},
     Typeset`size$$ = {600., {146., 154.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`n$2199$$ = False, $CellContext`i$2200$$ = 
    0, $CellContext`m$2201$$ = 0, $CellContext`r$2202$$ = 
    0, $CellContext`b$2203$$ = 0, $CellContext`v$2204$$ = 0}, 
    DynamicBox[ToBoxes[
      RawBoxes[
       Manipulate`ManipulateBoxes[
       1, StandardForm, 
        "Variables" :> {$CellContext`b$$ = 10, $CellContext`i$$ = 
          45653, $CellContext`m$$ = 1, $CellContext`n$$ = 1, $CellContext`r$$ = 
          1, $CellContext`v$$ = 2}, "ControllerVariables" :> {
          Hold[$CellContext`n$$, $CellContext`n$2199$$, False], 
          Hold[$CellContext`i$$, $CellContext`i$2200$$, 0], 
          Hold[$CellContext`m$$, $CellContext`m$2201$$, 0], 
          Hold[$CellContext`r$$, $CellContext`r$2202$$, 0], 
          Hold[$CellContext`b$$, $CellContext`b$2203$$, 0], 
          Hold[$CellContext`v$$, $CellContext`v$2204$$, 0]}, 
        "OtherVariables" :> {
         Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
          Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
          Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
          Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
        Module[{$CellContext`func$}, $CellContext`func$ = {
             $CellContext`finalPalindrome[$CellContext`i$$, $CellContext`m$$, \
$CellContext`b$$, $CellContext`v$$], 
             $CellContext`finalRepeat[$CellContext`i$$, $CellContext`m$$, \
$CellContext`b$$, $CellContext`v$$], 
             $CellContext`finalReorder[$CellContext`i$$, $CellContext`m$$, \
$CellContext`r$$, $CellContext`b$$, $CellContext`v$$], 
             $CellContext`finalRat[$CellContext`i$$, $CellContext`m$$, \
$CellContext`b$$, $CellContext`v$$]}; Pane[
            If[$CellContext`n$$ == 4, 
             Grid[{{
                StringJoin["visual representation in base ", 
                 ToString[$CellContext`v$$]], 
                "numbers after each iteration in base 10", 
                StringJoin["numbers after each iteration in base ", 
                 ToString[$CellContext`b$$]], "number of iterations", 
                "NestGraph (if there is a repeating pattern)"}, 
               Part[$CellContext`func$, $CellContext`n$$]}, Frame -> All, 
              ItemSize -> Full], 
             Grid[{{
                StringJoin["visual representation in base ", 
                 ToString[$CellContext`v$$]], 
                "numbers after each iteration in base 10", 
                StringJoin["numbers after each iteration in base ", 
                 ToString[$CellContext`b$$]], "number of iterations"}, 
               Part[$CellContext`func$, $CellContext`n$$]}, Frame -> All, 
              ItemSize -> Full]], {600, 300}, Scrollbars -> {True, False}]], 
        "Specifications" :> {{{$CellContext`n$$, 1, "Algorithms:"}, {
           1 -> "196-Algorithm Palindrome checker", 2 -> "196-Algorithm", 3 -> 
            "Reorder-Algorithm", 4 -> "RATS sequence"}, ControlType -> 
           SetterBar}, 
          Delimiter, {{$CellContext`i$$, 45653, "initial value in base 10"}, 
           10, 100000, 1, Appearance -> 
           "Labeled"}, {{$CellContext`m$$, 1, "max number of iterations"}, 1, 
           500, 1, Appearance -> 
           "Labeled"}, {{$CellContext`r$$, 1, "number of digits reordered"}, 
           1, 
           Dynamic[
            Length[
             IntegerDigits[$CellContext`i$$, $CellContext`b$$]]], 1, 
           Appearance -> 
           "Labeled"}, {{$CellContext`b$$, 10, "base to compute algorithm"}, 
           2, 10, 1, ControlType -> 
           PopupMenu}, {{$CellContext`v$$, 2, "base to represent iterations"},
            2, 10, 1, ControlType -> PopupMenu}}, 
        "Options" :> {FrameMargins -> None}, 
        "DefaultOptions" :> {ControllerLinking -> True}]], StandardForm],
     ImageSizeCache->{635., {260., 267.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`func = {{
          Graphics[
           
           Raster[{{0, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 0, 0, 2, 2, 2, 1, 1, 2, 
            0}, {2, 0, 0, 0, 2, 2, 1, 1, 2, 0, 0, 0, 1, 0, 1, 2, 1, 1, 2, 
            1}, {2, 1, 1, 0, 2, 0, 0, 2, 1, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 
            0}, {2, 2, 1, 2, 1, 2, 1, 1, 0, 2, 2, 1, 1, 2, 2, 1, 2, 2, 0, 
            1}, {2, 2, 2, 1, 0, 2, 2, 0, 1, 1, 2, 2, 2, 2, 1, 2, 0, 1, 0, 
            0}, {2, 2, 2, 2, 0, 0, 0, 2, 0, 0, 0, 2, 1, 2, 0, 0, 2, 0, 1, 
            1}, {2, 2, 2, 2, 2, 0, 0, 1, 0, 1, 1, 2, 0, 1, 2, 1, 1, 0, 2, 
            0}, {2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 2, 0, 1, 1, 2, 1, 2, 
            1}, {2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 2, 2, 1, 1, 0, 2, 0, 2, 1, 
            0}, {2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 0, 1, 0, 1, 1, 2, 2, 2, 0, 
            1}, {2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 1, 1, 2, 2, 1, 1, 0, 
            0}, {2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 0, 0, 2, 1, 2, 1, 
            1}, {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 1, 2, 1, 2, 0, 1, 2, 
            0}}, {{0, 0}, {20, 13}}, {0, 2}], Frame -> Automatic, 
           FrameLabel -> {None, None}, 
           FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
             Automatic}], 
          Pane[
           
           Column[{15617, 87268, 173546, 818917, 1538735, 6917086, 13724282, 
            41967013, 73043927, 145977964, 615757505, 1121515021, 
            2326666232}], {270, 255}, Scrollbars -> {False, True}], 
          Pane[
           
           Column[{15617, 87268, 173546, 818917, 1538735, 6917086, 13724282, 
            41967013, 73043927, 145977964, 615757505, 1121515021, 
            2326666232}], {270, 255}, Scrollbars -> {False, True}], 12}, {
          Graphics[
           Raster[CompressedData["
1:eJylmF2S20AIhIGb5DCpvOcIe4G9/1tG9NfIXlu2rEzZKuuP6QG6Yfzr6/vv
V0XE7/X9s75ZUet8HSMztt+5Dlm5jb683d4eXKfZx/XUOqzf/VBtl7cr2RfX
1dpenDe3H/3p8+wbqRnXJ3uunnSdbBZLzzayxrDO1mjLG4qGUCnb/VIGr6VO
ZbkErb8Fzp7Ar8hQWy6mAkD1ZbD14ns1fVL4KIW7TzO1rM14T9YP7+iYo9eg
95JF2GUhf7KsvFmunNmLK03Ys2cweShg8mQUL/elSHDqXntG3uwbcqa829HH
fK+4Q4prg8xIw+iH207DIxD9U2vrWdoHQXbgyTLamBzQ9ApAKny6hxe0WoWe
qPT0fch0pEo/QuHNJJFuc2nmzORt8juLB2q3I/gp1zcyL8m5k6SY0qFhCjpo
quz9kHsjSHURwdkDNyKBBLgwmuIKPvCEPVEqXFppzDshtIlRD/yHJ0QUAdJT
oZCRVhXDeGXzLZ6ObO0SgS4oedopSgNxM/Fl1A0aWCHv6PnJwc56xIZsIHjy
/i0aRUiixO2ygg3ahJ0WAWhU93aEWeZw6egPtCFCipvSPO7RVLIasod8G6L6
J/EOYlv5A02ZCFqMOU1gxI2yvlqpfkQKPO0KK7PIjUqjdqSkuJJkwsMIT43L
JVt2hCRjaE4+PaARa0QAVZbadRZ9NicqJq6PZgrKhipSmtfIuSkeYs0w7yme
gsQVZddqdTg+pAgVZNEzM3vJc8kQ+5GOpIA6IXb1e8CD18IsCyt4uEbJf8T6
AA3JRYawjrDfHMuCWvksUsZjWYaAtjN1KKWRMQXiCI+F2lU1ZykSnGbrrZI9
9zPFwqU2pMOiq2pGprXnxRB6DvQ9MRGyFNUzTt3jycTPzkInikuJMB1HynjQ
Hyf8nsZ9hsOPIzV4CoIntS/Gw+HGpF5FynjKUa3JXYjuEMTLSIHH3WGZYOhp
ul7e16kjODX1FUKHG9DpRN5ECjzujnBQhmk6Wv0eDU2l0xYJmoqGRp8wQz7T
rFo1XaYlGqfMqGWf/gmnh/uPM5Ha8fTcyI/1HIKfQ1PIMR7Cx7Bevj473MhO
3akwJc5FCjwun+qfKAl47TyaKudbsUWZUng2UoNnX4+bFWXBJ2hcwKkZYQU7
xal7POxAvDcx/z9D40rl7Y3UNd6q3+MIv6ZGiy3ap2iUt2anGsvXdeoQT3on
XEOpz9G4KEHR+ohTd3B2azR0H0cKIMNNS+kVM3ZwhLdgl9B4i0IfXSfq1IGd
mI3qce93YsxOgKBfNOMeYLqdi4PGp/xXwuVB2CnJl4f/F6rrkRo82jldjpTx
FP9D/I8Zb9HX5x/9SBz+
            "], {{0, 0}, {71, 69}}, {0, 2}], Frame -> Automatic, 
           FrameLabel -> {None, None}, 
           FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
             Automatic}], 
          Pane[
           
           Column[{15617, 87268, 173546, 818917, 1538735, 6917086, 13724282, 
             41967013, 73043927, 145977964, 615757505, 1121515021, 2326666232,
              4653332464, 9295666028, 17502331957, 93415652528, 175941303967, 
             945244453538, 1780598896087, 9587587846958, 18184075704817, 
             90024832752998, 179950556595007, 880546211654978, 
             1760002324300066, 8360036556300737, 15730073112601375, 
             73040694249605126, 135191388499209163, 497094383382400694, 
             993098666765891488, 1877297234432781887, 9759169578760709668, 
             18428240257520329247, 92720542832724611728, 
             175432185556549114457, 929844131212130349028, 
             1750787162424261797957, 9348758786666879668528, 
             17607428573333758246967, 94571714306671340717638, 
             178243418624331682435187, 959777704757758496778058, 
             1810655399615515904556017, 8917209494770685840116198, 
             17833319980631460789143396, 87167518687045069780477267, 
             163444927483099148462053445, 707795192325089533191497806, 
             1316589383661070056483095513, 4472493230161771720322951644, 
             8934085460433543330646894388, 17769071920766996671292698786, 
             86558701138436963374209795557, 162118491385773926857320581125, 
             683303515144403304440515392386, 1366597030188806608882030695772, 
             4142557333076872697692338652403, 7185125666044835484395676204817,
              14369152431979680868802341420634, 
             57971566752866489566715766616975, 
             115933233504633088033541533134950, 
             175364568649963968369946865474461, 
             339839137299927837739893730938032, 
             570678174698865576469886462876965, 
             1140356439387830252038782934753040, 
             1543930832266132772426622281283451, 
             3087752654532375544743244661676902}], {270, 255}, 
           Scrollbars -> {False, True}], 
          Pane[
           
           Column[{15617, 87268, 173546, 818917, 1538735, 6917086, 13724282, 
             41967013, 73043927, 145977964, 615757505, 1121515021, 2326666232,
              4653332464, 9295666028, 17502331957, 93415652528, 175941303967, 
             945244453538, 1780598896087, 9587587846958, 18184075704817, 
             90024832752998, 179950556595007, 880546211654978, 
             1760002324300066, 8360036556300737, 15730073112601375, 
             73040694249605126, 135191388499209163, 497094383382400694, 
             993098666765891488, 1877297234432781887, 9759169578760709668, 
             18428240257520329247, 92720542832724611728, 
             175432185556549114457, 929844131212130349028, 
             1750787162424261797957, 9348758786666879668528, 
             17607428573333758246967, 94571714306671340717638, 
             178243418624331682435187, 959777704757758496778058, 
             1810655399615515904556017, 8917209494770685840116198, 
             17833319980631460789143396, 87167518687045069780477267, 
             163444927483099148462053445, 707795192325089533191497806, 
             1316589383661070056483095513, 4472493230161771720322951644, 
             8934085460433543330646894388, 17769071920766996671292698786, 
             86558701138436963374209795557, 162118491385773926857320581125, 
             683303515144403304440515392386, 1366597030188806608882030695772, 
             4142557333076872697692338652403, 7185125666044835484395676204817,
              14369152431979680868802341420634, 
             57971566752866489566715766616975, 
             115933233504633088033541533134950, 
             175364568649963968369946865474461, 
             339839137299927837739893730938032, 
             570678174698865576469886462876965, 
             1140356439387830252038782934753040, 
             1543930832266132772426622281283451, 
             3087752654532375544743244661676902}], {270, 255}, 
           Scrollbars -> {False, True}], 68}, {
          Graphics[
           Raster[CompressedData["
1:eJydl9GZ20AIhBk6SS9JAynhGrj+36JlfpDOkW3Je5/tk7wGdhgG9Ovr++9X
RsSf7fV7e0naXqnc1vYRvrX9s23K7btYX21b1t92pbq9XbB/mWJrZv1Otda3
db+Wr7dXGdD6DP9+mazfrKvtXqw/ldNyVDGozJflUPlL1S8j2Fl7op2qTrLc
5fJmAw6mfC0Lddv+sk60BylHWvcTjzZmOMLBEEQDNxsVO5SNJkZtDZjKupLT
GYsFj28WbgVOnTOF7aiwvbuwMp4gF3YT9m4bBQlHCB/Qxy/LvpIBqJ2OyIDa
XHZ2w57VABQC9e4DH5LGqUmrjQTwFbDFDjKXncqJsw5SEcwHywBAvjqrQyYG
Z9ikTYAzyoqxgYkc12ZDDO/MC5Jgb073HoepJdk9GVADEka0ckdq06h0XhpY
GDBQOb/h2FyC5UHZ76nJS4JEV4aMqcll/ihdKH53RTuqYxyunGE5fnNXAZBE
C9KEVSp/GoHbCbcQDJdSDCmdfRtL/YxjMuxCyaY+pe2TiuIE4IiHOBATiCnD
OSoRcA9+qMs1HwMxDQsupzcNMmDnVFS2nD3GgZFguwi72D37FaOPzepHWEeo
snns4OpgTneLImj/vyYrFl3Eu6lqGYV6p3mx2xbo0VC5Zip6jTAD6VkcCYeL
G12IlSqRe0owD5JwYiRMI+8TyjnoWhcFjc7jSCRDXSHZsqxWMOhCp3hmxH2N
5hGmmRUSDmUg4M9sIHTWPZM8bW4qflfnp8uUpufZ0h4fciulnuTFgeA9uluQ
3xZRE+R5XhpXxCyyOy/yqlYXdbt6dRo4ru6aTAtBi6f5vYykGyG5pNFN+3KN
v7SR9Gjra/ewdL8+Fs+bSMwONyeTbTK1k/+dkcMJWgEpeGrzXRyZ3RSZYuhX
LhcX8Ns41qK5AaTatXvdi3r5aaOnKnObSooeKa/YyB5WEJNdTnQlLyx6g3qe
6dnD+nDRhhgGwCD2We5SXhz+3isiuytb1a7lpWUtmeMVB2qc9Zenp6FCRgEZ
S67mxVYYI5kaDM4I3NVIevSEqKluIbcCIQJPZmj91bwQCGBaFZmSzvr+KyNT
aPRP9dPKjYV+RvNiBu47gcQktdG4l5fkiYlxLLuGb+UFIzM3B2J7Lw4PBOSH
2r+Zl4rET6cMr6GrOvZgpMcqT7l38+LVD7/I4828YEM0/x6AP7HBMBNHkb+7
epQSj2if2OjHBdTjozjg2T5mfmoEIfwwL2upJ8vr/eUskr1lfmyjn0I/zQuR
CGX7B6itHHI=
            "], {{0, 0}, {68, 69}}, {0, 2}], Frame -> Automatic, 
           FrameLabel -> {None, None}, 
           FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
             Automatic}], 
          Pane[
           
           Column[{15617, 87178, 175895, 693484, 1162832, 3279115, 8607026, 
             15467728, 97014500, 106715950, 117387545, 629126299, 1592038928, 
             9751242820, 10726367102, 31799003812, 54978904193, 90476794612, 
             119524474073, 431476921480, 474624613628, 1322087074990, 
             1454295782489, 10599725360737, 81659697896810, 89825667686491, 
             108808234455140, 119689057900654, 531657963690719, 
             1484823760059790, 1633306136065769, 10796636749672345, 
             61876300424639579, 158063930467103536, 773870323513813889, 
             1751257355865195277, 8926383091451714804, 13819021400596886284, 
             55200923540656574912, 80721015894722232403, 
             118793117484194455643, 430672429232613901207, 
             1173739672155875291327, 8291113639371462820459, 
             18120225003308609102504, 59932247503639470012754, 
             105925472254003417014029, 1016518019479403758715431, 
             2118169821427344134586974, 6329986803570078548045671, 
             7962985483927086402850238, 16759284032319795043135261, 
             28435212435551774547448787, 101278733679106952002193665, 
             611406607047017647202413031, 772547267751719411922654334, 
             1249801994526891353114919767, 8374782193979580488426411743, 
             12212260413377538537269052917, 83433486454715292390995958208, 
             171776835100186821630095554028, 988954518610205503793105109430, 
             1087849970471226054172415620373, 4196634967518348659589657182410,
              4616298464270183525548622900651, 
             6077928310697201878103485190716, 
             12685721141766922065913833709787, 
             83954293255943614272505217080765, 
             142349722581537975699755738788841}], {270, 255}, 
           Scrollbars -> {False, True}], 
          Pane[
           
           Column[{15617, 87178, 175895, 693484, 1162832, 3279115, 8607026, 
             15467728, 97014500, 106715950, 117387545, 629126299, 1592038928, 
             9751242820, 10726367102, 31799003812, 54978904193, 90476794612, 
             119524474073, 431476921480, 474624613628, 1322087074990, 
             1454295782489, 10599725360737, 81659697896810, 89825667686491, 
             108808234455140, 119689057900654, 531657963690719, 
             1484823760059790, 1633306136065769, 10796636749672345, 
             61876300424639579, 158063930467103536, 773870323513813889, 
             1751257355865195277, 8926383091451714804, 13819021400596886284, 
             55200923540656574912, 80721015894722232403, 
             118793117484194455643, 430672429232613901207, 
             1173739672155875291327, 8291113639371462820459, 
             18120225003308609102504, 59932247503639470012754, 
             105925472254003417014029, 1016518019479403758715431, 
             2118169821427344134586974, 6329986803570078548045671, 
             7962985483927086402850238, 16759284032319795043135261, 
             28435212435551774547448787, 101278733679106952002193665, 
             611406607047017647202413031, 772547267751719411922654334, 
             1249801994526891353114919767, 8374782193979580488426411743, 
             12212260413377538537269052917, 83433486454715292390995958208, 
             171776835100186821630095554028, 988954518610205503793105109430, 
             1087849970471226054172415620373, 4196634967518348659589657182410,
              4616298464270183525548622900651, 
             6077928310697201878103485190716, 
             12685721141766922065913833709787, 
             83954293255943614272505217080765, 
             142349722581537975699755738788841}], {270, 255}, 
           Scrollbars -> {False, True}], 68}, {
          Graphics[
           Raster[CompressedData["
1:eJyNVut5xCAMs7xJF+gWXaAj3ALd/19BkrnkkgD0S9sQ4YeQDV+vv99XRsRP
e77bg/bDX4hE9icTbUQG2kv7p73on7aMkDaTHdUevYATRvYp2UWfy26n4/p7
f2t/+2cZAJ33ePq3pCO5SVqXP67iQk8YwDCZAOchz+kFckpwZAXMYHtmPUD5
Dc4x2KATOU+mregZO01znd5sR7Z7tN0RaQyFm7aFkayIcjChZNMZYjApqyBt
Y4S4ZQR8E4v0o5nEGw0nOzJMBcdl5BUH2/5KVhkV7UXtpLjNo3UnXF8ZlsRg
S6dBYqO484Y4cXk7DW5h2PoIKyvZDzQJkTTsWbKA8vxEpySRYYvv8FkCl4Ga
htRNJ1wVV9siUiKripKM8pOTsg4JB9otlUdV2BUeQ2QpJjNcIbdwiTtdDkX9
vW1tYYTLn0G5gp+sqzlI5JQVbjmpVF1KLkaF8wwfzQFVTM+2WWMCiZ7IJ06G
dSncRfLIScFVDqPTTdE07Q6Dz9q5hdcu5ZyTglf3e9TJOXjkoc+s4erOwIIT
x8I2ONWJe52rTKU85QTiGagGseDE+40xZmB3EUeVN/3khLakZDZWnISKSG0U
K50cRJgR9/3kZB0ui1RbnA9VjBSyoRMx7g6xo0EZjSUnisVEB5a1Q3yoB645
YSxw29qonRzH21onalJqbXNOxtXA7W3BSYhina86rnbgbqBzTnxGFeUrncDX
Bx2ga52Ebx++by3Qh852exZf4IfOtqHB8MkTGz32IPB17WTtpu+tO/Coe+IG
mkiMfNfw1PZv2fbVb6923LCud7YHMHxr24y7dPIPw3kVKQ==
            "], {{0, 0}, {46, 69}}, {0, 2}], Frame -> Automatic, 
           FrameLabel -> {None, None}, 
           FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
             Automatic}], 
          Pane[
           
           Column[{15617, 26788, 11555, 6667, 13334, 55666, 112223, 334444, 
             777788, 1555666, 1122278, 4448899, 13334447, 77777788, 155555666,
              111122278, 333348899, 1122223339, 144455555, 67999, 156779, 
             113344, 555566, 1111222, 2333333, 5566666, 11222333, 44444455, 
             88889999, 178888888, 156777779, 113344555, 666677888, 1444555555,
              167999, 116677, 238889, 1122277, 4448888, 12333337, 55666688, 
             133333444, 556667777, 1233334444, 5566667777, 12333334444, 
             55666667777, 123333334444, 556666667777, 1233333334444, 
             5566666667777, 12333333334444, 55666666667777, 123333333334444, 
             556666666667777, 1233333333334444, 5566666666667777, 
             12333333333334444, 55666666666667777, 123333333333334444, 
             556666666666667777, 1233333333333334444, 5566666666666667777, 
             12333333333333334444, 55666666666666667777, 
             123333333333333334444, 556666666666666667777, 
             1233333333333333334444, 5566666666666666667777}], {270, 255}, 
           Scrollbars -> {False, True}], 
          Pane[
           
           Column[{15617, 26788, 11555, 6667, 13334, 55666, 112223, 334444, 
             777788, 1555666, 1122278, 4448899, 13334447, 77777788, 155555666,
              111122278, 333348899, 1122223339, 144455555, 67999, 156779, 
             113344, 555566, 1111222, 2333333, 5566666, 11222333, 44444455, 
             88889999, 178888888, 156777779, 113344555, 666677888, 1444555555,
              167999, 116677, 238889, 1122277, 4448888, 12333337, 55666688, 
             133333444, 556667777, 1233334444, 5566667777, 12333334444, 
             55666667777, 123333334444, 556666667777, 1233333334444, 
             5566666667777, 12333333334444, 55666666667777, 123333333334444, 
             556666666667777, 1233333333334444, 5566666666667777, 
             12333333333334444, 55666666666667777, 123333333333334444, 
             556666666666667777, 1233333333333334444, 5566666666666667777, 
             12333333333333334444, 55666666666666667777, 
             123333333333333334444, 556666666666666667777, 
             1233333333333333334444, 5566666666666666667777}], {270, 255}, 
           Scrollbars -> {False, True}], 68, 
          "No repeating patten detected"}}, $CellContext`finalPalindrome[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[Integer]]] := {
         $CellContext`palindrome[$CellContext`i, $CellContext`m, \
$CellContext`b, $CellContext`v], 
         $CellContext`listPalindrome[$CellContext`i, $CellContext`m, \
$CellContext`b], 
         $CellContext`listPalindrome2[$CellContext`i, $CellContext`m, \
$CellContext`b], 
         $CellContext`countPalindrome[$CellContext`i, $CellContext`m, \
$CellContext`b]}, $CellContext`palindrome[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[Integer]]] := ArrayPlot[
         PadLeft[
          IntegerDigits[
           NestWhileList[
           IntegerReverse[#, $CellContext`b] + #& , $CellContext`i, 
            IntegerDigits[
              IntegerReverse[#, $CellContext`b], $CellContext`b] =!= 
            IntegerDigits[#, $CellContext`b]& , 
            1, $CellContext`m], $CellContext`v]]], $CellContext`listPalindrome[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Pane[
         Column[
          NestWhileList[
          IntegerReverse[#, $CellContext`b] + #& , $CellContext`i, 
           IntegerDigits[
             IntegerReverse[#, $CellContext`b], $CellContext`b] =!= 
           IntegerDigits[#, $CellContext`b]& , 1, $CellContext`m]], {270, 
         255}, Scrollbars -> {False, True}], $CellContext`listPalindrome2[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Pane[
         Column[
          Map[FromDigits, 
           IntegerDigits[
            NestWhileList[
            IntegerReverse[#, $CellContext`b] + #& , $CellContext`i, 
             IntegerDigits[
               IntegerReverse[#, $CellContext`b], $CellContext`b] =!= 
             IntegerDigits[#, $CellContext`b]& , 
             1, $CellContext`m], $CellContext`b]]], {270, 255}, 
         Scrollbars -> {False, True}], $CellContext`countPalindrome[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Length[
          NestWhileList[
          IntegerReverse[#, $CellContext`b] + #& , $CellContext`i, 
           IntegerDigits[
             IntegerReverse[#, $CellContext`b], $CellContext`b] =!= 
           IntegerDigits[#, $CellContext`b]& , 1, $CellContext`m]] - 
        1, $CellContext`finalRepeat[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[Integer]]] := {
         $CellContext`repeat[$CellContext`i, $CellContext`m, $CellContext`b, \
$CellContext`v], 
         $CellContext`listRepeat[$CellContext`i, $CellContext`m, \
$CellContext`b], 
         $CellContext`listRepeat2[$CellContext`i, $CellContext`m, \
$CellContext`b], 
         $CellContext`countRepeat[$CellContext`i, $CellContext`m, \
$CellContext`b]}, $CellContext`repeat[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`r, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[Integer]]] := ArrayPlot[
         PadLeft[
          IntegerDigits[
           NestList[
           IntegerReverse[#, $CellContext`b] + #& , $CellContext`i, \
$CellContext`m], $CellContext`v]]], $CellContext`repeat[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[Integer]]] := ArrayPlot[
         PadLeft[
          IntegerDigits[
           NestList[
           IntegerReverse[#, $CellContext`b] + #& , $CellContext`i, \
$CellContext`m], $CellContext`v]]], $CellContext`listRepeat[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Pane[
         Column[
          NestList[
          IntegerReverse[#, $CellContext`b] + #& , $CellContext`i, \
$CellContext`m]], {270, 255}, 
         Scrollbars -> {False, True}], $CellContext`listRepeat2[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Pane[
         Column[
          Map[FromDigits, 
           IntegerDigits[
            NestList[
            IntegerReverse[#, $CellContext`b] + #& , $CellContext`i, \
$CellContext`m], $CellContext`b]]], {270, 255}, 
         Scrollbars -> {False, True}], $CellContext`countRepeat[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Length[
          NestList[
          IntegerReverse[#, $CellContext`b] + #& , $CellContext`i, \
$CellContext`m]] - 1, $CellContext`finalReorder[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`r, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[Integer]]] := {
         $CellContext`reorder[$CellContext`i, $CellContext`m, $CellContext`r, \
$CellContext`b, $CellContext`v], 
         $CellContext`listReorder[$CellContext`i, $CellContext`m, \
$CellContext`r, $CellContext`b], 
         $CellContext`listReorder2[$CellContext`i, $CellContext`m, \
$CellContext`r, $CellContext`b], 
         $CellContext`countReorder[$CellContext`i, $CellContext`m, \
$CellContext`r, $CellContext`b]}, $CellContext`reorder[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`r, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[Integer]]] := ArrayPlot[
         PadLeft[
          IntegerDigits[
           NestList[FromDigits[
              Flatten[
               Delete[
                Prepend[
                 IntegerDigits[#, $CellContext`b], 
                 Take[
                  
                  IntegerDigits[#, $CellContext`b], -$CellContext`r]], \
-$CellContext`r]], $CellContext`b] + #& , $CellContext`i, $CellContext`m], \
$CellContext`v]]], $CellContext`listReorder[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`r, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Pane[
         Column[
          NestList[FromDigits[
             Flatten[
              Delete[
               Prepend[
                IntegerDigits[#, $CellContext`b], 
                Take[
                 
                 IntegerDigits[#, $CellContext`b], -$CellContext`r]], \
-$CellContext`r]], $CellContext`b] + #& , $CellContext`i, $CellContext`m]], {
         270, 255}, Scrollbars -> {False, True}], $CellContext`listReorder2[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`r, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Pane[
         Column[
          Map[FromDigits, 
           IntegerDigits[
            NestList[FromDigits[
               Flatten[
                Delete[
                 Prepend[
                  IntegerDigits[#, $CellContext`b], 
                  Take[
                   
                   IntegerDigits[#, $CellContext`b], -$CellContext`r]], \
-$CellContext`r]], $CellContext`b] + #& , $CellContext`i, $CellContext`m], \
$CellContext`b]]], {270, 255}, 
         Scrollbars -> {False, True}], $CellContext`countReorder[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`r, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Length[
          NestList[FromDigits[
             Flatten[
              Delete[
               Prepend[
                IntegerDigits[#, $CellContext`b], 
                Take[
                 
                 IntegerDigits[#, $CellContext`b], -$CellContext`r]], \
-$CellContext`r]], $CellContext`b] + #& , $CellContext`i, $CellContext`m]] - 
        1, $CellContext`finalRat[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[Integer]]] := {
         $CellContext`rat[$CellContext`i, $CellContext`m, $CellContext`b, \
$CellContext`v], 
         $CellContext`listRat[$CellContext`i, $CellContext`m, $CellContext`b], 
         $CellContext`listRat2[$CellContext`i, $CellContext`m, \
$CellContext`b], 
         $CellContext`countRat[$CellContext`i, $CellContext`m, \
$CellContext`b], 
         $CellContext`ftrRat[$CellContext`i, $CellContext`m, \
$CellContext`b]}, $CellContext`rat[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[Integer]]] := ArrayPlot[
         PadLeft[
          IntegerDigits[
           NestList[FromDigits[
             Sort[
              IntegerDigits[
              IntegerReverse[#, $CellContext`b] + #]]]& , $CellContext`i, \
$CellContext`m], $CellContext`v]]], $CellContext`listRat[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Pane[
         Column[
          NestList[FromDigits[
            Sort[
             IntegerDigits[
             IntegerReverse[#, $CellContext`b] + #]]]& , $CellContext`i, \
$CellContext`m]], {270, 255}, 
         Scrollbars -> {False, True}], $CellContext`listRat2[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Pane[
         Column[
          Map[FromDigits, 
           IntegerDigits[
            NestList[FromDigits[
              Sort[
               IntegerDigits[
               IntegerReverse[#, $CellContext`b] + #]]]& , $CellContext`i, \
$CellContext`m], $CellContext`b]]], {270, 255}, 
         Scrollbars -> {False, True}], $CellContext`countRat[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Length[
          NestList[FromDigits[
            Sort[
             IntegerDigits[
             IntegerReverse[#, $CellContext`b] + #]]]& , $CellContext`i, \
$CellContext`m]] - 1, $CellContext`ftrRat[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := If[Part[
           FindTransientRepeat[
            NestList[FromDigits[
              Sort[
               IntegerDigits[
               IntegerReverse[#, $CellContext`b] + #]]]& , $CellContext`i, \
$CellContext`m], 2], 2] =!= {}, 
         NestGraph[FromDigits[
           Sort[
            IntegerDigits[
            IntegerReverse[#, $CellContext`b] + #]]]& , $CellContext`i, \
$CellContext`m, VertexLabels -> "Name", ImageSize -> Full], 
         "No repeating patten detected"]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->95796146]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ManipulateCaptionSection"],

Cell["\<\
This project presents two famous types of algorithms called the 196 algorithm \
and the RATS sequence. The 196-algorithm, also known as the reverse-and-add \
algorithm is the  process by which a number is taken, reversed and added to \
the original number. It is conjectured that all numbers in base ten which are \
iterated using this algorithm should end up in a palindrome. 196 is the \
lowest number in base ten which might not result in a palindrome. Numbers \
that do not end up by a palindrome using this algorithm are called Lychrel \
numbers. !96 is a possible Lychrel number. The RATS sequence adds an extra \
step to the 196 algorithm by reversing a number, adding it to the original \
umber and then sorting the digits in numerical order. Another iterative \
process in this demonstration is when the digits are reordered and then added \
to the original number. (i.e. the n last numbers are put to the front of the \
number and then added to the original number). The user can perform these \
algorithms with any number from 10-100,000 in any base 1-10 and can also \
represent them in any base 1-10.
The tabs at the top show the different algorithms. The palindrome checker \
will stop when it reaches a palindrome. The 196 algorithm, Reorder algorithm \
and the RATS sequence tabs will iterate as much as the user decides. The \
number of digits reordered slider only works for the reorder algorithm.\
\>", "ManipulateCaption",
 CellChangeTimes->{
  3.676738233484656*^9, {3.676739479780341*^9, 3.6767394810563636`*^9}, {
   3.6767397013785505`*^9, 3.6767397207420897`*^9}, {3.676757889389271*^9, 
   3.676757893590199*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ThumbnailSection"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`b$$ = 2, $CellContext`i$$ = 
    11120, $CellContext`m$$ = 141, $CellContext`n$$ = 2, $CellContext`r$$ = 
    1, $CellContext`v$$ = 2, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`n$$], 2, "Algorithms:"}, {
      1 -> "196-Algorithm Palindrome checker", 2 -> "196-Algorithm", 3 -> 
       "Reorder-Algorithm", 4 -> "RATS sequence"}}, {{
       Hold[$CellContext`i$$], 11120, "initial value in base 10"}, 10, 100000,
       1}, {{
       Hold[$CellContext`m$$], 141, "max number of iterations"}, 1, 500, 1}, {{
       Hold[$CellContext`r$$], 1, "number of digits reordered"}, 1, 
      Dynamic[
       Length[
        IntegerDigits[$CellContext`i$$, $CellContext`b$$]]], 1}, {{
       Hold[$CellContext`b$$], 2, "base to compute algorithm"}, 2, 10, 1}, {{
       Hold[$CellContext`v$$], 2, "base to represent iterations"}, 2, 10, 1}},
     Typeset`size$$ = {600., {146., 154.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`n$2286$$ = False, $CellContext`i$2287$$ = 
    0, $CellContext`m$2288$$ = 0, $CellContext`r$2289$$ = 
    0, $CellContext`b$2290$$ = 0, $CellContext`v$2291$$ = 0}, 
    DynamicBox[ToBoxes[
      RawBoxes[
       Manipulate`ManipulateBoxes[
       1, StandardForm, 
        "Variables" :> {$CellContext`b$$ = 2, $CellContext`i$$ = 
          11120, $CellContext`m$$ = 141, $CellContext`n$$ = 
          2, $CellContext`r$$ = 1, $CellContext`v$$ = 2}, 
        "ControllerVariables" :> {
          Hold[$CellContext`n$$, $CellContext`n$2286$$, False], 
          Hold[$CellContext`i$$, $CellContext`i$2287$$, 0], 
          Hold[$CellContext`m$$, $CellContext`m$2288$$, 0], 
          Hold[$CellContext`r$$, $CellContext`r$2289$$, 0], 
          Hold[$CellContext`b$$, $CellContext`b$2290$$, 0], 
          Hold[$CellContext`v$$, $CellContext`v$2291$$, 0]}, 
        "OtherVariables" :> {
         Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
          Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
          Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
          Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
        Module[{$CellContext`func$}, $CellContext`func$ = {
             $CellContext`finalPalindrome[$CellContext`i$$, $CellContext`m$$, \
$CellContext`b$$, $CellContext`v$$], 
             $CellContext`finalRepeat[$CellContext`i$$, $CellContext`m$$, \
$CellContext`b$$, $CellContext`v$$], 
             $CellContext`finalReorder[$CellContext`i$$, $CellContext`m$$, \
$CellContext`r$$, $CellContext`b$$, $CellContext`v$$], 
             $CellContext`finalRat[$CellContext`i$$, $CellContext`m$$, \
$CellContext`b$$, $CellContext`v$$]}; Pane[
            If[$CellContext`n$$ == 4, 
             Grid[{{
                StringJoin["visual representation in base ", 
                 ToString[$CellContext`v$$]], 
                "numbers after each iteration in base 10", 
                StringJoin["numbers after each iteration in base ", 
                 ToString[$CellContext`b$$]], "number of iterations", 
                "NestGraph (if there is a repeating pattern)"}, 
               Part[$CellContext`func$, $CellContext`n$$]}, Frame -> All, 
              ItemSize -> Full], 
             Grid[{{
                StringJoin["visual representation in base ", 
                 ToString[$CellContext`v$$]], 
                "numbers after each iteration in base 10", 
                StringJoin["numbers after each iteration in base ", 
                 ToString[$CellContext`b$$]], "number of iterations"}, 
               Part[$CellContext`func$, $CellContext`n$$]}, Frame -> All, 
              ItemSize -> Full]], {600, 300}, Scrollbars -> {True, False}]], 
        "Specifications" :> {{{$CellContext`n$$, 2, "Algorithms:"}, {
           1 -> "196-Algorithm Palindrome checker", 2 -> "196-Algorithm", 3 -> 
            "Reorder-Algorithm", 4 -> "RATS sequence"}, ControlType -> 
           SetterBar}, 
          Delimiter, {{$CellContext`i$$, 11120, "initial value in base 10"}, 
           10, 100000, 1, Appearance -> 
           "Labeled"}, {{$CellContext`m$$, 141, "max number of iterations"}, 
           1, 500, 1, Appearance -> 
           "Labeled"}, {{$CellContext`r$$, 1, "number of digits reordered"}, 
           1, 
           Dynamic[
            Length[
             IntegerDigits[$CellContext`i$$, $CellContext`b$$]]], 1, 
           Appearance -> 
           "Labeled"}, {{$CellContext`b$$, 2, "base to compute algorithm"}, 2,
            10, 1, ControlType -> 
           PopupMenu}, {{$CellContext`v$$, 2, "base to represent iterations"},
            2, 10, 1, ControlType -> PopupMenu}}, 
        "Options" :> {FrameMargins -> None}, 
        "DefaultOptions" :> {ControllerLinking -> True}]], StandardForm],
     ImageSizeCache->{635., {260., 267.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`func = {{
          Graphics[
           
           Raster[{{0, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 0, 0, 2, 2, 2, 1, 1, 2, 
            0}, {2, 0, 0, 0, 2, 2, 1, 1, 2, 0, 0, 0, 1, 0, 1, 2, 1, 1, 2, 
            1}, {2, 1, 1, 0, 2, 0, 0, 2, 1, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 
            0}, {2, 2, 1, 2, 1, 2, 1, 1, 0, 2, 2, 1, 1, 2, 2, 1, 2, 2, 0, 
            1}, {2, 2, 2, 1, 0, 2, 2, 0, 1, 1, 2, 2, 2, 2, 1, 2, 0, 1, 0, 
            0}, {2, 2, 2, 2, 0, 0, 0, 2, 0, 0, 0, 2, 1, 2, 0, 0, 2, 0, 1, 
            1}, {2, 2, 2, 2, 2, 0, 0, 1, 0, 1, 1, 2, 0, 1, 2, 1, 1, 0, 2, 
            0}, {2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 2, 0, 1, 1, 2, 1, 2, 
            1}, {2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 2, 2, 1, 1, 0, 2, 0, 2, 1, 
            0}, {2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 0, 1, 0, 1, 1, 2, 2, 2, 0, 
            1}, {2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 1, 1, 2, 2, 1, 1, 0, 
            0}, {2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 0, 0, 2, 1, 2, 1, 
            1}, {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 1, 2, 1, 2, 0, 1, 2, 
            0}}, {{0, 0}, {20, 13}}, {0, 2}], Frame -> Automatic, 
           FrameLabel -> {None, None}, 
           FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
             Automatic}], 
          Pane[
           
           Column[{15617, 87268, 173546, 818917, 1538735, 6917086, 13724282, 
            41967013, 73043927, 145977964, 615757505, 1121515021, 
            2326666232}], {270, 255}, Scrollbars -> {False, True}], 
          Pane[
           
           Column[{15617, 87268, 173546, 818917, 1538735, 6917086, 13724282, 
            41967013, 73043927, 145977964, 615757505, 1121515021, 
            2326666232}], {270, 255}, Scrollbars -> {False, True}], 12}, {
          Graphics[
           Raster[CompressedData["
1:eJylmF2S20AIhIGb5DCpvOcIe4G9/1tG9NfIXlu2rEzZKuuP6QG6Yfzr6/vv
V0XE7/X9s75ZUet8HSMztt+5Dlm5jb683d4eXKfZx/XUOqzf/VBtl7cr2RfX
1dpenDe3H/3p8+wbqRnXJ3uunnSdbBZLzzayxrDO1mjLG4qGUCnb/VIGr6VO
ZbkErb8Fzp7Ar8hQWy6mAkD1ZbD14ns1fVL4KIW7TzO1rM14T9YP7+iYo9eg
95JF2GUhf7KsvFmunNmLK03Ys2cweShg8mQUL/elSHDqXntG3uwbcqa829HH
fK+4Q4prg8xIw+iH207DIxD9U2vrWdoHQXbgyTLamBzQ9ApAKny6hxe0WoWe
qPT0fch0pEo/QuHNJJFuc2nmzORt8juLB2q3I/gp1zcyL8m5k6SY0qFhCjpo
quz9kHsjSHURwdkDNyKBBLgwmuIKPvCEPVEqXFppzDshtIlRD/yHJ0QUAdJT
oZCRVhXDeGXzLZ6ObO0SgS4oedopSgNxM/Fl1A0aWCHv6PnJwc56xIZsIHjy
/i0aRUiixO2ygg3ahJ0WAWhU93aEWeZw6egPtCFCipvSPO7RVLIasod8G6L6
J/EOYlv5A02ZCFqMOU1gxI2yvlqpfkQKPO0KK7PIjUqjdqSkuJJkwsMIT43L
JVt2hCRjaE4+PaARa0QAVZbadRZ9NicqJq6PZgrKhipSmtfIuSkeYs0w7yme
gsQVZddqdTg+pAgVZNEzM3vJc8kQ+5GOpIA6IXb1e8CD18IsCyt4uEbJf8T6
AA3JRYawjrDfHMuCWvksUsZjWYaAtjN1KKWRMQXiCI+F2lU1ZykSnGbrrZI9
9zPFwqU2pMOiq2pGprXnxRB6DvQ9MRGyFNUzTt3jycTPzkInikuJMB1HynjQ
Hyf8nsZ9hsOPIzV4CoIntS/Gw+HGpF5FynjKUa3JXYjuEMTLSIHH3WGZYOhp
ul7e16kjODX1FUKHG9DpRN5ECjzujnBQhmk6Wv0eDU2l0xYJmoqGRp8wQz7T
rFo1XaYlGqfMqGWf/gmnh/uPM5Ha8fTcyI/1HIKfQ1PIMR7Cx7Bevj473MhO
3akwJc5FCjwun+qfKAl47TyaKudbsUWZUng2UoNnX4+bFWXBJ2hcwKkZYQU7
xal7POxAvDcx/z9D40rl7Y3UNd6q3+MIv6ZGiy3ap2iUt2anGsvXdeoQT3on
XEOpz9G4KEHR+ohTd3B2azR0H0cKIMNNS+kVM3ZwhLdgl9B4i0IfXSfq1IGd
mI3qce93YsxOgKBfNOMeYLqdi4PGp/xXwuVB2CnJl4f/F6rrkRo82jldjpTx
FP9D/I8Zb9HX5x/9SBz+
            "], {{0, 0}, {71, 69}}, {0, 2}], Frame -> Automatic, 
           FrameLabel -> {None, None}, 
           FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
             Automatic}], 
          Pane[
           
           Column[{15617, 87268, 173546, 818917, 1538735, 6917086, 13724282, 
             41967013, 73043927, 145977964, 615757505, 1121515021, 2326666232,
              4653332464, 9295666028, 17502331957, 93415652528, 175941303967, 
             945244453538, 1780598896087, 9587587846958, 18184075704817, 
             90024832752998, 179950556595007, 880546211654978, 
             1760002324300066, 8360036556300737, 15730073112601375, 
             73040694249605126, 135191388499209163, 497094383382400694, 
             993098666765891488, 1877297234432781887, 9759169578760709668, 
             18428240257520329247, 92720542832724611728, 
             175432185556549114457, 929844131212130349028, 
             1750787162424261797957, 9348758786666879668528, 
             17607428573333758246967, 94571714306671340717638, 
             178243418624331682435187, 959777704757758496778058, 
             1810655399615515904556017, 8917209494770685840116198, 
             17833319980631460789143396, 87167518687045069780477267, 
             163444927483099148462053445, 707795192325089533191497806, 
             1316589383661070056483095513, 4472493230161771720322951644, 
             8934085460433543330646894388, 17769071920766996671292698786, 
             86558701138436963374209795557, 162118491385773926857320581125, 
             683303515144403304440515392386, 1366597030188806608882030695772, 
             4142557333076872697692338652403, 7185125666044835484395676204817,
              14369152431979680868802341420634, 
             57971566752866489566715766616975, 
             115933233504633088033541533134950, 
             175364568649963968369946865474461, 
             339839137299927837739893730938032, 
             570678174698865576469886462876965, 
             1140356439387830252038782934753040, 
             1543930832266132772426622281283451, 
             3087752654532375544743244661676902}], {270, 255}, 
           Scrollbars -> {False, True}], 
          Pane[
           
           Column[{15617, 87268, 173546, 818917, 1538735, 6917086, 13724282, 
             41967013, 73043927, 145977964, 615757505, 1121515021, 2326666232,
              4653332464, 9295666028, 17502331957, 93415652528, 175941303967, 
             945244453538, 1780598896087, 9587587846958, 18184075704817, 
             90024832752998, 179950556595007, 880546211654978, 
             1760002324300066, 8360036556300737, 15730073112601375, 
             73040694249605126, 135191388499209163, 497094383382400694, 
             993098666765891488, 1877297234432781887, 9759169578760709668, 
             18428240257520329247, 92720542832724611728, 
             175432185556549114457, 929844131212130349028, 
             1750787162424261797957, 9348758786666879668528, 
             17607428573333758246967, 94571714306671340717638, 
             178243418624331682435187, 959777704757758496778058, 
             1810655399615515904556017, 8917209494770685840116198, 
             17833319980631460789143396, 87167518687045069780477267, 
             163444927483099148462053445, 707795192325089533191497806, 
             1316589383661070056483095513, 4472493230161771720322951644, 
             8934085460433543330646894388, 17769071920766996671292698786, 
             86558701138436963374209795557, 162118491385773926857320581125, 
             683303515144403304440515392386, 1366597030188806608882030695772, 
             4142557333076872697692338652403, 7185125666044835484395676204817,
              14369152431979680868802341420634, 
             57971566752866489566715766616975, 
             115933233504633088033541533134950, 
             175364568649963968369946865474461, 
             339839137299927837739893730938032, 
             570678174698865576469886462876965, 
             1140356439387830252038782934753040, 
             1543930832266132772426622281283451, 
             3087752654532375544743244661676902}], {270, 255}, 
           Scrollbars -> {False, True}], 68}, {
          Graphics[
           Raster[CompressedData["
1:eJydl9GZ20AIhBk6SS9JAynhGrj+36JlfpDOkW3Je5/tk7wGdhgG9Ovr++9X
RsSf7fV7e0naXqnc1vYRvrX9s23K7btYX21b1t92pbq9XbB/mWJrZv1Otda3
db+Wr7dXGdD6DP9+mazfrKvtXqw/ldNyVDGozJflUPlL1S8j2Fl7op2qTrLc
5fJmAw6mfC0Lddv+sk60BylHWvcTjzZmOMLBEEQDNxsVO5SNJkZtDZjKupLT
GYsFj28WbgVOnTOF7aiwvbuwMp4gF3YT9m4bBQlHCB/Qxy/LvpIBqJ2OyIDa
XHZ2w57VABQC9e4DH5LGqUmrjQTwFbDFDjKXncqJsw5SEcwHywBAvjqrQyYG
Z9ikTYAzyoqxgYkc12ZDDO/MC5Jgb073HoepJdk9GVADEka0ckdq06h0XhpY
GDBQOb/h2FyC5UHZ76nJS4JEV4aMqcll/ihdKH53RTuqYxyunGE5fnNXAZBE
C9KEVSp/GoHbCbcQDJdSDCmdfRtL/YxjMuxCyaY+pe2TiuIE4IiHOBATiCnD
OSoRcA9+qMs1HwMxDQsupzcNMmDnVFS2nD3GgZFguwi72D37FaOPzepHWEeo
snns4OpgTneLImj/vyYrFl3Eu6lqGYV6p3mx2xbo0VC5Zip6jTAD6VkcCYeL
G12IlSqRe0owD5JwYiRMI+8TyjnoWhcFjc7jSCRDXSHZsqxWMOhCp3hmxH2N
5hGmmRUSDmUg4M9sIHTWPZM8bW4qflfnp8uUpufZ0h4fciulnuTFgeA9uluQ
3xZRE+R5XhpXxCyyOy/yqlYXdbt6dRo4ru6aTAtBi6f5vYykGyG5pNFN+3KN
v7SR9Gjra/ewdL8+Fs+bSMwONyeTbTK1k/+dkcMJWgEpeGrzXRyZ3RSZYuhX
LhcX8Ns41qK5AaTatXvdi3r5aaOnKnObSooeKa/YyB5WEJNdTnQlLyx6g3qe
6dnD+nDRhhgGwCD2We5SXhz+3isiuytb1a7lpWUtmeMVB2qc9Zenp6FCRgEZ
S67mxVYYI5kaDM4I3NVIevSEqKluIbcCIQJPZmj91bwQCGBaFZmSzvr+KyNT
aPRP9dPKjYV+RvNiBu47gcQktdG4l5fkiYlxLLuGb+UFIzM3B2J7Lw4PBOSH
2r+Zl4rET6cMr6GrOvZgpMcqT7l38+LVD7/I4828YEM0/x6AP7HBMBNHkb+7
epQSj2if2OjHBdTjozjg2T5mfmoEIfwwL2upJ8vr/eUskr1lfmyjn0I/zQuR
CGX7B6itHHI=
            "], {{0, 0}, {68, 69}}, {0, 2}], Frame -> Automatic, 
           FrameLabel -> {None, None}, 
           FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
             Automatic}], 
          Pane[
           
           Column[{15617, 87178, 175895, 693484, 1162832, 3279115, 8607026, 
             15467728, 97014500, 106715950, 117387545, 629126299, 1592038928, 
             9751242820, 10726367102, 31799003812, 54978904193, 90476794612, 
             119524474073, 431476921480, 474624613628, 1322087074990, 
             1454295782489, 10599725360737, 81659697896810, 89825667686491, 
             108808234455140, 119689057900654, 531657963690719, 
             1484823760059790, 1633306136065769, 10796636749672345, 
             61876300424639579, 158063930467103536, 773870323513813889, 
             1751257355865195277, 8926383091451714804, 13819021400596886284, 
             55200923540656574912, 80721015894722232403, 
             118793117484194455643, 430672429232613901207, 
             1173739672155875291327, 8291113639371462820459, 
             18120225003308609102504, 59932247503639470012754, 
             105925472254003417014029, 1016518019479403758715431, 
             2118169821427344134586974, 6329986803570078548045671, 
             7962985483927086402850238, 16759284032319795043135261, 
             28435212435551774547448787, 101278733679106952002193665, 
             611406607047017647202413031, 772547267751719411922654334, 
             1249801994526891353114919767, 8374782193979580488426411743, 
             12212260413377538537269052917, 83433486454715292390995958208, 
             171776835100186821630095554028, 988954518610205503793105109430, 
             1087849970471226054172415620373, 4196634967518348659589657182410,
              4616298464270183525548622900651, 
             6077928310697201878103485190716, 
             12685721141766922065913833709787, 
             83954293255943614272505217080765, 
             142349722581537975699755738788841}], {270, 255}, 
           Scrollbars -> {False, True}], 
          Pane[
           
           Column[{15617, 87178, 175895, 693484, 1162832, 3279115, 8607026, 
             15467728, 97014500, 106715950, 117387545, 629126299, 1592038928, 
             9751242820, 10726367102, 31799003812, 54978904193, 90476794612, 
             119524474073, 431476921480, 474624613628, 1322087074990, 
             1454295782489, 10599725360737, 81659697896810, 89825667686491, 
             108808234455140, 119689057900654, 531657963690719, 
             1484823760059790, 1633306136065769, 10796636749672345, 
             61876300424639579, 158063930467103536, 773870323513813889, 
             1751257355865195277, 8926383091451714804, 13819021400596886284, 
             55200923540656574912, 80721015894722232403, 
             118793117484194455643, 430672429232613901207, 
             1173739672155875291327, 8291113639371462820459, 
             18120225003308609102504, 59932247503639470012754, 
             105925472254003417014029, 1016518019479403758715431, 
             2118169821427344134586974, 6329986803570078548045671, 
             7962985483927086402850238, 16759284032319795043135261, 
             28435212435551774547448787, 101278733679106952002193665, 
             611406607047017647202413031, 772547267751719411922654334, 
             1249801994526891353114919767, 8374782193979580488426411743, 
             12212260413377538537269052917, 83433486454715292390995958208, 
             171776835100186821630095554028, 988954518610205503793105109430, 
             1087849970471226054172415620373, 4196634967518348659589657182410,
              4616298464270183525548622900651, 
             6077928310697201878103485190716, 
             12685721141766922065913833709787, 
             83954293255943614272505217080765, 
             142349722581537975699755738788841}], {270, 255}, 
           Scrollbars -> {False, True}], 68}, {
          Graphics[
           Raster[CompressedData["
1:eJyNVut5xCAMs7xJF+gWXaAj3ALd/19BkrnkkgD0S9sQ4YeQDV+vv99XRsRP
e77bg/bDX4hE9icTbUQG2kv7p73on7aMkDaTHdUevYATRvYp2UWfy26n4/p7
f2t/+2cZAJ33ePq3pCO5SVqXP67iQk8YwDCZAOchz+kFckpwZAXMYHtmPUD5
Dc4x2KATOU+mregZO01znd5sR7Z7tN0RaQyFm7aFkayIcjChZNMZYjApqyBt
Y4S4ZQR8E4v0o5nEGw0nOzJMBcdl5BUH2/5KVhkV7UXtpLjNo3UnXF8ZlsRg
S6dBYqO484Y4cXk7DW5h2PoIKyvZDzQJkTTsWbKA8vxEpySRYYvv8FkCl4Ga
htRNJ1wVV9siUiKripKM8pOTsg4JB9otlUdV2BUeQ2QpJjNcIbdwiTtdDkX9
vW1tYYTLn0G5gp+sqzlI5JQVbjmpVF1KLkaF8wwfzQFVTM+2WWMCiZ7IJ06G
dSncRfLIScFVDqPTTdE07Q6Dz9q5hdcu5ZyTglf3e9TJOXjkoc+s4erOwIIT
x8I2ONWJe52rTKU85QTiGagGseDE+40xZmB3EUeVN/3khLakZDZWnISKSG0U
K50cRJgR9/3kZB0ui1RbnA9VjBSyoRMx7g6xo0EZjSUnisVEB5a1Q3yoB645
YSxw29qonRzH21onalJqbXNOxtXA7W3BSYhina86rnbgbqBzTnxGFeUrncDX
Bx2ga52Ebx++by3Qh852exZf4IfOtqHB8MkTGz32IPB17WTtpu+tO/Coe+IG
mkiMfNfw1PZv2fbVb6923LCud7YHMHxr24y7dPIPw3kVKQ==
            "], {{0, 0}, {46, 69}}, {0, 2}], Frame -> Automatic, 
           FrameLabel -> {None, None}, 
           FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
             Automatic}], 
          Pane[
           
           Column[{15617, 26788, 11555, 6667, 13334, 55666, 112223, 334444, 
             777788, 1555666, 1122278, 4448899, 13334447, 77777788, 155555666,
              111122278, 333348899, 1122223339, 144455555, 67999, 156779, 
             113344, 555566, 1111222, 2333333, 5566666, 11222333, 44444455, 
             88889999, 178888888, 156777779, 113344555, 666677888, 1444555555,
              167999, 116677, 238889, 1122277, 4448888, 12333337, 55666688, 
             133333444, 556667777, 1233334444, 5566667777, 12333334444, 
             55666667777, 123333334444, 556666667777, 1233333334444, 
             5566666667777, 12333333334444, 55666666667777, 123333333334444, 
             556666666667777, 1233333333334444, 5566666666667777, 
             12333333333334444, 55666666666667777, 123333333333334444, 
             556666666666667777, 1233333333333334444, 5566666666666667777, 
             12333333333333334444, 55666666666666667777, 
             123333333333333334444, 556666666666666667777, 
             1233333333333333334444, 5566666666666666667777}], {270, 255}, 
           Scrollbars -> {False, True}], 
          Pane[
           
           Column[{15617, 26788, 11555, 6667, 13334, 55666, 112223, 334444, 
             777788, 1555666, 1122278, 4448899, 13334447, 77777788, 155555666,
              111122278, 333348899, 1122223339, 144455555, 67999, 156779, 
             113344, 555566, 1111222, 2333333, 5566666, 11222333, 44444455, 
             88889999, 178888888, 156777779, 113344555, 666677888, 1444555555,
              167999, 116677, 238889, 1122277, 4448888, 12333337, 55666688, 
             133333444, 556667777, 1233334444, 5566667777, 12333334444, 
             55666667777, 123333334444, 556666667777, 1233333334444, 
             5566666667777, 12333333334444, 55666666667777, 123333333334444, 
             556666666667777, 1233333333334444, 5566666666667777, 
             12333333333334444, 55666666666667777, 123333333333334444, 
             556666666666667777, 1233333333333334444, 5566666666666667777, 
             12333333333333334444, 55666666666666667777, 
             123333333333333334444, 556666666666666667777, 
             1233333333333333334444, 5566666666666666667777}], {270, 255}, 
           Scrollbars -> {False, True}], 68, 
          "No repeating patten detected"}}, $CellContext`finalPalindrome[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[Integer]]] := {
         $CellContext`palindrome[$CellContext`i, $CellContext`m, \
$CellContext`b, $CellContext`v], 
         $CellContext`listPalindrome[$CellContext`i, $CellContext`m, \
$CellContext`b], 
         $CellContext`listPalindrome2[$CellContext`i, $CellContext`m, \
$CellContext`b], 
         $CellContext`countPalindrome[$CellContext`i, $CellContext`m, \
$CellContext`b]}, $CellContext`palindrome[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[Integer]]] := ArrayPlot[
         PadLeft[
          IntegerDigits[
           NestWhileList[
           IntegerReverse[#, $CellContext`b] + #& , $CellContext`i, 
            IntegerDigits[
              IntegerReverse[#, $CellContext`b], $CellContext`b] =!= 
            IntegerDigits[#, $CellContext`b]& , 
            1, $CellContext`m], $CellContext`v]]], $CellContext`listPalindrome[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Pane[
         Column[
          NestWhileList[
          IntegerReverse[#, $CellContext`b] + #& , $CellContext`i, 
           IntegerDigits[
             IntegerReverse[#, $CellContext`b], $CellContext`b] =!= 
           IntegerDigits[#, $CellContext`b]& , 1, $CellContext`m]], {270, 
         255}, Scrollbars -> {False, True}], $CellContext`listPalindrome2[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Pane[
         Column[
          Map[FromDigits, 
           IntegerDigits[
            NestWhileList[
            IntegerReverse[#, $CellContext`b] + #& , $CellContext`i, 
             IntegerDigits[
               IntegerReverse[#, $CellContext`b], $CellContext`b] =!= 
             IntegerDigits[#, $CellContext`b]& , 
             1, $CellContext`m], $CellContext`b]]], {270, 255}, 
         Scrollbars -> {False, True}], $CellContext`countPalindrome[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Length[
          NestWhileList[
          IntegerReverse[#, $CellContext`b] + #& , $CellContext`i, 
           IntegerDigits[
             IntegerReverse[#, $CellContext`b], $CellContext`b] =!= 
           IntegerDigits[#, $CellContext`b]& , 1, $CellContext`m]] - 
        1, $CellContext`finalRepeat[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[Integer]]] := {
         $CellContext`repeat[$CellContext`i, $CellContext`m, $CellContext`b, \
$CellContext`v], 
         $CellContext`listRepeat[$CellContext`i, $CellContext`m, \
$CellContext`b], 
         $CellContext`listRepeat2[$CellContext`i, $CellContext`m, \
$CellContext`b], 
         $CellContext`countRepeat[$CellContext`i, $CellContext`m, \
$CellContext`b]}, $CellContext`repeat[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`r, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[Integer]]] := ArrayPlot[
         PadLeft[
          IntegerDigits[
           NestList[
           IntegerReverse[#, $CellContext`b] + #& , $CellContext`i, \
$CellContext`m], $CellContext`v]]], $CellContext`repeat[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[Integer]]] := ArrayPlot[
         PadLeft[
          IntegerDigits[
           NestList[
           IntegerReverse[#, $CellContext`b] + #& , $CellContext`i, \
$CellContext`m], $CellContext`v]]], $CellContext`listRepeat[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Pane[
         Column[
          NestList[
          IntegerReverse[#, $CellContext`b] + #& , $CellContext`i, \
$CellContext`m]], {270, 255}, 
         Scrollbars -> {False, True}], $CellContext`listRepeat2[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Pane[
         Column[
          Map[FromDigits, 
           IntegerDigits[
            NestList[
            IntegerReverse[#, $CellContext`b] + #& , $CellContext`i, \
$CellContext`m], $CellContext`b]]], {270, 255}, 
         Scrollbars -> {False, True}], $CellContext`countRepeat[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Length[
          NestList[
          IntegerReverse[#, $CellContext`b] + #& , $CellContext`i, \
$CellContext`m]] - 1, $CellContext`finalReorder[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`r, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[Integer]]] := {
         $CellContext`reorder[$CellContext`i, $CellContext`m, $CellContext`r, \
$CellContext`b, $CellContext`v], 
         $CellContext`listReorder[$CellContext`i, $CellContext`m, \
$CellContext`r, $CellContext`b], 
         $CellContext`listReorder2[$CellContext`i, $CellContext`m, \
$CellContext`r, $CellContext`b], 
         $CellContext`countReorder[$CellContext`i, $CellContext`m, \
$CellContext`r, $CellContext`b]}, $CellContext`reorder[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`r, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[Integer]]] := ArrayPlot[
         PadLeft[
          IntegerDigits[
           NestList[FromDigits[
              Flatten[
               Delete[
                Prepend[
                 IntegerDigits[#, $CellContext`b], 
                 Take[
                  
                  IntegerDigits[#, $CellContext`b], -$CellContext`r]], \
-$CellContext`r]], $CellContext`b] + #& , $CellContext`i, $CellContext`m], \
$CellContext`v]]], $CellContext`listReorder[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`r, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Pane[
         Column[
          NestList[FromDigits[
             Flatten[
              Delete[
               Prepend[
                IntegerDigits[#, $CellContext`b], 
                Take[
                 
                 IntegerDigits[#, $CellContext`b], -$CellContext`r]], \
-$CellContext`r]], $CellContext`b] + #& , $CellContext`i, $CellContext`m]], {
         270, 255}, Scrollbars -> {False, True}], $CellContext`listReorder2[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`r, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Pane[
         Column[
          Map[FromDigits, 
           IntegerDigits[
            NestList[FromDigits[
               Flatten[
                Delete[
                 Prepend[
                  IntegerDigits[#, $CellContext`b], 
                  Take[
                   
                   IntegerDigits[#, $CellContext`b], -$CellContext`r]], \
-$CellContext`r]], $CellContext`b] + #& , $CellContext`i, $CellContext`m], \
$CellContext`b]]], {270, 255}, 
         Scrollbars -> {False, True}], $CellContext`countReorder[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`r, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Length[
          NestList[FromDigits[
             Flatten[
              Delete[
               Prepend[
                IntegerDigits[#, $CellContext`b], 
                Take[
                 
                 IntegerDigits[#, $CellContext`b], -$CellContext`r]], \
-$CellContext`r]], $CellContext`b] + #& , $CellContext`i, $CellContext`m]] - 
        1, $CellContext`finalRat[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[Integer]]] := {
         $CellContext`rat[$CellContext`i, $CellContext`m, $CellContext`b, \
$CellContext`v], 
         $CellContext`listRat[$CellContext`i, $CellContext`m, $CellContext`b], 
         $CellContext`listRat2[$CellContext`i, $CellContext`m, \
$CellContext`b], 
         $CellContext`countRat[$CellContext`i, $CellContext`m, \
$CellContext`b], 
         $CellContext`ftrRat[$CellContext`i, $CellContext`m, \
$CellContext`b]}, $CellContext`rat[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[Integer]]] := ArrayPlot[
         PadLeft[
          IntegerDigits[
           NestList[FromDigits[
             Sort[
              IntegerDigits[
              IntegerReverse[#, $CellContext`b] + #]]]& , $CellContext`i, \
$CellContext`m], $CellContext`v]]], $CellContext`listRat[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Pane[
         Column[
          NestList[FromDigits[
            Sort[
             IntegerDigits[
             IntegerReverse[#, $CellContext`b] + #]]]& , $CellContext`i, \
$CellContext`m]], {270, 255}, 
         Scrollbars -> {False, True}], $CellContext`listRat2[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Pane[
         Column[
          Map[FromDigits, 
           IntegerDigits[
            NestList[FromDigits[
              Sort[
               IntegerDigits[
               IntegerReverse[#, $CellContext`b] + #]]]& , $CellContext`i, \
$CellContext`m], $CellContext`b]]], {270, 255}, 
         Scrollbars -> {False, True}], $CellContext`countRat[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Length[
          NestList[FromDigits[
            Sort[
             IntegerDigits[
             IntegerReverse[#, $CellContext`b] + #]]]& , $CellContext`i, \
$CellContext`m]] - 1, $CellContext`ftrRat[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := If[Part[
           FindTransientRepeat[
            NestList[FromDigits[
              Sort[
               IntegerDigits[
               IntegerReverse[#, $CellContext`b] + #]]]& , $CellContext`i, \
$CellContext`m], 2], 2] =!= {}, 
         NestGraph[FromDigits[
           Sort[
            IntegerDigits[
            IntegerReverse[#, $CellContext`b] + #]]]& , $CellContext`i, \
$CellContext`m, VertexLabels -> "Name", ImageSize -> Full], 
         "No repeating patten detected"]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->192628579]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SnapshotsSection"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`b$$ = 10, $CellContext`i$$ = 
    89, $CellContext`m$$ = 78, $CellContext`n$$ = 1, $CellContext`r$$ = 
    1, $CellContext`v$$ = 2, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`n$$], 1, "Algorithms:"}, {
      1 -> "196-Algorithm Palindrome checker", 2 -> "196-Algorithm", 3 -> 
       "Reorder-Algorithm", 4 -> "RATS sequence"}}, {{
       Hold[$CellContext`i$$], 89, "initial value in base 10"}, 10, 100000, 
      1}, {{
       Hold[$CellContext`m$$], 78, "max number of iterations"}, 1, 500, 1}, {{
       Hold[$CellContext`r$$], 1, "number of digits reordered"}, 1, 
      Dynamic[
       Length[
        IntegerDigits[$CellContext`i$$, $CellContext`b$$]]], 1}, {{
       Hold[$CellContext`b$$], 10, "base to compute algorithm"}, 2, 10, 1}, {{
       Hold[$CellContext`v$$], 2, "base to represent iterations"}, 2, 10, 1}},
     Typeset`size$$ = {600., {146., 154.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`n$2370$$ = False, $CellContext`i$2371$$ = 
    0, $CellContext`m$2372$$ = 0, $CellContext`r$2373$$ = 
    0, $CellContext`b$2374$$ = 0, $CellContext`v$2375$$ = 0}, 
    DynamicBox[ToBoxes[
      RawBoxes[
       Manipulate`ManipulateBoxes[
       1, StandardForm, 
        "Variables" :> {$CellContext`b$$ = 10, $CellContext`i$$ = 
          89, $CellContext`m$$ = 78, $CellContext`n$$ = 1, $CellContext`r$$ = 
          1, $CellContext`v$$ = 2}, "ControllerVariables" :> {
          Hold[$CellContext`n$$, $CellContext`n$2370$$, False], 
          Hold[$CellContext`i$$, $CellContext`i$2371$$, 0], 
          Hold[$CellContext`m$$, $CellContext`m$2372$$, 0], 
          Hold[$CellContext`r$$, $CellContext`r$2373$$, 0], 
          Hold[$CellContext`b$$, $CellContext`b$2374$$, 0], 
          Hold[$CellContext`v$$, $CellContext`v$2375$$, 0]}, 
        "OtherVariables" :> {
         Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
          Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
          Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
          Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
        Module[{$CellContext`func$}, $CellContext`func$ = {
             $CellContext`finalPalindrome[$CellContext`i$$, $CellContext`m$$, \
$CellContext`b$$, $CellContext`v$$], 
             $CellContext`finalRepeat[$CellContext`i$$, $CellContext`m$$, \
$CellContext`b$$, $CellContext`v$$], 
             $CellContext`finalReorder[$CellContext`i$$, $CellContext`m$$, \
$CellContext`r$$, $CellContext`b$$, $CellContext`v$$], 
             $CellContext`finalRat[$CellContext`i$$, $CellContext`m$$, \
$CellContext`b$$, $CellContext`v$$]}; Pane[
            If[$CellContext`n$$ == 4, 
             Grid[{{
                StringJoin["visual representation in base ", 
                 ToString[$CellContext`v$$]], 
                "numbers after each iteration in base 10", 
                StringJoin["numbers after each iteration in base ", 
                 ToString[$CellContext`b$$]], "number of iterations", 
                "NestGraph (if there is a repeating pattern)"}, 
               Part[$CellContext`func$, $CellContext`n$$]}, Frame -> All, 
              ItemSize -> Full], 
             Grid[{{
                StringJoin["visual representation in base ", 
                 ToString[$CellContext`v$$]], 
                "numbers after each iteration in base 10", 
                StringJoin["numbers after each iteration in base ", 
                 ToString[$CellContext`b$$]], "number of iterations"}, 
               Part[$CellContext`func$, $CellContext`n$$]}, Frame -> All, 
              ItemSize -> Full]], {600, 300}, Scrollbars -> {True, False}]], 
        "Specifications" :> {{{$CellContext`n$$, 1, "Algorithms:"}, {
           1 -> "196-Algorithm Palindrome checker", 2 -> "196-Algorithm", 3 -> 
            "Reorder-Algorithm", 4 -> "RATS sequence"}, ControlType -> 
           SetterBar}, 
          Delimiter, {{$CellContext`i$$, 89, "initial value in base 10"}, 10, 
           100000, 1, Appearance -> 
           "Labeled"}, {{$CellContext`m$$, 78, "max number of iterations"}, 1,
            500, 1, Appearance -> 
           "Labeled"}, {{$CellContext`r$$, 1, "number of digits reordered"}, 
           1, 
           Dynamic[
            Length[
             IntegerDigits[$CellContext`i$$, $CellContext`b$$]]], 1, 
           Appearance -> 
           "Labeled"}, {{$CellContext`b$$, 10, "base to compute algorithm"}, 
           2, 10, 1, ControlType -> 
           PopupMenu}, {{$CellContext`v$$, 2, "base to represent iterations"},
            2, 10, 1, ControlType -> PopupMenu}}, 
        "Options" :> {FrameMargins -> None}, 
        "DefaultOptions" :> {ControllerLinking -> True}]], StandardForm],
     ImageSizeCache->{635., {260., 267.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`func = {{
          Graphics[
           
           Raster[{{0, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 0, 0, 2, 2, 2, 1, 1, 2, 
            0}, {2, 0, 0, 0, 2, 2, 1, 1, 2, 0, 0, 0, 1, 0, 1, 2, 1, 1, 2, 
            1}, {2, 1, 1, 0, 2, 0, 0, 2, 1, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 
            0}, {2, 2, 1, 2, 1, 2, 1, 1, 0, 2, 2, 1, 1, 2, 2, 1, 2, 2, 0, 
            1}, {2, 2, 2, 1, 0, 2, 2, 0, 1, 1, 2, 2, 2, 2, 1, 2, 0, 1, 0, 
            0}, {2, 2, 2, 2, 0, 0, 0, 2, 0, 0, 0, 2, 1, 2, 0, 0, 2, 0, 1, 
            1}, {2, 2, 2, 2, 2, 0, 0, 1, 0, 1, 1, 2, 0, 1, 2, 1, 1, 0, 2, 
            0}, {2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 2, 0, 1, 1, 2, 1, 2, 
            1}, {2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 2, 2, 1, 1, 0, 2, 0, 2, 1, 
            0}, {2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 0, 1, 0, 1, 1, 2, 2, 2, 0, 
            1}, {2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 1, 1, 2, 2, 1, 1, 0, 
            0}, {2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 0, 0, 2, 1, 2, 1, 
            1}, {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 1, 2, 1, 2, 0, 1, 2, 
            0}}, {{0, 0}, {20, 13}}, {0, 2}], Frame -> Automatic, 
           FrameLabel -> {None, None}, 
           FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
             Automatic}], 
          Pane[
           
           Column[{15617, 87268, 173546, 818917, 1538735, 6917086, 13724282, 
            41967013, 73043927, 145977964, 615757505, 1121515021, 
            2326666232}], {270, 255}, Scrollbars -> {False, True}], 
          Pane[
           
           Column[{15617, 87268, 173546, 818917, 1538735, 6917086, 13724282, 
            41967013, 73043927, 145977964, 615757505, 1121515021, 
            2326666232}], {270, 255}, Scrollbars -> {False, True}], 12}, {
          Graphics[
           Raster[CompressedData["
1:eJylmF2S20AIhIGb5DCpvOcIe4G9/1tG9NfIXlu2rEzZKuuP6QG6Yfzr6/vv
V0XE7/X9s75ZUet8HSMztt+5Dlm5jb683d4eXKfZx/XUOqzf/VBtl7cr2RfX
1dpenDe3H/3p8+wbqRnXJ3uunnSdbBZLzzayxrDO1mjLG4qGUCnb/VIGr6VO
ZbkErb8Fzp7Ar8hQWy6mAkD1ZbD14ns1fVL4KIW7TzO1rM14T9YP7+iYo9eg
95JF2GUhf7KsvFmunNmLK03Ys2cweShg8mQUL/elSHDqXntG3uwbcqa829HH
fK+4Q4prg8xIw+iH207DIxD9U2vrWdoHQXbgyTLamBzQ9ApAKny6hxe0WoWe
qPT0fch0pEo/QuHNJJFuc2nmzORt8juLB2q3I/gp1zcyL8m5k6SY0qFhCjpo
quz9kHsjSHURwdkDNyKBBLgwmuIKPvCEPVEqXFppzDshtIlRD/yHJ0QUAdJT
oZCRVhXDeGXzLZ6ObO0SgS4oedopSgNxM/Fl1A0aWCHv6PnJwc56xIZsIHjy
/i0aRUiixO2ygg3ahJ0WAWhU93aEWeZw6egPtCFCipvSPO7RVLIasod8G6L6
J/EOYlv5A02ZCFqMOU1gxI2yvlqpfkQKPO0KK7PIjUqjdqSkuJJkwsMIT43L
JVt2hCRjaE4+PaARa0QAVZbadRZ9NicqJq6PZgrKhipSmtfIuSkeYs0w7yme
gsQVZddqdTg+pAgVZNEzM3vJc8kQ+5GOpIA6IXb1e8CD18IsCyt4uEbJf8T6
AA3JRYawjrDfHMuCWvksUsZjWYaAtjN1KKWRMQXiCI+F2lU1ZykSnGbrrZI9
9zPFwqU2pMOiq2pGprXnxRB6DvQ9MRGyFNUzTt3jycTPzkInikuJMB1HynjQ
Hyf8nsZ9hsOPIzV4CoIntS/Gw+HGpF5FynjKUa3JXYjuEMTLSIHH3WGZYOhp
ul7e16kjODX1FUKHG9DpRN5ECjzujnBQhmk6Wv0eDU2l0xYJmoqGRp8wQz7T
rFo1XaYlGqfMqGWf/gmnh/uPM5Ha8fTcyI/1HIKfQ1PIMR7Cx7Bevj473MhO
3akwJc5FCjwun+qfKAl47TyaKudbsUWZUng2UoNnX4+bFWXBJ2hcwKkZYQU7
xal7POxAvDcx/z9D40rl7Y3UNd6q3+MIv6ZGiy3ap2iUt2anGsvXdeoQT3on
XEOpz9G4KEHR+ohTd3B2azR0H0cKIMNNS+kVM3ZwhLdgl9B4i0IfXSfq1IGd
mI3qce93YsxOgKBfNOMeYLqdi4PGp/xXwuVB2CnJl4f/F6rrkRo82jldjpTx
FP9D/I8Zb9HX5x/9SBz+
            "], {{0, 0}, {71, 69}}, {0, 2}], Frame -> Automatic, 
           FrameLabel -> {None, None}, 
           FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
             Automatic}], 
          Pane[
           
           Column[{15617, 87268, 173546, 818917, 1538735, 6917086, 13724282, 
             41967013, 73043927, 145977964, 615757505, 1121515021, 2326666232,
              4653332464, 9295666028, 17502331957, 93415652528, 175941303967, 
             945244453538, 1780598896087, 9587587846958, 18184075704817, 
             90024832752998, 179950556595007, 880546211654978, 
             1760002324300066, 8360036556300737, 15730073112601375, 
             73040694249605126, 135191388499209163, 497094383382400694, 
             993098666765891488, 1877297234432781887, 9759169578760709668, 
             18428240257520329247, 92720542832724611728, 
             175432185556549114457, 929844131212130349028, 
             1750787162424261797957, 9348758786666879668528, 
             17607428573333758246967, 94571714306671340717638, 
             178243418624331682435187, 959777704757758496778058, 
             1810655399615515904556017, 8917209494770685840116198, 
             17833319980631460789143396, 87167518687045069780477267, 
             163444927483099148462053445, 707795192325089533191497806, 
             1316589383661070056483095513, 4472493230161771720322951644, 
             8934085460433543330646894388, 17769071920766996671292698786, 
             86558701138436963374209795557, 162118491385773926857320581125, 
             683303515144403304440515392386, 1366597030188806608882030695772, 
             4142557333076872697692338652403, 7185125666044835484395676204817,
              14369152431979680868802341420634, 
             57971566752866489566715766616975, 
             115933233504633088033541533134950, 
             175364568649963968369946865474461, 
             339839137299927837739893730938032, 
             570678174698865576469886462876965, 
             1140356439387830252038782934753040, 
             1543930832266132772426622281283451, 
             3087752654532375544743244661676902}], {270, 255}, 
           Scrollbars -> {False, True}], 
          Pane[
           
           Column[{15617, 87268, 173546, 818917, 1538735, 6917086, 13724282, 
             41967013, 73043927, 145977964, 615757505, 1121515021, 2326666232,
              4653332464, 9295666028, 17502331957, 93415652528, 175941303967, 
             945244453538, 1780598896087, 9587587846958, 18184075704817, 
             90024832752998, 179950556595007, 880546211654978, 
             1760002324300066, 8360036556300737, 15730073112601375, 
             73040694249605126, 135191388499209163, 497094383382400694, 
             993098666765891488, 1877297234432781887, 9759169578760709668, 
             18428240257520329247, 92720542832724611728, 
             175432185556549114457, 929844131212130349028, 
             1750787162424261797957, 9348758786666879668528, 
             17607428573333758246967, 94571714306671340717638, 
             178243418624331682435187, 959777704757758496778058, 
             1810655399615515904556017, 8917209494770685840116198, 
             17833319980631460789143396, 87167518687045069780477267, 
             163444927483099148462053445, 707795192325089533191497806, 
             1316589383661070056483095513, 4472493230161771720322951644, 
             8934085460433543330646894388, 17769071920766996671292698786, 
             86558701138436963374209795557, 162118491385773926857320581125, 
             683303515144403304440515392386, 1366597030188806608882030695772, 
             4142557333076872697692338652403, 7185125666044835484395676204817,
              14369152431979680868802341420634, 
             57971566752866489566715766616975, 
             115933233504633088033541533134950, 
             175364568649963968369946865474461, 
             339839137299927837739893730938032, 
             570678174698865576469886462876965, 
             1140356439387830252038782934753040, 
             1543930832266132772426622281283451, 
             3087752654532375544743244661676902}], {270, 255}, 
           Scrollbars -> {False, True}], 68}, {
          Graphics[
           Raster[CompressedData["
1:eJydl9GZ20AIhBk6SS9JAynhGrj+36JlfpDOkW3Je5/tk7wGdhgG9Ovr++9X
RsSf7fV7e0naXqnc1vYRvrX9s23K7btYX21b1t92pbq9XbB/mWJrZv1Otda3
db+Wr7dXGdD6DP9+mazfrKvtXqw/ldNyVDGozJflUPlL1S8j2Fl7op2qTrLc
5fJmAw6mfC0Lddv+sk60BylHWvcTjzZmOMLBEEQDNxsVO5SNJkZtDZjKupLT
GYsFj28WbgVOnTOF7aiwvbuwMp4gF3YT9m4bBQlHCB/Qxy/LvpIBqJ2OyIDa
XHZ2w57VABQC9e4DH5LGqUmrjQTwFbDFDjKXncqJsw5SEcwHywBAvjqrQyYG
Z9ikTYAzyoqxgYkc12ZDDO/MC5Jgb073HoepJdk9GVADEka0ckdq06h0XhpY
GDBQOb/h2FyC5UHZ76nJS4JEV4aMqcll/ihdKH53RTuqYxyunGE5fnNXAZBE
C9KEVSp/GoHbCbcQDJdSDCmdfRtL/YxjMuxCyaY+pe2TiuIE4IiHOBATiCnD
OSoRcA9+qMs1HwMxDQsupzcNMmDnVFS2nD3GgZFguwi72D37FaOPzepHWEeo
snns4OpgTneLImj/vyYrFl3Eu6lqGYV6p3mx2xbo0VC5Zip6jTAD6VkcCYeL
G12IlSqRe0owD5JwYiRMI+8TyjnoWhcFjc7jSCRDXSHZsqxWMOhCp3hmxH2N
5hGmmRUSDmUg4M9sIHTWPZM8bW4qflfnp8uUpufZ0h4fciulnuTFgeA9uluQ
3xZRE+R5XhpXxCyyOy/yqlYXdbt6dRo4ru6aTAtBi6f5vYykGyG5pNFN+3KN
v7SR9Gjra/ewdL8+Fs+bSMwONyeTbTK1k/+dkcMJWgEpeGrzXRyZ3RSZYuhX
LhcX8Ns41qK5AaTatXvdi3r5aaOnKnObSooeKa/YyB5WEJNdTnQlLyx6g3qe
6dnD+nDRhhgGwCD2We5SXhz+3isiuytb1a7lpWUtmeMVB2qc9Zenp6FCRgEZ
S67mxVYYI5kaDM4I3NVIevSEqKluIbcCIQJPZmj91bwQCGBaFZmSzvr+KyNT
aPRP9dPKjYV+RvNiBu47gcQktdG4l5fkiYlxLLuGb+UFIzM3B2J7Lw4PBOSH
2r+Zl4rET6cMr6GrOvZgpMcqT7l38+LVD7/I4828YEM0/x6AP7HBMBNHkb+7
epQSj2if2OjHBdTjozjg2T5mfmoEIfwwL2upJ8vr/eUskr1lfmyjn0I/zQuR
CGX7B6itHHI=
            "], {{0, 0}, {68, 69}}, {0, 2}], Frame -> Automatic, 
           FrameLabel -> {None, None}, 
           FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
             Automatic}], 
          Pane[
           
           Column[{15617, 87178, 175895, 693484, 1162832, 3279115, 8607026, 
             15467728, 97014500, 106715950, 117387545, 629126299, 1592038928, 
             9751242820, 10726367102, 31799003812, 54978904193, 90476794612, 
             119524474073, 431476921480, 474624613628, 1322087074990, 
             1454295782489, 10599725360737, 81659697896810, 89825667686491, 
             108808234455140, 119689057900654, 531657963690719, 
             1484823760059790, 1633306136065769, 10796636749672345, 
             61876300424639579, 158063930467103536, 773870323513813889, 
             1751257355865195277, 8926383091451714804, 13819021400596886284, 
             55200923540656574912, 80721015894722232403, 
             118793117484194455643, 430672429232613901207, 
             1173739672155875291327, 8291113639371462820459, 
             18120225003308609102504, 59932247503639470012754, 
             105925472254003417014029, 1016518019479403758715431, 
             2118169821427344134586974, 6329986803570078548045671, 
             7962985483927086402850238, 16759284032319795043135261, 
             28435212435551774547448787, 101278733679106952002193665, 
             611406607047017647202413031, 772547267751719411922654334, 
             1249801994526891353114919767, 8374782193979580488426411743, 
             12212260413377538537269052917, 83433486454715292390995958208, 
             171776835100186821630095554028, 988954518610205503793105109430, 
             1087849970471226054172415620373, 4196634967518348659589657182410,
              4616298464270183525548622900651, 
             6077928310697201878103485190716, 
             12685721141766922065913833709787, 
             83954293255943614272505217080765, 
             142349722581537975699755738788841}], {270, 255}, 
           Scrollbars -> {False, True}], 
          Pane[
           
           Column[{15617, 87178, 175895, 693484, 1162832, 3279115, 8607026, 
             15467728, 97014500, 106715950, 117387545, 629126299, 1592038928, 
             9751242820, 10726367102, 31799003812, 54978904193, 90476794612, 
             119524474073, 431476921480, 474624613628, 1322087074990, 
             1454295782489, 10599725360737, 81659697896810, 89825667686491, 
             108808234455140, 119689057900654, 531657963690719, 
             1484823760059790, 1633306136065769, 10796636749672345, 
             61876300424639579, 158063930467103536, 773870323513813889, 
             1751257355865195277, 8926383091451714804, 13819021400596886284, 
             55200923540656574912, 80721015894722232403, 
             118793117484194455643, 430672429232613901207, 
             1173739672155875291327, 8291113639371462820459, 
             18120225003308609102504, 59932247503639470012754, 
             105925472254003417014029, 1016518019479403758715431, 
             2118169821427344134586974, 6329986803570078548045671, 
             7962985483927086402850238, 16759284032319795043135261, 
             28435212435551774547448787, 101278733679106952002193665, 
             611406607047017647202413031, 772547267751719411922654334, 
             1249801994526891353114919767, 8374782193979580488426411743, 
             12212260413377538537269052917, 83433486454715292390995958208, 
             171776835100186821630095554028, 988954518610205503793105109430, 
             1087849970471226054172415620373, 4196634967518348659589657182410,
              4616298464270183525548622900651, 
             6077928310697201878103485190716, 
             12685721141766922065913833709787, 
             83954293255943614272505217080765, 
             142349722581537975699755738788841}], {270, 255}, 
           Scrollbars -> {False, True}], 68}, {
          Graphics[
           Raster[CompressedData["
1:eJyNVut5xCAMs7xJF+gWXaAj3ALd/19BkrnkkgD0S9sQ4YeQDV+vv99XRsRP
e77bg/bDX4hE9icTbUQG2kv7p73on7aMkDaTHdUevYATRvYp2UWfy26n4/p7
f2t/+2cZAJ33ePq3pCO5SVqXP67iQk8YwDCZAOchz+kFckpwZAXMYHtmPUD5
Dc4x2KATOU+mregZO01znd5sR7Z7tN0RaQyFm7aFkayIcjChZNMZYjApqyBt
Y4S4ZQR8E4v0o5nEGw0nOzJMBcdl5BUH2/5KVhkV7UXtpLjNo3UnXF8ZlsRg
S6dBYqO484Y4cXk7DW5h2PoIKyvZDzQJkTTsWbKA8vxEpySRYYvv8FkCl4Ga
htRNJ1wVV9siUiKripKM8pOTsg4JB9otlUdV2BUeQ2QpJjNcIbdwiTtdDkX9
vW1tYYTLn0G5gp+sqzlI5JQVbjmpVF1KLkaF8wwfzQFVTM+2WWMCiZ7IJ06G
dSncRfLIScFVDqPTTdE07Q6Dz9q5hdcu5ZyTglf3e9TJOXjkoc+s4erOwIIT
x8I2ONWJe52rTKU85QTiGagGseDE+40xZmB3EUeVN/3khLakZDZWnISKSG0U
K50cRJgR9/3kZB0ui1RbnA9VjBSyoRMx7g6xo0EZjSUnisVEB5a1Q3yoB645
YSxw29qonRzH21onalJqbXNOxtXA7W3BSYhina86rnbgbqBzTnxGFeUrncDX
Bx2ga52Ebx++by3Qh852exZf4IfOtqHB8MkTGz32IPB17WTtpu+tO/Coe+IG
mkiMfNfw1PZv2fbVb6923LCud7YHMHxr24y7dPIPw3kVKQ==
            "], {{0, 0}, {46, 69}}, {0, 2}], Frame -> Automatic, 
           FrameLabel -> {None, None}, 
           FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
             Automatic}], 
          Pane[
           
           Column[{15617, 26788, 11555, 6667, 13334, 55666, 112223, 334444, 
             777788, 1555666, 1122278, 4448899, 13334447, 77777788, 155555666,
              111122278, 333348899, 1122223339, 144455555, 67999, 156779, 
             113344, 555566, 1111222, 2333333, 5566666, 11222333, 44444455, 
             88889999, 178888888, 156777779, 113344555, 666677888, 1444555555,
              167999, 116677, 238889, 1122277, 4448888, 12333337, 55666688, 
             133333444, 556667777, 1233334444, 5566667777, 12333334444, 
             55666667777, 123333334444, 556666667777, 1233333334444, 
             5566666667777, 12333333334444, 55666666667777, 123333333334444, 
             556666666667777, 1233333333334444, 5566666666667777, 
             12333333333334444, 55666666666667777, 123333333333334444, 
             556666666666667777, 1233333333333334444, 5566666666666667777, 
             12333333333333334444, 55666666666666667777, 
             123333333333333334444, 556666666666666667777, 
             1233333333333333334444, 5566666666666666667777}], {270, 255}, 
           Scrollbars -> {False, True}], 
          Pane[
           
           Column[{15617, 26788, 11555, 6667, 13334, 55666, 112223, 334444, 
             777788, 1555666, 1122278, 4448899, 13334447, 77777788, 155555666,
              111122278, 333348899, 1122223339, 144455555, 67999, 156779, 
             113344, 555566, 1111222, 2333333, 5566666, 11222333, 44444455, 
             88889999, 178888888, 156777779, 113344555, 666677888, 1444555555,
              167999, 116677, 238889, 1122277, 4448888, 12333337, 55666688, 
             133333444, 556667777, 1233334444, 5566667777, 12333334444, 
             55666667777, 123333334444, 556666667777, 1233333334444, 
             5566666667777, 12333333334444, 55666666667777, 123333333334444, 
             556666666667777, 1233333333334444, 5566666666667777, 
             12333333333334444, 55666666666667777, 123333333333334444, 
             556666666666667777, 1233333333333334444, 5566666666666667777, 
             12333333333333334444, 55666666666666667777, 
             123333333333333334444, 556666666666666667777, 
             1233333333333333334444, 5566666666666666667777}], {270, 255}, 
           Scrollbars -> {False, True}], 68, 
          "No repeating patten detected"}}, $CellContext`finalPalindrome[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[Integer]]] := {
         $CellContext`palindrome[$CellContext`i, $CellContext`m, \
$CellContext`b, $CellContext`v], 
         $CellContext`listPalindrome[$CellContext`i, $CellContext`m, \
$CellContext`b], 
         $CellContext`listPalindrome2[$CellContext`i, $CellContext`m, \
$CellContext`b], 
         $CellContext`countPalindrome[$CellContext`i, $CellContext`m, \
$CellContext`b]}, $CellContext`palindrome[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[Integer]]] := ArrayPlot[
         PadLeft[
          IntegerDigits[
           NestWhileList[
           IntegerReverse[#, $CellContext`b] + #& , $CellContext`i, 
            IntegerDigits[
              IntegerReverse[#, $CellContext`b], $CellContext`b] =!= 
            IntegerDigits[#, $CellContext`b]& , 
            1, $CellContext`m], $CellContext`v]]], $CellContext`listPalindrome[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Pane[
         Column[
          NestWhileList[
          IntegerReverse[#, $CellContext`b] + #& , $CellContext`i, 
           IntegerDigits[
             IntegerReverse[#, $CellContext`b], $CellContext`b] =!= 
           IntegerDigits[#, $CellContext`b]& , 1, $CellContext`m]], {270, 
         255}, Scrollbars -> {False, True}], $CellContext`listPalindrome2[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Pane[
         Column[
          Map[FromDigits, 
           IntegerDigits[
            NestWhileList[
            IntegerReverse[#, $CellContext`b] + #& , $CellContext`i, 
             IntegerDigits[
               IntegerReverse[#, $CellContext`b], $CellContext`b] =!= 
             IntegerDigits[#, $CellContext`b]& , 
             1, $CellContext`m], $CellContext`b]]], {270, 255}, 
         Scrollbars -> {False, True}], $CellContext`countPalindrome[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Length[
          NestWhileList[
          IntegerReverse[#, $CellContext`b] + #& , $CellContext`i, 
           IntegerDigits[
             IntegerReverse[#, $CellContext`b], $CellContext`b] =!= 
           IntegerDigits[#, $CellContext`b]& , 1, $CellContext`m]] - 
        1, $CellContext`finalRepeat[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[Integer]]] := {
         $CellContext`repeat[$CellContext`i, $CellContext`m, $CellContext`b, \
$CellContext`v], 
         $CellContext`listRepeat[$CellContext`i, $CellContext`m, \
$CellContext`b], 
         $CellContext`listRepeat2[$CellContext`i, $CellContext`m, \
$CellContext`b], 
         $CellContext`countRepeat[$CellContext`i, $CellContext`m, \
$CellContext`b]}, $CellContext`repeat[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`r, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[Integer]]] := ArrayPlot[
         PadLeft[
          IntegerDigits[
           NestList[
           IntegerReverse[#, $CellContext`b] + #& , $CellContext`i, \
$CellContext`m], $CellContext`v]]], $CellContext`repeat[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[Integer]]] := ArrayPlot[
         PadLeft[
          IntegerDigits[
           NestList[
           IntegerReverse[#, $CellContext`b] + #& , $CellContext`i, \
$CellContext`m], $CellContext`v]]], $CellContext`listRepeat[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Pane[
         Column[
          NestList[
          IntegerReverse[#, $CellContext`b] + #& , $CellContext`i, \
$CellContext`m]], {270, 255}, 
         Scrollbars -> {False, True}], $CellContext`listRepeat2[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Pane[
         Column[
          Map[FromDigits, 
           IntegerDigits[
            NestList[
            IntegerReverse[#, $CellContext`b] + #& , $CellContext`i, \
$CellContext`m], $CellContext`b]]], {270, 255}, 
         Scrollbars -> {False, True}], $CellContext`countRepeat[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Length[
          NestList[
          IntegerReverse[#, $CellContext`b] + #& , $CellContext`i, \
$CellContext`m]] - 1, $CellContext`finalReorder[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`r, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[Integer]]] := {
         $CellContext`reorder[$CellContext`i, $CellContext`m, $CellContext`r, \
$CellContext`b, $CellContext`v], 
         $CellContext`listReorder[$CellContext`i, $CellContext`m, \
$CellContext`r, $CellContext`b], 
         $CellContext`listReorder2[$CellContext`i, $CellContext`m, \
$CellContext`r, $CellContext`b], 
         $CellContext`countReorder[$CellContext`i, $CellContext`m, \
$CellContext`r, $CellContext`b]}, $CellContext`reorder[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`r, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[Integer]]] := ArrayPlot[
         PadLeft[
          IntegerDigits[
           NestList[FromDigits[
              Flatten[
               Delete[
                Prepend[
                 IntegerDigits[#, $CellContext`b], 
                 Take[
                  
                  IntegerDigits[#, $CellContext`b], -$CellContext`r]], \
-$CellContext`r]], $CellContext`b] + #& , $CellContext`i, $CellContext`m], \
$CellContext`v]]], $CellContext`listReorder[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`r, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Pane[
         Column[
          NestList[FromDigits[
             Flatten[
              Delete[
               Prepend[
                IntegerDigits[#, $CellContext`b], 
                Take[
                 
                 IntegerDigits[#, $CellContext`b], -$CellContext`r]], \
-$CellContext`r]], $CellContext`b] + #& , $CellContext`i, $CellContext`m]], {
         270, 255}, Scrollbars -> {False, True}], $CellContext`listReorder2[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`r, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Pane[
         Column[
          Map[FromDigits, 
           IntegerDigits[
            NestList[FromDigits[
               Flatten[
                Delete[
                 Prepend[
                  IntegerDigits[#, $CellContext`b], 
                  Take[
                   
                   IntegerDigits[#, $CellContext`b], -$CellContext`r]], \
-$CellContext`r]], $CellContext`b] + #& , $CellContext`i, $CellContext`m], \
$CellContext`b]]], {270, 255}, 
         Scrollbars -> {False, True}], $CellContext`countReorder[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`r, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Length[
          NestList[FromDigits[
             Flatten[
              Delete[
               Prepend[
                IntegerDigits[#, $CellContext`b], 
                Take[
                 
                 IntegerDigits[#, $CellContext`b], -$CellContext`r]], \
-$CellContext`r]], $CellContext`b] + #& , $CellContext`i, $CellContext`m]] - 
        1, $CellContext`finalRat[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[Integer]]] := {
         $CellContext`rat[$CellContext`i, $CellContext`m, $CellContext`b, \
$CellContext`v], 
         $CellContext`listRat[$CellContext`i, $CellContext`m, $CellContext`b], 
         $CellContext`listRat2[$CellContext`i, $CellContext`m, \
$CellContext`b], 
         $CellContext`countRat[$CellContext`i, $CellContext`m, \
$CellContext`b], 
         $CellContext`ftrRat[$CellContext`i, $CellContext`m, \
$CellContext`b]}, $CellContext`rat[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[Integer]]] := ArrayPlot[
         PadLeft[
          IntegerDigits[
           NestList[FromDigits[
             Sort[
              IntegerDigits[
              IntegerReverse[#, $CellContext`b] + #]]]& , $CellContext`i, \
$CellContext`m], $CellContext`v]]], $CellContext`listRat[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Pane[
         Column[
          NestList[FromDigits[
            Sort[
             IntegerDigits[
             IntegerReverse[#, $CellContext`b] + #]]]& , $CellContext`i, \
$CellContext`m]], {270, 255}, 
         Scrollbars -> {False, True}], $CellContext`listRat2[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Pane[
         Column[
          Map[FromDigits, 
           IntegerDigits[
            NestList[FromDigits[
              Sort[
               IntegerDigits[
               IntegerReverse[#, $CellContext`b] + #]]]& , $CellContext`i, \
$CellContext`m], $CellContext`b]]], {270, 255}, 
         Scrollbars -> {False, True}], $CellContext`countRat[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Length[
          NestList[FromDigits[
            Sort[
             IntegerDigits[
             IntegerReverse[#, $CellContext`b] + #]]]& , $CellContext`i, \
$CellContext`m]] - 1, $CellContext`ftrRat[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := If[Part[
           FindTransientRepeat[
            NestList[FromDigits[
              Sort[
               IntegerDigits[
               IntegerReverse[#, $CellContext`b] + #]]]& , $CellContext`i, \
$CellContext`m], 2], 2] =!= {}, 
         NestGraph[FromDigits[
           Sort[
            IntegerDigits[
            IntegerReverse[#, $CellContext`b] + #]]]& , $CellContext`i, \
$CellContext`m, VertexLabels -> "Name", ImageSize -> Full], 
         "No repeating patten detected"]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->119469069],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`b$$ = 4, $CellContext`i$$ = 
    26198, $CellContext`m$$ = 42, $CellContext`n$$ = 3, $CellContext`r$$ = 
    1, $CellContext`v$$ = 2, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`n$$], 3, "Algorithms:"}, {
      1 -> "196-Algorithm Palindrome checker", 2 -> "196-Algorithm", 3 -> 
       "Reorder-Algorithm", 4 -> "RATS sequence"}}, {{
       Hold[$CellContext`i$$], 26198, "initial value in base 10"}, 10, 100000,
       1}, {{
       Hold[$CellContext`m$$], 42, "max number of iterations"}, 1, 500, 1}, {{
       Hold[$CellContext`r$$], 1, "number of digits reordered"}, 1, 
      Dynamic[
       Length[
        IntegerDigits[$CellContext`i$$, $CellContext`b$$]]], 1}, {{
       Hold[$CellContext`b$$], 4, "base to compute algorithm"}, 2, 10, 1}, {{
       Hold[$CellContext`v$$], 2, "base to represent iterations"}, 2, 10, 1}},
     Typeset`size$$ = {600., {146., 154.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`n$2454$$ = False, $CellContext`i$2455$$ = 
    0, $CellContext`m$2456$$ = 0, $CellContext`r$2457$$ = 
    0, $CellContext`b$2458$$ = 0, $CellContext`v$2459$$ = 0}, 
    DynamicBox[ToBoxes[
      RawBoxes[
       Manipulate`ManipulateBoxes[
       1, StandardForm, 
        "Variables" :> {$CellContext`b$$ = 4, $CellContext`i$$ = 
          26198, $CellContext`m$$ = 42, $CellContext`n$$ = 
          3, $CellContext`r$$ = 1, $CellContext`v$$ = 2}, 
        "ControllerVariables" :> {
          Hold[$CellContext`n$$, $CellContext`n$2454$$, False], 
          Hold[$CellContext`i$$, $CellContext`i$2455$$, 0], 
          Hold[$CellContext`m$$, $CellContext`m$2456$$, 0], 
          Hold[$CellContext`r$$, $CellContext`r$2457$$, 0], 
          Hold[$CellContext`b$$, $CellContext`b$2458$$, 0], 
          Hold[$CellContext`v$$, $CellContext`v$2459$$, 0]}, 
        "OtherVariables" :> {
         Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
          Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
          Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
          Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
        Module[{$CellContext`func$}, $CellContext`func$ = {
             $CellContext`finalPalindrome[$CellContext`i$$, $CellContext`m$$, \
$CellContext`b$$, $CellContext`v$$], 
             $CellContext`finalRepeat[$CellContext`i$$, $CellContext`m$$, \
$CellContext`b$$, $CellContext`v$$], 
             $CellContext`finalReorder[$CellContext`i$$, $CellContext`m$$, \
$CellContext`r$$, $CellContext`b$$, $CellContext`v$$], 
             $CellContext`finalRat[$CellContext`i$$, $CellContext`m$$, \
$CellContext`b$$, $CellContext`v$$]}; Pane[
            If[$CellContext`n$$ == 4, 
             Grid[{{
                StringJoin["visual representation in base ", 
                 ToString[$CellContext`v$$]], 
                "numbers after each iteration in base 10", 
                StringJoin["numbers after each iteration in base ", 
                 ToString[$CellContext`b$$]], "number of iterations", 
                "NestGraph (if there is a repeating pattern)"}, 
               Part[$CellContext`func$, $CellContext`n$$]}, Frame -> All, 
              ItemSize -> Full], 
             Grid[{{
                StringJoin["visual representation in base ", 
                 ToString[$CellContext`v$$]], 
                "numbers after each iteration in base 10", 
                StringJoin["numbers after each iteration in base ", 
                 ToString[$CellContext`b$$]], "number of iterations"}, 
               Part[$CellContext`func$, $CellContext`n$$]}, Frame -> All, 
              ItemSize -> Full]], {600, 300}, Scrollbars -> {True, False}]], 
        "Specifications" :> {{{$CellContext`n$$, 3, "Algorithms:"}, {
           1 -> "196-Algorithm Palindrome checker", 2 -> "196-Algorithm", 3 -> 
            "Reorder-Algorithm", 4 -> "RATS sequence"}, ControlType -> 
           SetterBar}, 
          Delimiter, {{$CellContext`i$$, 26198, "initial value in base 10"}, 
           10, 100000, 1, Appearance -> 
           "Labeled"}, {{$CellContext`m$$, 42, "max number of iterations"}, 1,
            500, 1, Appearance -> 
           "Labeled"}, {{$CellContext`r$$, 1, "number of digits reordered"}, 
           1, 
           Dynamic[
            Length[
             IntegerDigits[$CellContext`i$$, $CellContext`b$$]]], 1, 
           Appearance -> 
           "Labeled"}, {{$CellContext`b$$, 4, "base to compute algorithm"}, 2,
            10, 1, ControlType -> 
           PopupMenu}, {{$CellContext`v$$, 2, "base to represent iterations"},
            2, 10, 1, ControlType -> PopupMenu}}, 
        "Options" :> {FrameMargins -> None}, 
        "DefaultOptions" :> {ControllerLinking -> True}]], StandardForm],
     ImageSizeCache->{635., {260., 267.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`func = {{
          Graphics[
           
           Raster[{{0, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 0, 0, 2, 2, 2, 1, 1, 2, 
            0}, {2, 0, 0, 0, 2, 2, 1, 1, 2, 0, 0, 0, 1, 0, 1, 2, 1, 1, 2, 
            1}, {2, 1, 1, 0, 2, 0, 0, 2, 1, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 
            0}, {2, 2, 1, 2, 1, 2, 1, 1, 0, 2, 2, 1, 1, 2, 2, 1, 2, 2, 0, 
            1}, {2, 2, 2, 1, 0, 2, 2, 0, 1, 1, 2, 2, 2, 2, 1, 2, 0, 1, 0, 
            0}, {2, 2, 2, 2, 0, 0, 0, 2, 0, 0, 0, 2, 1, 2, 0, 0, 2, 0, 1, 
            1}, {2, 2, 2, 2, 2, 0, 0, 1, 0, 1, 1, 2, 0, 1, 2, 1, 1, 0, 2, 
            0}, {2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 2, 0, 1, 1, 2, 1, 2, 
            1}, {2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 2, 2, 1, 1, 0, 2, 0, 2, 1, 
            0}, {2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 0, 1, 0, 1, 1, 2, 2, 2, 0, 
            1}, {2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 1, 1, 2, 2, 1, 1, 0, 
            0}, {2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 0, 0, 2, 1, 2, 1, 
            1}, {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 1, 2, 1, 2, 0, 1, 2, 
            0}}, {{0, 0}, {20, 13}}, {0, 2}], Frame -> Automatic, 
           FrameLabel -> {None, None}, 
           FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
             Automatic}], 
          Pane[
           
           Column[{15617, 87268, 173546, 818917, 1538735, 6917086, 13724282, 
            41967013, 73043927, 145977964, 615757505, 1121515021, 
            2326666232}], {270, 255}, Scrollbars -> {False, True}], 
          Pane[
           
           Column[{15617, 87268, 173546, 818917, 1538735, 6917086, 13724282, 
            41967013, 73043927, 145977964, 615757505, 1121515021, 
            2326666232}], {270, 255}, Scrollbars -> {False, True}], 12}, {
          Graphics[
           Raster[CompressedData["
1:eJylmF2S20AIhIGb5DCpvOcIe4G9/1tG9NfIXlu2rEzZKuuP6QG6Yfzr6/vv
V0XE7/X9s75ZUet8HSMztt+5Dlm5jb683d4eXKfZx/XUOqzf/VBtl7cr2RfX
1dpenDe3H/3p8+wbqRnXJ3uunnSdbBZLzzayxrDO1mjLG4qGUCnb/VIGr6VO
ZbkErb8Fzp7Ar8hQWy6mAkD1ZbD14ns1fVL4KIW7TzO1rM14T9YP7+iYo9eg
95JF2GUhf7KsvFmunNmLK03Ys2cweShg8mQUL/elSHDqXntG3uwbcqa829HH
fK+4Q4prg8xIw+iH207DIxD9U2vrWdoHQXbgyTLamBzQ9ApAKny6hxe0WoWe
qPT0fch0pEo/QuHNJJFuc2nmzORt8juLB2q3I/gp1zcyL8m5k6SY0qFhCjpo
quz9kHsjSHURwdkDNyKBBLgwmuIKPvCEPVEqXFppzDshtIlRD/yHJ0QUAdJT
oZCRVhXDeGXzLZ6ObO0SgS4oedopSgNxM/Fl1A0aWCHv6PnJwc56xIZsIHjy
/i0aRUiixO2ygg3ahJ0WAWhU93aEWeZw6egPtCFCipvSPO7RVLIasod8G6L6
J/EOYlv5A02ZCFqMOU1gxI2yvlqpfkQKPO0KK7PIjUqjdqSkuJJkwsMIT43L
JVt2hCRjaE4+PaARa0QAVZbadRZ9NicqJq6PZgrKhipSmtfIuSkeYs0w7yme
gsQVZddqdTg+pAgVZNEzM3vJc8kQ+5GOpIA6IXb1e8CD18IsCyt4uEbJf8T6
AA3JRYawjrDfHMuCWvksUsZjWYaAtjN1KKWRMQXiCI+F2lU1ZykSnGbrrZI9
9zPFwqU2pMOiq2pGprXnxRB6DvQ9MRGyFNUzTt3jycTPzkInikuJMB1HynjQ
Hyf8nsZ9hsOPIzV4CoIntS/Gw+HGpF5FynjKUa3JXYjuEMTLSIHH3WGZYOhp
ul7e16kjODX1FUKHG9DpRN5ECjzujnBQhmk6Wv0eDU2l0xYJmoqGRp8wQz7T
rFo1XaYlGqfMqGWf/gmnh/uPM5Ha8fTcyI/1HIKfQ1PIMR7Cx7Bevj473MhO
3akwJc5FCjwun+qfKAl47TyaKudbsUWZUng2UoNnX4+bFWXBJ2hcwKkZYQU7
xal7POxAvDcx/z9D40rl7Y3UNd6q3+MIv6ZGiy3ap2iUt2anGsvXdeoQT3on
XEOpz9G4KEHR+ohTd3B2azR0H0cKIMNNS+kVM3ZwhLdgl9B4i0IfXSfq1IGd
mI3qce93YsxOgKBfNOMeYLqdi4PGp/xXwuVB2CnJl4f/F6rrkRo82jldjpTx
FP9D/I8Zb9HX5x/9SBz+
            "], {{0, 0}, {71, 69}}, {0, 2}], Frame -> Automatic, 
           FrameLabel -> {None, None}, 
           FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
             Automatic}], 
          Pane[
           
           Column[{15617, 87268, 173546, 818917, 1538735, 6917086, 13724282, 
             41967013, 73043927, 145977964, 615757505, 1121515021, 2326666232,
              4653332464, 9295666028, 17502331957, 93415652528, 175941303967, 
             945244453538, 1780598896087, 9587587846958, 18184075704817, 
             90024832752998, 179950556595007, 880546211654978, 
             1760002324300066, 8360036556300737, 15730073112601375, 
             73040694249605126, 135191388499209163, 497094383382400694, 
             993098666765891488, 1877297234432781887, 9759169578760709668, 
             18428240257520329247, 92720542832724611728, 
             175432185556549114457, 929844131212130349028, 
             1750787162424261797957, 9348758786666879668528, 
             17607428573333758246967, 94571714306671340717638, 
             178243418624331682435187, 959777704757758496778058, 
             1810655399615515904556017, 8917209494770685840116198, 
             17833319980631460789143396, 87167518687045069780477267, 
             163444927483099148462053445, 707795192325089533191497806, 
             1316589383661070056483095513, 4472493230161771720322951644, 
             8934085460433543330646894388, 17769071920766996671292698786, 
             86558701138436963374209795557, 162118491385773926857320581125, 
             683303515144403304440515392386, 1366597030188806608882030695772, 
             4142557333076872697692338652403, 7185125666044835484395676204817,
              14369152431979680868802341420634, 
             57971566752866489566715766616975, 
             115933233504633088033541533134950, 
             175364568649963968369946865474461, 
             339839137299927837739893730938032, 
             570678174698865576469886462876965, 
             1140356439387830252038782934753040, 
             1543930832266132772426622281283451, 
             3087752654532375544743244661676902}], {270, 255}, 
           Scrollbars -> {False, True}], 
          Pane[
           
           Column[{15617, 87268, 173546, 818917, 1538735, 6917086, 13724282, 
             41967013, 73043927, 145977964, 615757505, 1121515021, 2326666232,
              4653332464, 9295666028, 17502331957, 93415652528, 175941303967, 
             945244453538, 1780598896087, 9587587846958, 18184075704817, 
             90024832752998, 179950556595007, 880546211654978, 
             1760002324300066, 8360036556300737, 15730073112601375, 
             73040694249605126, 135191388499209163, 497094383382400694, 
             993098666765891488, 1877297234432781887, 9759169578760709668, 
             18428240257520329247, 92720542832724611728, 
             175432185556549114457, 929844131212130349028, 
             1750787162424261797957, 9348758786666879668528, 
             17607428573333758246967, 94571714306671340717638, 
             178243418624331682435187, 959777704757758496778058, 
             1810655399615515904556017, 8917209494770685840116198, 
             17833319980631460789143396, 87167518687045069780477267, 
             163444927483099148462053445, 707795192325089533191497806, 
             1316589383661070056483095513, 4472493230161771720322951644, 
             8934085460433543330646894388, 17769071920766996671292698786, 
             86558701138436963374209795557, 162118491385773926857320581125, 
             683303515144403304440515392386, 1366597030188806608882030695772, 
             4142557333076872697692338652403, 7185125666044835484395676204817,
              14369152431979680868802341420634, 
             57971566752866489566715766616975, 
             115933233504633088033541533134950, 
             175364568649963968369946865474461, 
             339839137299927837739893730938032, 
             570678174698865576469886462876965, 
             1140356439387830252038782934753040, 
             1543930832266132772426622281283451, 
             3087752654532375544743244661676902}], {270, 255}, 
           Scrollbars -> {False, True}], 68}, {
          Graphics[
           Raster[CompressedData["
1:eJydl9GZ20AIhBk6SS9JAynhGrj+36JlfpDOkW3Je5/tk7wGdhgG9Ovr++9X
RsSf7fV7e0naXqnc1vYRvrX9s23K7btYX21b1t92pbq9XbB/mWJrZv1Otda3
db+Wr7dXGdD6DP9+mazfrKvtXqw/ldNyVDGozJflUPlL1S8j2Fl7op2qTrLc
5fJmAw6mfC0Lddv+sk60BylHWvcTjzZmOMLBEEQDNxsVO5SNJkZtDZjKupLT
GYsFj28WbgVOnTOF7aiwvbuwMp4gF3YT9m4bBQlHCB/Qxy/LvpIBqJ2OyIDa
XHZ2w57VABQC9e4DH5LGqUmrjQTwFbDFDjKXncqJsw5SEcwHywBAvjqrQyYG
Z9ikTYAzyoqxgYkc12ZDDO/MC5Jgb073HoepJdk9GVADEka0ckdq06h0XhpY
GDBQOb/h2FyC5UHZ76nJS4JEV4aMqcll/ihdKH53RTuqYxyunGE5fnNXAZBE
C9KEVSp/GoHbCbcQDJdSDCmdfRtL/YxjMuxCyaY+pe2TiuIE4IiHOBATiCnD
OSoRcA9+qMs1HwMxDQsupzcNMmDnVFS2nD3GgZFguwi72D37FaOPzepHWEeo
snns4OpgTneLImj/vyYrFl3Eu6lqGYV6p3mx2xbo0VC5Zip6jTAD6VkcCYeL
G12IlSqRe0owD5JwYiRMI+8TyjnoWhcFjc7jSCRDXSHZsqxWMOhCp3hmxH2N
5hGmmRUSDmUg4M9sIHTWPZM8bW4qflfnp8uUpufZ0h4fciulnuTFgeA9uluQ
3xZRE+R5XhpXxCyyOy/yqlYXdbt6dRo4ru6aTAtBi6f5vYykGyG5pNFN+3KN
v7SR9Gjra/ewdL8+Fs+bSMwONyeTbTK1k/+dkcMJWgEpeGrzXRyZ3RSZYuhX
LhcX8Ns41qK5AaTatXvdi3r5aaOnKnObSooeKa/YyB5WEJNdTnQlLyx6g3qe
6dnD+nDRhhgGwCD2We5SXhz+3isiuytb1a7lpWUtmeMVB2qc9Zenp6FCRgEZ
S67mxVYYI5kaDM4I3NVIevSEqKluIbcCIQJPZmj91bwQCGBaFZmSzvr+KyNT
aPRP9dPKjYV+RvNiBu47gcQktdG4l5fkiYlxLLuGb+UFIzM3B2J7Lw4PBOSH
2r+Zl4rET6cMr6GrOvZgpMcqT7l38+LVD7/I4828YEM0/x6AP7HBMBNHkb+7
epQSj2if2OjHBdTjozjg2T5mfmoEIfwwL2upJ8vr/eUskr1lfmyjn0I/zQuR
CGX7B6itHHI=
            "], {{0, 0}, {68, 69}}, {0, 2}], Frame -> Automatic, 
           FrameLabel -> {None, None}, 
           FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
             Automatic}], 
          Pane[
           
           Column[{15617, 87178, 175895, 693484, 1162832, 3279115, 8607026, 
             15467728, 97014500, 106715950, 117387545, 629126299, 1592038928, 
             9751242820, 10726367102, 31799003812, 54978904193, 90476794612, 
             119524474073, 431476921480, 474624613628, 1322087074990, 
             1454295782489, 10599725360737, 81659697896810, 89825667686491, 
             108808234455140, 119689057900654, 531657963690719, 
             1484823760059790, 1633306136065769, 10796636749672345, 
             61876300424639579, 158063930467103536, 773870323513813889, 
             1751257355865195277, 8926383091451714804, 13819021400596886284, 
             55200923540656574912, 80721015894722232403, 
             118793117484194455643, 430672429232613901207, 
             1173739672155875291327, 8291113639371462820459, 
             18120225003308609102504, 59932247503639470012754, 
             105925472254003417014029, 1016518019479403758715431, 
             2118169821427344134586974, 6329986803570078548045671, 
             7962985483927086402850238, 16759284032319795043135261, 
             28435212435551774547448787, 101278733679106952002193665, 
             611406607047017647202413031, 772547267751719411922654334, 
             1249801994526891353114919767, 8374782193979580488426411743, 
             12212260413377538537269052917, 83433486454715292390995958208, 
             171776835100186821630095554028, 988954518610205503793105109430, 
             1087849970471226054172415620373, 4196634967518348659589657182410,
              4616298464270183525548622900651, 
             6077928310697201878103485190716, 
             12685721141766922065913833709787, 
             83954293255943614272505217080765, 
             142349722581537975699755738788841}], {270, 255}, 
           Scrollbars -> {False, True}], 
          Pane[
           
           Column[{15617, 87178, 175895, 693484, 1162832, 3279115, 8607026, 
             15467728, 97014500, 106715950, 117387545, 629126299, 1592038928, 
             9751242820, 10726367102, 31799003812, 54978904193, 90476794612, 
             119524474073, 431476921480, 474624613628, 1322087074990, 
             1454295782489, 10599725360737, 81659697896810, 89825667686491, 
             108808234455140, 119689057900654, 531657963690719, 
             1484823760059790, 1633306136065769, 10796636749672345, 
             61876300424639579, 158063930467103536, 773870323513813889, 
             1751257355865195277, 8926383091451714804, 13819021400596886284, 
             55200923540656574912, 80721015894722232403, 
             118793117484194455643, 430672429232613901207, 
             1173739672155875291327, 8291113639371462820459, 
             18120225003308609102504, 59932247503639470012754, 
             105925472254003417014029, 1016518019479403758715431, 
             2118169821427344134586974, 6329986803570078548045671, 
             7962985483927086402850238, 16759284032319795043135261, 
             28435212435551774547448787, 101278733679106952002193665, 
             611406607047017647202413031, 772547267751719411922654334, 
             1249801994526891353114919767, 8374782193979580488426411743, 
             12212260413377538537269052917, 83433486454715292390995958208, 
             171776835100186821630095554028, 988954518610205503793105109430, 
             1087849970471226054172415620373, 4196634967518348659589657182410,
              4616298464270183525548622900651, 
             6077928310697201878103485190716, 
             12685721141766922065913833709787, 
             83954293255943614272505217080765, 
             142349722581537975699755738788841}], {270, 255}, 
           Scrollbars -> {False, True}], 68}, {
          Graphics[
           Raster[CompressedData["
1:eJyNVut5xCAMs7xJF+gWXaAj3ALd/19BkrnkkgD0S9sQ4YeQDV+vv99XRsRP
e77bg/bDX4hE9icTbUQG2kv7p73on7aMkDaTHdUevYATRvYp2UWfy26n4/p7
f2t/+2cZAJ33ePq3pCO5SVqXP67iQk8YwDCZAOchz+kFckpwZAXMYHtmPUD5
Dc4x2KATOU+mregZO01znd5sR7Z7tN0RaQyFm7aFkayIcjChZNMZYjApqyBt
Y4S4ZQR8E4v0o5nEGw0nOzJMBcdl5BUH2/5KVhkV7UXtpLjNo3UnXF8ZlsRg
S6dBYqO484Y4cXk7DW5h2PoIKyvZDzQJkTTsWbKA8vxEpySRYYvv8FkCl4Ga
htRNJ1wVV9siUiKripKM8pOTsg4JB9otlUdV2BUeQ2QpJjNcIbdwiTtdDkX9
vW1tYYTLn0G5gp+sqzlI5JQVbjmpVF1KLkaF8wwfzQFVTM+2WWMCiZ7IJ06G
dSncRfLIScFVDqPTTdE07Q6Dz9q5hdcu5ZyTglf3e9TJOXjkoc+s4erOwIIT
x8I2ONWJe52rTKU85QTiGagGseDE+40xZmB3EUeVN/3khLakZDZWnISKSG0U
K50cRJgR9/3kZB0ui1RbnA9VjBSyoRMx7g6xo0EZjSUnisVEB5a1Q3yoB645
YSxw29qonRzH21onalJqbXNOxtXA7W3BSYhina86rnbgbqBzTnxGFeUrncDX
Bx2ga52Ebx++by3Qh852exZf4IfOtqHB8MkTGz32IPB17WTtpu+tO/Coe+IG
mkiMfNfw1PZv2fbVb6923LCud7YHMHxr24y7dPIPw3kVKQ==
            "], {{0, 0}, {46, 69}}, {0, 2}], Frame -> Automatic, 
           FrameLabel -> {None, None}, 
           FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
             Automatic}], 
          Pane[
           
           Column[{15617, 26788, 11555, 6667, 13334, 55666, 112223, 334444, 
             777788, 1555666, 1122278, 4448899, 13334447, 77777788, 155555666,
              111122278, 333348899, 1122223339, 144455555, 67999, 156779, 
             113344, 555566, 1111222, 2333333, 5566666, 11222333, 44444455, 
             88889999, 178888888, 156777779, 113344555, 666677888, 1444555555,
              167999, 116677, 238889, 1122277, 4448888, 12333337, 55666688, 
             133333444, 556667777, 1233334444, 5566667777, 12333334444, 
             55666667777, 123333334444, 556666667777, 1233333334444, 
             5566666667777, 12333333334444, 55666666667777, 123333333334444, 
             556666666667777, 1233333333334444, 5566666666667777, 
             12333333333334444, 55666666666667777, 123333333333334444, 
             556666666666667777, 1233333333333334444, 5566666666666667777, 
             12333333333333334444, 55666666666666667777, 
             123333333333333334444, 556666666666666667777, 
             1233333333333333334444, 5566666666666666667777}], {270, 255}, 
           Scrollbars -> {False, True}], 
          Pane[
           
           Column[{15617, 26788, 11555, 6667, 13334, 55666, 112223, 334444, 
             777788, 1555666, 1122278, 4448899, 13334447, 77777788, 155555666,
              111122278, 333348899, 1122223339, 144455555, 67999, 156779, 
             113344, 555566, 1111222, 2333333, 5566666, 11222333, 44444455, 
             88889999, 178888888, 156777779, 113344555, 666677888, 1444555555,
              167999, 116677, 238889, 1122277, 4448888, 12333337, 55666688, 
             133333444, 556667777, 1233334444, 5566667777, 12333334444, 
             55666667777, 123333334444, 556666667777, 1233333334444, 
             5566666667777, 12333333334444, 55666666667777, 123333333334444, 
             556666666667777, 1233333333334444, 5566666666667777, 
             12333333333334444, 55666666666667777, 123333333333334444, 
             556666666666667777, 1233333333333334444, 5566666666666667777, 
             12333333333333334444, 55666666666666667777, 
             123333333333333334444, 556666666666666667777, 
             1233333333333333334444, 5566666666666666667777}], {270, 255}, 
           Scrollbars -> {False, True}], 68, 
          "No repeating patten detected"}}, $CellContext`finalPalindrome[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[Integer]]] := {
         $CellContext`palindrome[$CellContext`i, $CellContext`m, \
$CellContext`b, $CellContext`v], 
         $CellContext`listPalindrome[$CellContext`i, $CellContext`m, \
$CellContext`b], 
         $CellContext`listPalindrome2[$CellContext`i, $CellContext`m, \
$CellContext`b], 
         $CellContext`countPalindrome[$CellContext`i, $CellContext`m, \
$CellContext`b]}, $CellContext`palindrome[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[Integer]]] := ArrayPlot[
         PadLeft[
          IntegerDigits[
           NestWhileList[
           IntegerReverse[#, $CellContext`b] + #& , $CellContext`i, 
            IntegerDigits[
              IntegerReverse[#, $CellContext`b], $CellContext`b] =!= 
            IntegerDigits[#, $CellContext`b]& , 
            1, $CellContext`m], $CellContext`v]]], $CellContext`listPalindrome[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Pane[
         Column[
          NestWhileList[
          IntegerReverse[#, $CellContext`b] + #& , $CellContext`i, 
           IntegerDigits[
             IntegerReverse[#, $CellContext`b], $CellContext`b] =!= 
           IntegerDigits[#, $CellContext`b]& , 1, $CellContext`m]], {270, 
         255}, Scrollbars -> {False, True}], $CellContext`listPalindrome2[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Pane[
         Column[
          Map[FromDigits, 
           IntegerDigits[
            NestWhileList[
            IntegerReverse[#, $CellContext`b] + #& , $CellContext`i, 
             IntegerDigits[
               IntegerReverse[#, $CellContext`b], $CellContext`b] =!= 
             IntegerDigits[#, $CellContext`b]& , 
             1, $CellContext`m], $CellContext`b]]], {270, 255}, 
         Scrollbars -> {False, True}], $CellContext`countPalindrome[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Length[
          NestWhileList[
          IntegerReverse[#, $CellContext`b] + #& , $CellContext`i, 
           IntegerDigits[
             IntegerReverse[#, $CellContext`b], $CellContext`b] =!= 
           IntegerDigits[#, $CellContext`b]& , 1, $CellContext`m]] - 
        1, $CellContext`finalRepeat[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[Integer]]] := {
         $CellContext`repeat[$CellContext`i, $CellContext`m, $CellContext`b, \
$CellContext`v], 
         $CellContext`listRepeat[$CellContext`i, $CellContext`m, \
$CellContext`b], 
         $CellContext`listRepeat2[$CellContext`i, $CellContext`m, \
$CellContext`b], 
         $CellContext`countRepeat[$CellContext`i, $CellContext`m, \
$CellContext`b]}, $CellContext`repeat[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`r, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[Integer]]] := ArrayPlot[
         PadLeft[
          IntegerDigits[
           NestList[
           IntegerReverse[#, $CellContext`b] + #& , $CellContext`i, \
$CellContext`m], $CellContext`v]]], $CellContext`repeat[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[Integer]]] := ArrayPlot[
         PadLeft[
          IntegerDigits[
           NestList[
           IntegerReverse[#, $CellContext`b] + #& , $CellContext`i, \
$CellContext`m], $CellContext`v]]], $CellContext`listRepeat[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Pane[
         Column[
          NestList[
          IntegerReverse[#, $CellContext`b] + #& , $CellContext`i, \
$CellContext`m]], {270, 255}, 
         Scrollbars -> {False, True}], $CellContext`listRepeat2[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Pane[
         Column[
          Map[FromDigits, 
           IntegerDigits[
            NestList[
            IntegerReverse[#, $CellContext`b] + #& , $CellContext`i, \
$CellContext`m], $CellContext`b]]], {270, 255}, 
         Scrollbars -> {False, True}], $CellContext`countRepeat[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Length[
          NestList[
          IntegerReverse[#, $CellContext`b] + #& , $CellContext`i, \
$CellContext`m]] - 1, $CellContext`finalReorder[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`r, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[Integer]]] := {
         $CellContext`reorder[$CellContext`i, $CellContext`m, $CellContext`r, \
$CellContext`b, $CellContext`v], 
         $CellContext`listReorder[$CellContext`i, $CellContext`m, \
$CellContext`r, $CellContext`b], 
         $CellContext`listReorder2[$CellContext`i, $CellContext`m, \
$CellContext`r, $CellContext`b], 
         $CellContext`countReorder[$CellContext`i, $CellContext`m, \
$CellContext`r, $CellContext`b]}, $CellContext`reorder[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`r, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[Integer]]] := ArrayPlot[
         PadLeft[
          IntegerDigits[
           NestList[FromDigits[
              Flatten[
               Delete[
                Prepend[
                 IntegerDigits[#, $CellContext`b], 
                 Take[
                  
                  IntegerDigits[#, $CellContext`b], -$CellContext`r]], \
-$CellContext`r]], $CellContext`b] + #& , $CellContext`i, $CellContext`m], \
$CellContext`v]]], $CellContext`listReorder[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`r, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Pane[
         Column[
          NestList[FromDigits[
             Flatten[
              Delete[
               Prepend[
                IntegerDigits[#, $CellContext`b], 
                Take[
                 
                 IntegerDigits[#, $CellContext`b], -$CellContext`r]], \
-$CellContext`r]], $CellContext`b] + #& , $CellContext`i, $CellContext`m]], {
         270, 255}, Scrollbars -> {False, True}], $CellContext`listReorder2[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`r, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Pane[
         Column[
          Map[FromDigits, 
           IntegerDigits[
            NestList[FromDigits[
               Flatten[
                Delete[
                 Prepend[
                  IntegerDigits[#, $CellContext`b], 
                  Take[
                   
                   IntegerDigits[#, $CellContext`b], -$CellContext`r]], \
-$CellContext`r]], $CellContext`b] + #& , $CellContext`i, $CellContext`m], \
$CellContext`b]]], {270, 255}, 
         Scrollbars -> {False, True}], $CellContext`countReorder[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`r, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Length[
          NestList[FromDigits[
             Flatten[
              Delete[
               Prepend[
                IntegerDigits[#, $CellContext`b], 
                Take[
                 
                 IntegerDigits[#, $CellContext`b], -$CellContext`r]], \
-$CellContext`r]], $CellContext`b] + #& , $CellContext`i, $CellContext`m]] - 
        1, $CellContext`finalRat[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[Integer]]] := {
         $CellContext`rat[$CellContext`i, $CellContext`m, $CellContext`b, \
$CellContext`v], 
         $CellContext`listRat[$CellContext`i, $CellContext`m, $CellContext`b], 
         $CellContext`listRat2[$CellContext`i, $CellContext`m, \
$CellContext`b], 
         $CellContext`countRat[$CellContext`i, $CellContext`m, \
$CellContext`b], 
         $CellContext`ftrRat[$CellContext`i, $CellContext`m, \
$CellContext`b]}, $CellContext`rat[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[Integer]]] := ArrayPlot[
         PadLeft[
          IntegerDigits[
           NestList[FromDigits[
             Sort[
              IntegerDigits[
              IntegerReverse[#, $CellContext`b] + #]]]& , $CellContext`i, \
$CellContext`m], $CellContext`v]]], $CellContext`listRat[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Pane[
         Column[
          NestList[FromDigits[
            Sort[
             IntegerDigits[
             IntegerReverse[#, $CellContext`b] + #]]]& , $CellContext`i, \
$CellContext`m]], {270, 255}, 
         Scrollbars -> {False, True}], $CellContext`listRat2[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Pane[
         Column[
          Map[FromDigits, 
           IntegerDigits[
            NestList[FromDigits[
              Sort[
               IntegerDigits[
               IntegerReverse[#, $CellContext`b] + #]]]& , $CellContext`i, \
$CellContext`m], $CellContext`b]]], {270, 255}, 
         Scrollbars -> {False, True}], $CellContext`countRat[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Length[
          NestList[FromDigits[
            Sort[
             IntegerDigits[
             IntegerReverse[#, $CellContext`b] + #]]]& , $CellContext`i, \
$CellContext`m]] - 1, $CellContext`ftrRat[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := If[Part[
           FindTransientRepeat[
            NestList[FromDigits[
              Sort[
               IntegerDigits[
               IntegerReverse[#, $CellContext`b] + #]]]& , $CellContext`i, \
$CellContext`m], 2], 2] =!= {}, 
         NestGraph[FromDigits[
           Sort[
            IntegerDigits[
            IntegerReverse[#, $CellContext`b] + #]]]& , $CellContext`i, \
$CellContext`m, VertexLabels -> "Name", ImageSize -> Full], 
         "No repeating patten detected"]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->514377662],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`b$$ = 10, $CellContext`i$$ = 
    15617, $CellContext`m$$ = 68, $CellContext`n$$ = 4, $CellContext`r$$ = 
    1, $CellContext`v$$ = 3, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`n$$], 4, "Algorithms:"}, {
      1 -> "196-Algorithm Palindrome checker", 2 -> "196-Algorithm", 3 -> 
       "Reorder-Algorithm", 4 -> "RATS sequence"}}, {{
       Hold[$CellContext`i$$], 15617, "initial value in base 10"}, 10, 100000,
       1}, {{
       Hold[$CellContext`m$$], 68, "max number of iterations"}, 1, 500, 1}, {{
       Hold[$CellContext`r$$], 1, "number of digits reordered"}, 1, 
      Dynamic[
       Length[
        IntegerDigits[$CellContext`i$$, $CellContext`b$$]]], 1}, {{
       Hold[$CellContext`b$$], 10, "base to compute algorithm"}, 2, 10, 1}, {{
       Hold[$CellContext`v$$], 3, "base to represent iterations"}, 2, 10, 1}},
     Typeset`size$$ = {600., {146., 154.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`n$2538$$ = False, $CellContext`i$2539$$ = 
    0, $CellContext`m$2540$$ = 0, $CellContext`r$2541$$ = 
    0, $CellContext`b$2542$$ = 0, $CellContext`v$2543$$ = 0}, 
    DynamicBox[ToBoxes[
      RawBoxes[
       Manipulate`ManipulateBoxes[
       1, StandardForm, 
        "Variables" :> {$CellContext`b$$ = 10, $CellContext`i$$ = 
          15617, $CellContext`m$$ = 68, $CellContext`n$$ = 
          4, $CellContext`r$$ = 1, $CellContext`v$$ = 3}, 
        "ControllerVariables" :> {
          Hold[$CellContext`n$$, $CellContext`n$2538$$, False], 
          Hold[$CellContext`i$$, $CellContext`i$2539$$, 0], 
          Hold[$CellContext`m$$, $CellContext`m$2540$$, 0], 
          Hold[$CellContext`r$$, $CellContext`r$2541$$, 0], 
          Hold[$CellContext`b$$, $CellContext`b$2542$$, 0], 
          Hold[$CellContext`v$$, $CellContext`v$2543$$, 0]}, 
        "OtherVariables" :> {
         Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
          Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
          Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
          Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
        Module[{$CellContext`func$}, $CellContext`func$ = {
             $CellContext`finalPalindrome[$CellContext`i$$, $CellContext`m$$, \
$CellContext`b$$, $CellContext`v$$], 
             $CellContext`finalRepeat[$CellContext`i$$, $CellContext`m$$, \
$CellContext`b$$, $CellContext`v$$], 
             $CellContext`finalReorder[$CellContext`i$$, $CellContext`m$$, \
$CellContext`r$$, $CellContext`b$$, $CellContext`v$$], 
             $CellContext`finalRat[$CellContext`i$$, $CellContext`m$$, \
$CellContext`b$$, $CellContext`v$$]}; Pane[
            If[$CellContext`n$$ == 4, 
             Grid[{{
                StringJoin["visual representation in base ", 
                 ToString[$CellContext`v$$]], 
                "numbers after each iteration in base 10", 
                StringJoin["numbers after each iteration in base ", 
                 ToString[$CellContext`b$$]], "number of iterations", 
                "NestGraph (if there is a repeating pattern)"}, 
               Part[$CellContext`func$, $CellContext`n$$]}, Frame -> All, 
              ItemSize -> Full], 
             Grid[{{
                StringJoin["visual representation in base ", 
                 ToString[$CellContext`v$$]], 
                "numbers after each iteration in base 10", 
                StringJoin["numbers after each iteration in base ", 
                 ToString[$CellContext`b$$]], "number of iterations"}, 
               Part[$CellContext`func$, $CellContext`n$$]}, Frame -> All, 
              ItemSize -> Full]], {600, 300}, Scrollbars -> {True, False}]], 
        "Specifications" :> {{{$CellContext`n$$, 4, "Algorithms:"}, {
           1 -> "196-Algorithm Palindrome checker", 2 -> "196-Algorithm", 3 -> 
            "Reorder-Algorithm", 4 -> "RATS sequence"}, ControlType -> 
           SetterBar}, 
          Delimiter, {{$CellContext`i$$, 15617, "initial value in base 10"}, 
           10, 100000, 1, Appearance -> 
           "Labeled"}, {{$CellContext`m$$, 68, "max number of iterations"}, 1,
            500, 1, Appearance -> 
           "Labeled"}, {{$CellContext`r$$, 1, "number of digits reordered"}, 
           1, 
           Dynamic[
            Length[
             IntegerDigits[$CellContext`i$$, $CellContext`b$$]]], 1, 
           Appearance -> 
           "Labeled"}, {{$CellContext`b$$, 10, "base to compute algorithm"}, 
           2, 10, 1, ControlType -> 
           PopupMenu}, {{$CellContext`v$$, 3, "base to represent iterations"},
            2, 10, 1, ControlType -> PopupMenu}}, 
        "Options" :> {FrameMargins -> None}, 
        "DefaultOptions" :> {ControllerLinking -> True}]], StandardForm],
     ImageSizeCache->{635., {260., 267.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`func = {{
          Graphics[
           
           Raster[{{0, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 0, 0, 2, 2, 2, 1, 1, 2, 
            0}, {2, 0, 0, 0, 2, 2, 1, 1, 2, 0, 0, 0, 1, 0, 1, 2, 1, 1, 2, 
            1}, {2, 1, 1, 0, 2, 0, 0, 2, 1, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 
            0}, {2, 2, 1, 2, 1, 2, 1, 1, 0, 2, 2, 1, 1, 2, 2, 1, 2, 2, 0, 
            1}, {2, 2, 2, 1, 0, 2, 2, 0, 1, 1, 2, 2, 2, 2, 1, 2, 0, 1, 0, 
            0}, {2, 2, 2, 2, 0, 0, 0, 2, 0, 0, 0, 2, 1, 2, 0, 0, 2, 0, 1, 
            1}, {2, 2, 2, 2, 2, 0, 0, 1, 0, 1, 1, 2, 0, 1, 2, 1, 1, 0, 2, 
            0}, {2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 2, 0, 1, 1, 2, 1, 2, 
            1}, {2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 2, 2, 1, 1, 0, 2, 0, 2, 1, 
            0}, {2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 0, 1, 0, 1, 1, 2, 2, 2, 0, 
            1}, {2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 1, 1, 2, 2, 1, 1, 0, 
            0}, {2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 0, 0, 2, 1, 2, 1, 
            1}, {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 1, 2, 1, 2, 0, 1, 2, 
            0}}, {{0, 0}, {20, 13}}, {0, 2}], Frame -> Automatic, 
           FrameLabel -> {None, None}, 
           FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
             Automatic}], 
          Pane[
           
           Column[{15617, 87268, 173546, 818917, 1538735, 6917086, 13724282, 
            41967013, 73043927, 145977964, 615757505, 1121515021, 
            2326666232}], {270, 255}, Scrollbars -> {False, True}], 
          Pane[
           
           Column[{15617, 87268, 173546, 818917, 1538735, 6917086, 13724282, 
            41967013, 73043927, 145977964, 615757505, 1121515021, 
            2326666232}], {270, 255}, Scrollbars -> {False, True}], 12}, {
          Graphics[
           Raster[CompressedData["
1:eJylmF2S20AIhIGb5DCpvOcIe4G9/1tG9NfIXlu2rEzZKuuP6QG6Yfzr6/vv
V0XE7/X9s75ZUet8HSMztt+5Dlm5jb683d4eXKfZx/XUOqzf/VBtl7cr2RfX
1dpenDe3H/3p8+wbqRnXJ3uunnSdbBZLzzayxrDO1mjLG4qGUCnb/VIGr6VO
ZbkErb8Fzp7Ar8hQWy6mAkD1ZbD14ns1fVL4KIW7TzO1rM14T9YP7+iYo9eg
95JF2GUhf7KsvFmunNmLK03Ys2cweShg8mQUL/elSHDqXntG3uwbcqa829HH
fK+4Q4prg8xIw+iH207DIxD9U2vrWdoHQXbgyTLamBzQ9ApAKny6hxe0WoWe
qPT0fch0pEo/QuHNJJFuc2nmzORt8juLB2q3I/gp1zcyL8m5k6SY0qFhCjpo
quz9kHsjSHURwdkDNyKBBLgwmuIKPvCEPVEqXFppzDshtIlRD/yHJ0QUAdJT
oZCRVhXDeGXzLZ6ObO0SgS4oedopSgNxM/Fl1A0aWCHv6PnJwc56xIZsIHjy
/i0aRUiixO2ygg3ahJ0WAWhU93aEWeZw6egPtCFCipvSPO7RVLIasod8G6L6
J/EOYlv5A02ZCFqMOU1gxI2yvlqpfkQKPO0KK7PIjUqjdqSkuJJkwsMIT43L
JVt2hCRjaE4+PaARa0QAVZbadRZ9NicqJq6PZgrKhipSmtfIuSkeYs0w7yme
gsQVZddqdTg+pAgVZNEzM3vJc8kQ+5GOpIA6IXb1e8CD18IsCyt4uEbJf8T6
AA3JRYawjrDfHMuCWvksUsZjWYaAtjN1KKWRMQXiCI+F2lU1ZykSnGbrrZI9
9zPFwqU2pMOiq2pGprXnxRB6DvQ9MRGyFNUzTt3jycTPzkInikuJMB1HynjQ
Hyf8nsZ9hsOPIzV4CoIntS/Gw+HGpF5FynjKUa3JXYjuEMTLSIHH3WGZYOhp
ul7e16kjODX1FUKHG9DpRN5ECjzujnBQhmk6Wv0eDU2l0xYJmoqGRp8wQz7T
rFo1XaYlGqfMqGWf/gmnh/uPM5Ha8fTcyI/1HIKfQ1PIMR7Cx7Bevj473MhO
3akwJc5FCjwun+qfKAl47TyaKudbsUWZUng2UoNnX4+bFWXBJ2hcwKkZYQU7
xal7POxAvDcx/z9D40rl7Y3UNd6q3+MIv6ZGiy3ap2iUt2anGsvXdeoQT3on
XEOpz9G4KEHR+ohTd3B2azR0H0cKIMNNS+kVM3ZwhLdgl9B4i0IfXSfq1IGd
mI3qce93YsxOgKBfNOMeYLqdi4PGp/xXwuVB2CnJl4f/F6rrkRo82jldjpTx
FP9D/I8Zb9HX5x/9SBz+
            "], {{0, 0}, {71, 69}}, {0, 2}], Frame -> Automatic, 
           FrameLabel -> {None, None}, 
           FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
             Automatic}], 
          Pane[
           
           Column[{15617, 87268, 173546, 818917, 1538735, 6917086, 13724282, 
             41967013, 73043927, 145977964, 615757505, 1121515021, 2326666232,
              4653332464, 9295666028, 17502331957, 93415652528, 175941303967, 
             945244453538, 1780598896087, 9587587846958, 18184075704817, 
             90024832752998, 179950556595007, 880546211654978, 
             1760002324300066, 8360036556300737, 15730073112601375, 
             73040694249605126, 135191388499209163, 497094383382400694, 
             993098666765891488, 1877297234432781887, 9759169578760709668, 
             18428240257520329247, 92720542832724611728, 
             175432185556549114457, 929844131212130349028, 
             1750787162424261797957, 9348758786666879668528, 
             17607428573333758246967, 94571714306671340717638, 
             178243418624331682435187, 959777704757758496778058, 
             1810655399615515904556017, 8917209494770685840116198, 
             17833319980631460789143396, 87167518687045069780477267, 
             163444927483099148462053445, 707795192325089533191497806, 
             1316589383661070056483095513, 4472493230161771720322951644, 
             8934085460433543330646894388, 17769071920766996671292698786, 
             86558701138436963374209795557, 162118491385773926857320581125, 
             683303515144403304440515392386, 1366597030188806608882030695772, 
             4142557333076872697692338652403, 7185125666044835484395676204817,
              14369152431979680868802341420634, 
             57971566752866489566715766616975, 
             115933233504633088033541533134950, 
             175364568649963968369946865474461, 
             339839137299927837739893730938032, 
             570678174698865576469886462876965, 
             1140356439387830252038782934753040, 
             1543930832266132772426622281283451, 
             3087752654532375544743244661676902}], {270, 255}, 
           Scrollbars -> {False, True}], 
          Pane[
           
           Column[{15617, 87268, 173546, 818917, 1538735, 6917086, 13724282, 
             41967013, 73043927, 145977964, 615757505, 1121515021, 2326666232,
              4653332464, 9295666028, 17502331957, 93415652528, 175941303967, 
             945244453538, 1780598896087, 9587587846958, 18184075704817, 
             90024832752998, 179950556595007, 880546211654978, 
             1760002324300066, 8360036556300737, 15730073112601375, 
             73040694249605126, 135191388499209163, 497094383382400694, 
             993098666765891488, 1877297234432781887, 9759169578760709668, 
             18428240257520329247, 92720542832724611728, 
             175432185556549114457, 929844131212130349028, 
             1750787162424261797957, 9348758786666879668528, 
             17607428573333758246967, 94571714306671340717638, 
             178243418624331682435187, 959777704757758496778058, 
             1810655399615515904556017, 8917209494770685840116198, 
             17833319980631460789143396, 87167518687045069780477267, 
             163444927483099148462053445, 707795192325089533191497806, 
             1316589383661070056483095513, 4472493230161771720322951644, 
             8934085460433543330646894388, 17769071920766996671292698786, 
             86558701138436963374209795557, 162118491385773926857320581125, 
             683303515144403304440515392386, 1366597030188806608882030695772, 
             4142557333076872697692338652403, 7185125666044835484395676204817,
              14369152431979680868802341420634, 
             57971566752866489566715766616975, 
             115933233504633088033541533134950, 
             175364568649963968369946865474461, 
             339839137299927837739893730938032, 
             570678174698865576469886462876965, 
             1140356439387830252038782934753040, 
             1543930832266132772426622281283451, 
             3087752654532375544743244661676902}], {270, 255}, 
           Scrollbars -> {False, True}], 68}, {
          Graphics[
           Raster[CompressedData["
1:eJydl9GZ20AIhBk6SS9JAynhGrj+36JlfpDOkW3Je5/tk7wGdhgG9Ovr++9X
RsSf7fV7e0naXqnc1vYRvrX9s23K7btYX21b1t92pbq9XbB/mWJrZv1Otda3
db+Wr7dXGdD6DP9+mazfrKvtXqw/ldNyVDGozJflUPlL1S8j2Fl7op2qTrLc
5fJmAw6mfC0Lddv+sk60BylHWvcTjzZmOMLBEEQDNxsVO5SNJkZtDZjKupLT
GYsFj28WbgVOnTOF7aiwvbuwMp4gF3YT9m4bBQlHCB/Qxy/LvpIBqJ2OyIDa
XHZ2w57VABQC9e4DH5LGqUmrjQTwFbDFDjKXncqJsw5SEcwHywBAvjqrQyYG
Z9ikTYAzyoqxgYkc12ZDDO/MC5Jgb073HoepJdk9GVADEka0ckdq06h0XhpY
GDBQOb/h2FyC5UHZ76nJS4JEV4aMqcll/ihdKH53RTuqYxyunGE5fnNXAZBE
C9KEVSp/GoHbCbcQDJdSDCmdfRtL/YxjMuxCyaY+pe2TiuIE4IiHOBATiCnD
OSoRcA9+qMs1HwMxDQsupzcNMmDnVFS2nD3GgZFguwi72D37FaOPzepHWEeo
snns4OpgTneLImj/vyYrFl3Eu6lqGYV6p3mx2xbo0VC5Zip6jTAD6VkcCYeL
G12IlSqRe0owD5JwYiRMI+8TyjnoWhcFjc7jSCRDXSHZsqxWMOhCp3hmxH2N
5hGmmRUSDmUg4M9sIHTWPZM8bW4qflfnp8uUpufZ0h4fciulnuTFgeA9uluQ
3xZRE+R5XhpXxCyyOy/yqlYXdbt6dRo4ru6aTAtBi6f5vYykGyG5pNFN+3KN
v7SR9Gjra/ewdL8+Fs+bSMwONyeTbTK1k/+dkcMJWgEpeGrzXRyZ3RSZYuhX
LhcX8Ns41qK5AaTatXvdi3r5aaOnKnObSooeKa/YyB5WEJNdTnQlLyx6g3qe
6dnD+nDRhhgGwCD2We5SXhz+3isiuytb1a7lpWUtmeMVB2qc9Zenp6FCRgEZ
S67mxVYYI5kaDM4I3NVIevSEqKluIbcCIQJPZmj91bwQCGBaFZmSzvr+KyNT
aPRP9dPKjYV+RvNiBu47gcQktdG4l5fkiYlxLLuGb+UFIzM3B2J7Lw4PBOSH
2r+Zl4rET6cMr6GrOvZgpMcqT7l38+LVD7/I4828YEM0/x6AP7HBMBNHkb+7
epQSj2if2OjHBdTjozjg2T5mfmoEIfwwL2upJ8vr/eUskr1lfmyjn0I/zQuR
CGX7B6itHHI=
            "], {{0, 0}, {68, 69}}, {0, 2}], Frame -> Automatic, 
           FrameLabel -> {None, None}, 
           FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
             Automatic}], 
          Pane[
           
           Column[{15617, 87178, 175895, 693484, 1162832, 3279115, 8607026, 
             15467728, 97014500, 106715950, 117387545, 629126299, 1592038928, 
             9751242820, 10726367102, 31799003812, 54978904193, 90476794612, 
             119524474073, 431476921480, 474624613628, 1322087074990, 
             1454295782489, 10599725360737, 81659697896810, 89825667686491, 
             108808234455140, 119689057900654, 531657963690719, 
             1484823760059790, 1633306136065769, 10796636749672345, 
             61876300424639579, 158063930467103536, 773870323513813889, 
             1751257355865195277, 8926383091451714804, 13819021400596886284, 
             55200923540656574912, 80721015894722232403, 
             118793117484194455643, 430672429232613901207, 
             1173739672155875291327, 8291113639371462820459, 
             18120225003308609102504, 59932247503639470012754, 
             105925472254003417014029, 1016518019479403758715431, 
             2118169821427344134586974, 6329986803570078548045671, 
             7962985483927086402850238, 16759284032319795043135261, 
             28435212435551774547448787, 101278733679106952002193665, 
             611406607047017647202413031, 772547267751719411922654334, 
             1249801994526891353114919767, 8374782193979580488426411743, 
             12212260413377538537269052917, 83433486454715292390995958208, 
             171776835100186821630095554028, 988954518610205503793105109430, 
             1087849970471226054172415620373, 4196634967518348659589657182410,
              4616298464270183525548622900651, 
             6077928310697201878103485190716, 
             12685721141766922065913833709787, 
             83954293255943614272505217080765, 
             142349722581537975699755738788841}], {270, 255}, 
           Scrollbars -> {False, True}], 
          Pane[
           
           Column[{15617, 87178, 175895, 693484, 1162832, 3279115, 8607026, 
             15467728, 97014500, 106715950, 117387545, 629126299, 1592038928, 
             9751242820, 10726367102, 31799003812, 54978904193, 90476794612, 
             119524474073, 431476921480, 474624613628, 1322087074990, 
             1454295782489, 10599725360737, 81659697896810, 89825667686491, 
             108808234455140, 119689057900654, 531657963690719, 
             1484823760059790, 1633306136065769, 10796636749672345, 
             61876300424639579, 158063930467103536, 773870323513813889, 
             1751257355865195277, 8926383091451714804, 13819021400596886284, 
             55200923540656574912, 80721015894722232403, 
             118793117484194455643, 430672429232613901207, 
             1173739672155875291327, 8291113639371462820459, 
             18120225003308609102504, 59932247503639470012754, 
             105925472254003417014029, 1016518019479403758715431, 
             2118169821427344134586974, 6329986803570078548045671, 
             7962985483927086402850238, 16759284032319795043135261, 
             28435212435551774547448787, 101278733679106952002193665, 
             611406607047017647202413031, 772547267751719411922654334, 
             1249801994526891353114919767, 8374782193979580488426411743, 
             12212260413377538537269052917, 83433486454715292390995958208, 
             171776835100186821630095554028, 988954518610205503793105109430, 
             1087849970471226054172415620373, 4196634967518348659589657182410,
              4616298464270183525548622900651, 
             6077928310697201878103485190716, 
             12685721141766922065913833709787, 
             83954293255943614272505217080765, 
             142349722581537975699755738788841}], {270, 255}, 
           Scrollbars -> {False, True}], 68}, {
          Graphics[
           Raster[CompressedData["
1:eJyNVut5xCAMs7xJF+gWXaAj3ALd/19BkrnkkgD0S9sQ4YeQDV+vv99XRsRP
e77bg/bDX4hE9icTbUQG2kv7p73on7aMkDaTHdUevYATRvYp2UWfy26n4/p7
f2t/+2cZAJ33ePq3pCO5SVqXP67iQk8YwDCZAOchz+kFckpwZAXMYHtmPUD5
Dc4x2KATOU+mregZO01znd5sR7Z7tN0RaQyFm7aFkayIcjChZNMZYjApqyBt
Y4S4ZQR8E4v0o5nEGw0nOzJMBcdl5BUH2/5KVhkV7UXtpLjNo3UnXF8ZlsRg
S6dBYqO484Y4cXk7DW5h2PoIKyvZDzQJkTTsWbKA8vxEpySRYYvv8FkCl4Ga
htRNJ1wVV9siUiKripKM8pOTsg4JB9otlUdV2BUeQ2QpJjNcIbdwiTtdDkX9
vW1tYYTLn0G5gp+sqzlI5JQVbjmpVF1KLkaF8wwfzQFVTM+2WWMCiZ7IJ06G
dSncRfLIScFVDqPTTdE07Q6Dz9q5hdcu5ZyTglf3e9TJOXjkoc+s4erOwIIT
x8I2ONWJe52rTKU85QTiGagGseDE+40xZmB3EUeVN/3khLakZDZWnISKSG0U
K50cRJgR9/3kZB0ui1RbnA9VjBSyoRMx7g6xo0EZjSUnisVEB5a1Q3yoB645
YSxw29qonRzH21onalJqbXNOxtXA7W3BSYhina86rnbgbqBzTnxGFeUrncDX
Bx2ga52Ebx++by3Qh852exZf4IfOtqHB8MkTGz32IPB17WTtpu+tO/Coe+IG
mkiMfNfw1PZv2fbVb6923LCud7YHMHxr24y7dPIPw3kVKQ==
            "], {{0, 0}, {46, 69}}, {0, 2}], Frame -> Automatic, 
           FrameLabel -> {None, None}, 
           FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
             Automatic}], 
          Pane[
           
           Column[{15617, 26788, 11555, 6667, 13334, 55666, 112223, 334444, 
             777788, 1555666, 1122278, 4448899, 13334447, 77777788, 155555666,
              111122278, 333348899, 1122223339, 144455555, 67999, 156779, 
             113344, 555566, 1111222, 2333333, 5566666, 11222333, 44444455, 
             88889999, 178888888, 156777779, 113344555, 666677888, 1444555555,
              167999, 116677, 238889, 1122277, 4448888, 12333337, 55666688, 
             133333444, 556667777, 1233334444, 5566667777, 12333334444, 
             55666667777, 123333334444, 556666667777, 1233333334444, 
             5566666667777, 12333333334444, 55666666667777, 123333333334444, 
             556666666667777, 1233333333334444, 5566666666667777, 
             12333333333334444, 55666666666667777, 123333333333334444, 
             556666666666667777, 1233333333333334444, 5566666666666667777, 
             12333333333333334444, 55666666666666667777, 
             123333333333333334444, 556666666666666667777, 
             1233333333333333334444, 5566666666666666667777}], {270, 255}, 
           Scrollbars -> {False, True}], 
          Pane[
           
           Column[{15617, 26788, 11555, 6667, 13334, 55666, 112223, 334444, 
             777788, 1555666, 1122278, 4448899, 13334447, 77777788, 155555666,
              111122278, 333348899, 1122223339, 144455555, 67999, 156779, 
             113344, 555566, 1111222, 2333333, 5566666, 11222333, 44444455, 
             88889999, 178888888, 156777779, 113344555, 666677888, 1444555555,
              167999, 116677, 238889, 1122277, 4448888, 12333337, 55666688, 
             133333444, 556667777, 1233334444, 5566667777, 12333334444, 
             55666667777, 123333334444, 556666667777, 1233333334444, 
             5566666667777, 12333333334444, 55666666667777, 123333333334444, 
             556666666667777, 1233333333334444, 5566666666667777, 
             12333333333334444, 55666666666667777, 123333333333334444, 
             556666666666667777, 1233333333333334444, 5566666666666667777, 
             12333333333333334444, 55666666666666667777, 
             123333333333333334444, 556666666666666667777, 
             1233333333333333334444, 5566666666666666667777}], {270, 255}, 
           Scrollbars -> {False, True}], 68, 
          "No repeating patten detected"}}, $CellContext`finalPalindrome[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[Integer]]] := {
         $CellContext`palindrome[$CellContext`i, $CellContext`m, \
$CellContext`b, $CellContext`v], 
         $CellContext`listPalindrome[$CellContext`i, $CellContext`m, \
$CellContext`b], 
         $CellContext`listPalindrome2[$CellContext`i, $CellContext`m, \
$CellContext`b], 
         $CellContext`countPalindrome[$CellContext`i, $CellContext`m, \
$CellContext`b]}, $CellContext`palindrome[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[Integer]]] := ArrayPlot[
         PadLeft[
          IntegerDigits[
           NestWhileList[
           IntegerReverse[#, $CellContext`b] + #& , $CellContext`i, 
            IntegerDigits[
              IntegerReverse[#, $CellContext`b], $CellContext`b] =!= 
            IntegerDigits[#, $CellContext`b]& , 
            1, $CellContext`m], $CellContext`v]]], $CellContext`listPalindrome[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Pane[
         Column[
          NestWhileList[
          IntegerReverse[#, $CellContext`b] + #& , $CellContext`i, 
           IntegerDigits[
             IntegerReverse[#, $CellContext`b], $CellContext`b] =!= 
           IntegerDigits[#, $CellContext`b]& , 1, $CellContext`m]], {270, 
         255}, Scrollbars -> {False, True}], $CellContext`listPalindrome2[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Pane[
         Column[
          Map[FromDigits, 
           IntegerDigits[
            NestWhileList[
            IntegerReverse[#, $CellContext`b] + #& , $CellContext`i, 
             IntegerDigits[
               IntegerReverse[#, $CellContext`b], $CellContext`b] =!= 
             IntegerDigits[#, $CellContext`b]& , 
             1, $CellContext`m], $CellContext`b]]], {270, 255}, 
         Scrollbars -> {False, True}], $CellContext`countPalindrome[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Length[
          NestWhileList[
          IntegerReverse[#, $CellContext`b] + #& , $CellContext`i, 
           IntegerDigits[
             IntegerReverse[#, $CellContext`b], $CellContext`b] =!= 
           IntegerDigits[#, $CellContext`b]& , 1, $CellContext`m]] - 
        1, $CellContext`finalRepeat[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[Integer]]] := {
         $CellContext`repeat[$CellContext`i, $CellContext`m, $CellContext`b, \
$CellContext`v], 
         $CellContext`listRepeat[$CellContext`i, $CellContext`m, \
$CellContext`b], 
         $CellContext`listRepeat2[$CellContext`i, $CellContext`m, \
$CellContext`b], 
         $CellContext`countRepeat[$CellContext`i, $CellContext`m, \
$CellContext`b]}, $CellContext`repeat[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`r, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[Integer]]] := ArrayPlot[
         PadLeft[
          IntegerDigits[
           NestList[
           IntegerReverse[#, $CellContext`b] + #& , $CellContext`i, \
$CellContext`m], $CellContext`v]]], $CellContext`repeat[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[Integer]]] := ArrayPlot[
         PadLeft[
          IntegerDigits[
           NestList[
           IntegerReverse[#, $CellContext`b] + #& , $CellContext`i, \
$CellContext`m], $CellContext`v]]], $CellContext`listRepeat[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Pane[
         Column[
          NestList[
          IntegerReverse[#, $CellContext`b] + #& , $CellContext`i, \
$CellContext`m]], {270, 255}, 
         Scrollbars -> {False, True}], $CellContext`listRepeat2[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Pane[
         Column[
          Map[FromDigits, 
           IntegerDigits[
            NestList[
            IntegerReverse[#, $CellContext`b] + #& , $CellContext`i, \
$CellContext`m], $CellContext`b]]], {270, 255}, 
         Scrollbars -> {False, True}], $CellContext`countRepeat[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Length[
          NestList[
          IntegerReverse[#, $CellContext`b] + #& , $CellContext`i, \
$CellContext`m]] - 1, $CellContext`finalReorder[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`r, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[Integer]]] := {
         $CellContext`reorder[$CellContext`i, $CellContext`m, $CellContext`r, \
$CellContext`b, $CellContext`v], 
         $CellContext`listReorder[$CellContext`i, $CellContext`m, \
$CellContext`r, $CellContext`b], 
         $CellContext`listReorder2[$CellContext`i, $CellContext`m, \
$CellContext`r, $CellContext`b], 
         $CellContext`countReorder[$CellContext`i, $CellContext`m, \
$CellContext`r, $CellContext`b]}, $CellContext`reorder[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`r, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[Integer]]] := ArrayPlot[
         PadLeft[
          IntegerDigits[
           NestList[FromDigits[
              Flatten[
               Delete[
                Prepend[
                 IntegerDigits[#, $CellContext`b], 
                 Take[
                  
                  IntegerDigits[#, $CellContext`b], -$CellContext`r]], \
-$CellContext`r]], $CellContext`b] + #& , $CellContext`i, $CellContext`m], \
$CellContext`v]]], $CellContext`listReorder[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`r, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Pane[
         Column[
          NestList[FromDigits[
             Flatten[
              Delete[
               Prepend[
                IntegerDigits[#, $CellContext`b], 
                Take[
                 
                 IntegerDigits[#, $CellContext`b], -$CellContext`r]], \
-$CellContext`r]], $CellContext`b] + #& , $CellContext`i, $CellContext`m]], {
         270, 255}, Scrollbars -> {False, True}], $CellContext`listReorder2[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`r, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Pane[
         Column[
          Map[FromDigits, 
           IntegerDigits[
            NestList[FromDigits[
               Flatten[
                Delete[
                 Prepend[
                  IntegerDigits[#, $CellContext`b], 
                  Take[
                   
                   IntegerDigits[#, $CellContext`b], -$CellContext`r]], \
-$CellContext`r]], $CellContext`b] + #& , $CellContext`i, $CellContext`m], \
$CellContext`b]]], {270, 255}, 
         Scrollbars -> {False, True}], $CellContext`countReorder[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`r, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Length[
          NestList[FromDigits[
             Flatten[
              Delete[
               Prepend[
                IntegerDigits[#, $CellContext`b], 
                Take[
                 
                 IntegerDigits[#, $CellContext`b], -$CellContext`r]], \
-$CellContext`r]], $CellContext`b] + #& , $CellContext`i, $CellContext`m]] - 
        1, $CellContext`finalRat[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[Integer]]] := {
         $CellContext`rat[$CellContext`i, $CellContext`m, $CellContext`b, \
$CellContext`v], 
         $CellContext`listRat[$CellContext`i, $CellContext`m, $CellContext`b], 
         $CellContext`listRat2[$CellContext`i, $CellContext`m, \
$CellContext`b], 
         $CellContext`countRat[$CellContext`i, $CellContext`m, \
$CellContext`b], 
         $CellContext`ftrRat[$CellContext`i, $CellContext`m, \
$CellContext`b]}, $CellContext`rat[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[Integer]]] := ArrayPlot[
         PadLeft[
          IntegerDigits[
           NestList[FromDigits[
             Sort[
              IntegerDigits[
              IntegerReverse[#, $CellContext`b] + #]]]& , $CellContext`i, \
$CellContext`m], $CellContext`v]]], $CellContext`listRat[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Pane[
         Column[
          NestList[FromDigits[
            Sort[
             IntegerDigits[
             IntegerReverse[#, $CellContext`b] + #]]]& , $CellContext`i, \
$CellContext`m]], {270, 255}, 
         Scrollbars -> {False, True}], $CellContext`listRat2[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Pane[
         Column[
          Map[FromDigits, 
           IntegerDigits[
            NestList[FromDigits[
              Sort[
               IntegerDigits[
               IntegerReverse[#, $CellContext`b] + #]]]& , $CellContext`i, \
$CellContext`m], $CellContext`b]]], {270, 255}, 
         Scrollbars -> {False, True}], $CellContext`countRat[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := Length[
          NestList[FromDigits[
            Sort[
             IntegerDigits[
             IntegerReverse[#, $CellContext`b] + #]]]& , $CellContext`i, \
$CellContext`m]] - 1, $CellContext`ftrRat[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`m, 
          Blank[Integer]], 
         Pattern[$CellContext`b, 
          Blank[Integer]]] := If[Part[
           FindTransientRepeat[
            NestList[FromDigits[
              Sort[
               IntegerDigits[
               IntegerReverse[#, $CellContext`b] + #]]]& , $CellContext`i, \
$CellContext`m], 2], 2] =!= {}, 
         NestGraph[FromDigits[
           Sort[
            IntegerDigits[
            IntegerReverse[#, $CellContext`b] + #]]]& , $CellContext`i, \
$CellContext`m, VertexLabels -> "Name", ImageSize -> Full], 
         "No repeating patten detected"]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->26646151]
}, Open  ]],

Cell["", "DetailsSection"],

Cell[CellGroupData[{

Cell["", "ControlSuggestionsSection"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[" Resize Images"]}],
  "\"Click inside an image to reveal its orange resize frame.\\nDrag any of \
the orange resize handles to resize the image.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.676739145796068*^9},
 FontFamily->"Verdana",
 CellTags->"ResizeImages"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Rotate and Zoom in 3D"]}],
  RowBox[{
   "\"Drag a 3D graphic to rotate it. Starting the drag near the center \
tumbles\\nthe graphic; starting near a corner turns it parallel to the plane \
of the screen.\\nHold down \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" (or \"", 
    FrameBox[
    "Cmd", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" on Mac) and drag up and down to zoom.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"RotateAndZoomIn3D"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Drag Locators"]}],
  RowBox[{"\"Drag any locator (\"", 
    GraphicsBox[
     LocatorBox[
      Scaled[{0.5, 0.5}]], ImageSize -> 20], 
    "\", etc.) to move it around.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"DragLocators"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Create and Delete Locators"]}],
  RowBox[{"\"Insert a new locator in the graphic by holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key\\nand clicking where you want it to be. Delete a locator by \
clicking it\\nwhile holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" key.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"CreateAndDeleteLocators"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Slider Zoom"]}],
  RowBox[{"\"Hold down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key while moving a slider to make fine adjustments in the slider \
value.\\nHold \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" and/or \"", 
    FrameBox[
    "Shift", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" at the same time as \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" to make ever finer adjustments.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"SliderZoom"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Gamepad Controls"]}],
  "\"Control this Demonstration with a gamepad or other\\nhuman interface \
device connected to your computer.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.35696210375764*^9, 3.3895522232313623`*^9},
 FontFamily->"Verdana",
 CellTags->"GamepadControls"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Automatic Animation"]}],
  RowBox[{"\"Animate a slider in this Demonstration by clicking the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJzzTSzJSM1NLMlMTlRwL0osyMhMLlZwyy8CCjEzMjAwcIKwAgOI/R/IhBKc\n\
/4EAyGAG0f+nTZsGwgysIJIRKsWKLAXGIHFmEpUgLADxWUAkI24jZs+eTaEt\n\
IG+wQKRmzJgBlYf5lhEA30OqWA=="], "Graphics", ImageSize -> {9, 9}, ImageMargins -> 
      0, CellBaseline -> Baseline], BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"button\\nnext to the slider, and then clicking the play button that \
appears.\\nAnimate all controls by selecting \"", 
    StyleBox["Autorun", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"AutomaticAnimation"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Bookmark Animation"]}],
  RowBox[{
   "\"See a prepared animation of this Demonstration by selecting\\n\"", 
    StyleBox["Animate Bookmarks", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"BookmarkAnimation"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SearchTermsSection"],

Cell["Reverse and Add", "SearchTerms",
 CellChangeTimes->{{3.6767391549703693`*^9, 3.676739167427083*^9}},
 CellID->491233193],

Cell["RATS sequence", "SearchTerms",
 CellChangeTimes->{{3.6767391697592993`*^9, 3.6767392088452015`*^9}},
 CellID->536252785],

Cell["196-Algorithm", "SearchTerms",
 CellChangeTimes->{{3.6767391697592993`*^9, 3.6767392077928934`*^9}, {
  3.6767399589682617`*^9, 3.6767399589682617`*^9}},
 CellID->38449857],

Cell["Palindromic numbers", "SearchTerms",
 CellChangeTimes->{{3.6767391697592993`*^9, 3.6767392077928934`*^9}, {
  3.676739960727314*^9, 3.6767399640456553`*^9}},
 CellID->212989253]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "RelatedLinksSection"],

Cell[TextData[ButtonBox["196-Algorithm",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://mathworld.wolfram.com/196-Algorithm.html"], None},
 ButtonNote->
  "http://mathworld.wolfram.com/196-Algorithm.html"]], "RelatedLinks",
 CellChangeTimes->{{3.6767400304797096`*^9, 3.676740039608482*^9}, {
  3.6767401114563546`*^9, 3.6767401114563546`*^9}},
 CellID->261810773],

Cell[TextData[ButtonBox["Lychrel Number",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://mathworld.wolfram.com/LychrelNumber.html"], None},
 ButtonNote->
  "http://mathworld.wolfram.com/LychrelNumber.html"]], "RelatedLinks",
 CellChangeTimes->{{3.6767400304797096`*^9, 3.676740050517826*^9}, {
  3.6767401282061043`*^9, 3.6767401282071247`*^9}},
 CellID->657775774],

Cell[TextData[ButtonBox["Palindromic Number Conjecture",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://mathworld.wolfram.com/PalindromicNumberConjecture.html"], None},
 ButtonNote->
  "http://mathworld.wolfram.com/PalindromicNumberConjecture.html"]], \
"RelatedLinks",
 CellChangeTimes->{{3.6767400304797096`*^9, 3.6767400585735884`*^9}, {
  3.676740089283753*^9, 3.676740089283753*^9}, {3.676740167917853*^9, 
  3.676740167919852*^9}},
 CellID->504571886],

Cell[TextData[ButtonBox["RATS Sequence",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://mathworld.wolfram.com/RATSSequence.html"], None},
 ButtonNote->
  "http://mathworld.wolfram.com/RATSSequence.html"]], "RelatedLinks",
 CellChangeTimes->{{3.6767400304797096`*^9, 3.6767400585735884`*^9}, {
   3.6767400903865814`*^9, 3.6767400935803347`*^9}, {3.676740189970602*^9, 
   3.676740189971103*^9}, 3.6767403437296715`*^9},
 CellID->110235343],

Cell[TextData[ButtonBox["196 Algorithm: Palindromic numbers",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://demonstrations.wolfram.com/196AlgorithmPalindromicNumbers/"], 
   None},
 ButtonNote->
  "http://demonstrations.wolfram.com/196AlgorithmPalindromicNumbers/"]], \
"RelatedLinks",
 CellChangeTimes->{{3.6767402863441296`*^9, 3.6767403123430166`*^9}},
 CellID->431484144],

Cell[TextData[ButtonBox["Reverse-Then-Add Sequences",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://demonstrations.wolfram.com/ReverseThenAddSequences/"], None},
 ButtonNote->
  "http://demonstrations.wolfram.com/ReverseThenAddSequences/"]], \
"RelatedLinks",
 CellChangeTimes->{{3.6767403691975956`*^9, 3.676740408169938*^9}, {
  3.6767405374325514`*^9, 3.676740560331811*^9}},
 CellID->15223577],

Cell[TextData[ButtonBox["Reversal Addition related sequences",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://demonstrations.wolfram.com/ReversalAdditionRelatedSystems/"], 
   None},
 ButtonNote->
  "http://demonstrations.wolfram.com/ReversalAdditionRelatedSystems/"]], \
"RelatedLinks",
 CellChangeTimes->{{3.6767405628776474`*^9, 3.6767405883108907`*^9}},
 CellID->534575256],

Cell[TextData[ButtonBox["RATS Sequences",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://demonstrations.wolfram.com/RATSSequences/"], None},
 ButtonNote->
  "http://demonstrations.wolfram.com/RATSSequences/"]], "RelatedLinks",
 CellChangeTimes->{{3.6767405915723543`*^9, 3.6767405927571115`*^9}, {
  3.676740625853815*^9, 3.676740643112234*^9}},
 CellID->172696227]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "AuthorSection"],

Cell["Contributed by: Neel Gandhi (Wolfram Summer Camp 2016)", "Author",
 CellChangeTimes->{{3.67673992702921*^9, 3.6767399449991374`*^9}, {
  3.676799201027299*^9, 3.6767992020733523`*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1164, 717},
WindowMargins->{{128, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (June 18, 2016)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "Demonstration.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "ResizeImages"->{
  Cell[202028, 4367, 353, 9, 22, "ControlSuggestions",
   CellTags->"ResizeImages"]},
 "RotateAndZoomIn3D"->{
  Cell[202384, 4378, 678, 16, 22, "ControlSuggestions",
   CellTags->"RotateAndZoomIn3D"]},
 "DragLocators"->{
  Cell[203065, 4396, 340, 11, 22, "ControlSuggestions",
   CellTags->"DragLocators"]},
 "CreateAndDeleteLocators"->{
  Cell[203408, 4409, 637, 15, 22, "ControlSuggestions",
   CellTags->"CreateAndDeleteLocators"]},
 "SliderZoom"->{
  Cell[204048, 4426, 844, 21, 22, "ControlSuggestions",
   CellTags->"SliderZoom"]},
 "GamepadControls"->{
  Cell[204895, 4449, 369, 9, 22, "ControlSuggestions",
   CellTags->"GamepadControls"]},
 "AutomaticAnimation"->{
  Cell[205267, 4460, 1464, 31, 22, "ControlSuggestions",
   CellTags->"AutomaticAnimation"]},
 "BookmarkAnimation"->{
  Cell[206734, 4493, 908, 21, 22, "ControlSuggestions",
   CellTags->"BookmarkAnimation"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"ResizeImages", 212282, 4652},
 {"RotateAndZoomIn3D", 212392, 4655},
 {"DragLocators", 212503, 4658},
 {"CreateAndDeleteLocators", 212620, 4661},
 {"SliderZoom", 212735, 4664},
 {"GamepadControls", 212842, 4667},
 {"AutomaticAnimation", 212956, 4670},
 {"BookmarkAnimation", 213074, 4673}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 120, 1, 74, "DemoTitle"],
Cell[CellGroupData[{
Cell[725, 27, 33, 0, 275, "InitializationSection"],
Cell[761, 29, 19009, 521, 960, "Input",
 InitializationCell->True,
 CellID->223664927]
}, Open  ]],
Cell[CellGroupData[{
Cell[19807, 555, 29, 0, 231, "ManipulateSection"],
Cell[CellGroupData[{
Cell[19861, 559, 5069, 114, 278, "Input"],
Cell[24933, 675, 35016, 726, 539, "Output",
 CellID->95796146]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[59998, 1407, 36, 0, 169, "ManipulateCaptionSection"],
Cell[60037, 1409, 1649, 24, 142, "ManipulateCaption"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61723, 1438, 28, 0, 172, "ThumbnailSection"],
Cell[61754, 1440, 35030, 727, 539, "Output",
 CellID->192628579]
}, Open  ]],
Cell[CellGroupData[{
Cell[96821, 2172, 28, 0, 142, "SnapshotsSection"],
Cell[96852, 2174, 35009, 726, 539, "Output",
 CellID->119469069],
Cell[131864, 2902, 35026, 727, 539, "Output",
 CellID->514377662],
Cell[166893, 3631, 35029, 727, 539, "Output",
 CellID->26646151]
}, Open  ]],
Cell[201937, 4361, 26, 0, 335, "DetailsSection"],
Cell[CellGroupData[{
Cell[201988, 4365, 37, 0, 114, "ControlSuggestionsSection"],
Cell[202028, 4367, 353, 9, 22, "ControlSuggestions",
 CellTags->"ResizeImages"],
Cell[202384, 4378, 678, 16, 22, "ControlSuggestions",
 CellTags->"RotateAndZoomIn3D"],
Cell[203065, 4396, 340, 11, 22, "ControlSuggestions",
 CellTags->"DragLocators"],
Cell[203408, 4409, 637, 15, 22, "ControlSuggestions",
 CellTags->"CreateAndDeleteLocators"],
Cell[204048, 4426, 844, 21, 22, "ControlSuggestions",
 CellTags->"SliderZoom"],
Cell[204895, 4449, 369, 9, 22, "ControlSuggestions",
 CellTags->"GamepadControls"],
Cell[205267, 4460, 1464, 31, 22, "ControlSuggestions",
 CellTags->"AutomaticAnimation"],
Cell[206734, 4493, 908, 21, 22, "ControlSuggestions",
 CellTags->"BookmarkAnimation"]
}, Open  ]],
Cell[CellGroupData[{
Cell[207679, 4519, 30, 0, 155, "SearchTermsSection"],
Cell[207712, 4521, 126, 2, 22, "SearchTerms",
 CellID->491233193],
Cell[207841, 4525, 126, 2, 22, "SearchTerms",
 CellID->536252785],
Cell[207970, 4529, 178, 3, 22, "SearchTerms",
 CellID->38449857],
Cell[208151, 4534, 183, 3, 22, "SearchTerms",
 CellID->212989253]
}, Open  ]],
Cell[CellGroupData[{
Cell[208371, 4542, 31, 0, 141, "RelatedLinksSection"],
Cell[208405, 4544, 372, 8, 22, "RelatedLinks",
 CellID->261810773],
Cell[208780, 4554, 373, 8, 22, "RelatedLinks",
 CellID->657775774],
Cell[209156, 4564, 465, 10, 22, "RelatedLinks",
 CellID->504571886],
Cell[209624, 4576, 447, 9, 22, "RelatedLinks",
 CellID->110235343],
Cell[210074, 4587, 384, 9, 22, "RelatedLinks",
 CellID->431484144],
Cell[210461, 4598, 406, 9, 22, "RelatedLinks",
 CellID->15223577],
Cell[210870, 4609, 385, 9, 22, "RelatedLinks",
 CellID->534575256],
Cell[211258, 4620, 373, 8, 22, "RelatedLinks",
 CellID->172696227]
}, Open  ]],
Cell[CellGroupData[{
Cell[211668, 4633, 25, 0, 141, "AuthorSection"],
Cell[211696, 4635, 190, 2, 22, "Author"]
}, Open  ]]
}, Open  ]]
}
]
*)

